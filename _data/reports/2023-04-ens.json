{
  "circa": {
    "title": "ENS Contest",
    "sponsor": "ENS",
    "slug": "2023-04-ens",
    "date": "2023-08-31",
    "findings": "https://github.com/code-423n4/2023-04-ens-findings/issues",
    "contest": 232
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the ENS smart contract system written in Solidity. The audit took place between April 14—April 28 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>65 Wardens contributed reports to the ENS audit:</p>\n<ol>\n<li><a href=\"https://twitter.com/3xJanx2009\">0x73696d616f</a></li>\n<li><a href=\"https://twitter.com/0xAgro\">0xAgro</a></li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li><a href=\"https://twitter.com/MarioPoneder\">0xTheC0der</a></li>\n<li><a href=\"https://twitter.com/abarbatei\">ABA</a></li>\n<li><a href=\"https://twitter.com/akshaysrivastv\">AkshaySrivastav</a></li>\n<li><a href=\"https://www.arbitraryexecution.com/\">ArbitraryExecution</a> (cr0, arbitrary-wanaks, tridearm, CodeBeholder, WGMIApe, pbwaffles, and yowl)</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li>BRONZEDISC</li>\n<li><a href=\"https://twitter.com/bauchibred?s=21&#x26;t=7sv-1qcnwtkdTA81Iog0yQ\">Bauchibred</a></li>\n<li>Dyear</li>\n<li>Eurovickk</li>\n<li>Holmgren</li>\n<li>IceBear</li>\n<li>J4de</li>\n<li><a href=\"https://twitter.com/0xJCN\">JCN</a></li>\n<li>Jerry0x</li>\n<li><a href=\"https://twitter.com/TamayoNft\">Jorgect</a></li>\n<li>Josiah</li>\n<li>Kek</li>\n<li><a href=\"https://twitter.com/LobsterMindset\">Lilyjjo</a></li>\n<li>MalfurionWhitehat</li>\n<li>MohammedRizwan</li>\n<li>Parad0x</li>\n<li>RaymondFam</li>\n<li>Recep</li>\n<li><a href=\"https://rickardlarsson22.github.io/\">Rickard</a></li>\n<li>SAAJ</li>\n<li><a href=\"https://twitter.com/SAPanahloo\">SaharAP</a></li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li><a href=\"https://twitter.com/Shaping_Myself\">Shubham</a></li>\n<li>Shyn</li>\n<li><a href=\"https://twitter.com/trust__90\">Trust</a></li>\n<li><a href=\"https://github.com/udsene\">Udsen</a></li>\n<li><a href=\"https://twitter.com/auditor0517\">auditor0517</a></li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>brgltd</li>\n<li><a href=\"https://twitter.com/CatellaTech\">catellatech</a></li>\n<li>chaduke</li>\n<li>codeslide</li>\n<li>d3e4</li>\n<li>descharre</li>\n<li>eierina</li>\n<li><a href=\"https://twitter.com/favelanky\">favelanky</a></li>\n<li><a href=\"https://www.truscova.com/\">hassan-truscova</a></li>\n<li><a href=\"https://twitter.com/henryxf3\">hihen</a></li>\n<li>j4ld1na</li>\n<li>lukris02</li>\n<li>matrix_0wl</li>\n<li><a href=\"https://www.linkedin.com/in/naman-agrawal1778/\">naman1778</a></li>\n<li>niser93</li>\n<li><a href=\"https://twitter.com/nobody20185\">nobody2018</a></li>\n<li>openwide</li>\n<li>pontifex</li>\n<li>rvierdiiev</li>\n<li><a href=\"https://medium.com/@saneryee-studio\">saneryee</a></li>\n<li>schrodinger</li>\n<li>tnevler</li>\n<li><a href=\"https://twitter.com/urataps\">urataps</a></li>\n</ol>\n<p>This audit was judged by <a href=\"https://twitter.com/lsdan_defi\">LSDan</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/liveactionllama\">liveactionllama</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 7 unique vulnerabilities. Of these vulnerabilities, 0 received a risk rating in the category of HIGH severity and 7 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 45 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 8 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-04-ens\">C4 ENS audit repository</a>, and is composed of 18 smart contracts written in the Solidity programming language and includes 2,022 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"medium-risk-findings-7\" style=\"position:relative;\"><a href=\"#medium-risk-findings-7\" aria-label=\"medium risk findings 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (7)</h1>\n<h2 id=\"m-01-hexutilshexstringtobytes32-and-hexutilshextoaddress-may-return-incorrect-results\" style=\"position:relative;\"><a href=\"#m-01-hexutilshexstringtobytes32-and-hexutilshextoaddress-may-return-incorrect-results\" aria-label=\"m 01 hexutilshexstringtobytes32 and hexutilshextoaddress may return incorrect results permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/281\">[M-01] <code>HexUtils.hexStringToBytes32()</code> and <code>HexUtils.hexToAddress()</code> may return incorrect results</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/281\">hihen</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/332\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/328\">eierina</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/240\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/218\">Kek</a>, and <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/57\">chaduke</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L11\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L11</a><br>\n<a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L68\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L68</a></p>\n<p>The <code>HexUtils.hexStringToBytes32()</code> and <code>HexUtils.hexToAddress()</code> may return incorrect results if the input data provided is not in a standard format.</p>\n<p>This could cause the contract to behave abnormally in some scenarios or be exploited for malicious purposes.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The function <code>HexUtils.hexStringToBytes32(bytes memory str, uint256 idx, uint256 lastIdx)</code> is used to convert a hexadecimal string <code>str[idx...lastIndx]</code> to a <code>bytes32</code>.</p>\n<p>However, the function lacks some critical checks on the input data, resulting in the following situations:</p>\n<ol>\n<li>If the length <code>lastIdx - idx</code> is odd, it will not revert, but will read an additional out-of-range byte <code>str[lastIdx]</code> and return it.</li>\n<li>If the length <code>lstIdx - idx > 32</code>, it will not revert, but will discard the excess data at the beginning and return the last 32 bytes.</li>\n<li>If the length <code>lstIdx - idx &#x3C; 32</code>, it will not revert, but will pad the data with zeros at the beginning.</li>\n</ol>\n<p>The following test code verifies these situations:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/test/utils/HexUtils.js b/test/utils/HexUtils.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 296eadf..e12e11c 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/test/utils/HexUtils.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/test/utils/HexUtils.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -16,6 +16,44 @@ describe(&#39;HexUtils&#39;, () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     HexUtils = await HexUtilsFactory.deploy()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  describe.only(&#39;Special cases for hexStringToBytes32()&#39;, () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    const hex32Bytes = &#39;5cee339e13375638553bdf5a6e36ba80fb9f6a4f0783680884d92b558aa471da&#39;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    it(&#39;odd length 1&#39;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      let [bytes32, valid] = await HexUtils.hexStringToBytes32(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        toUtf8Bytes(hex32Bytes), 0, 63,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(valid).to.equal(true)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      // the last 4 bits (half byte) of hex32Bytes is out of range but read</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(bytes32).to.equal(&#39;0x&#39; + hex32Bytes)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    it(&#39;odd length 2&#39;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      let [bytes32, valid] = await HexUtils.hexStringToBytes32(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        toUtf8Bytes(hex32Bytes + &#39;00&#39;), 1, 64,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(valid).to.equal(true)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      // the first half byte of &#39;00&#39; is out of range but read</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(bytes32).to.equal(&#39;0x&#39; + hex32Bytes.substring(1) + &#39;0&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    it(&#39;not enough length&#39;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      let [bytes32, valid] = await HexUtils.hexStringToBytes32(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        toUtf8Bytes(hex32Bytes), 0, 2,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(valid).to.equal(true)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      // only one byte is read, but it is expanded to 32 bytes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(bytes32).to.equal(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        &#39;0x000000000000000000000000000000000000000000000000000000000000005c&#39;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    it(&#39;exceed length&#39;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      let [bytes32, valid] = await HexUtils.hexStringToBytes32(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        toUtf8Bytes(hex32Bytes + &quot;1234&quot;), 0, 64 + 4,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(valid).to.equal(true)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      // 34 bytes is read, and returns the last 32 bytes</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+      expect(bytes32).to.equal(&#39;0x&#39; + hex32Bytes.substring(4) + &#39;1234&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   describe(&#39;hexStringToBytes32()&#39;, () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     it(&#39;Converts a hex string to bytes32&#39;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">       let [bytes32, valid] = await HexUtils.hexStringToBytes32(</span></span></code></pre>\n<p>Test code outputs:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">  HexUtils</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    Special cases for hexStringToBytes32()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ✓ odd length 1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ✓ odd length 2</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ✓ not enough length</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      ✓ exceed length</span></span></code></pre>\n<p>Since <a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L68\">HexUtils.hexToAddress()</a> is implemented by directly calling <code>HexUtils.hexStringToBytes32()</code>, it also has similar issues.</p>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Should revert the function if the input length <code>lastIdx - idx</code> is odd.</p>\n<p>For cases where the length is greater than or less than 32 (or 20)</p>\n<ul>\n<li>if the current implementation meets the requirements, the design should be detailed in a comment</li>\n<li>otherwise the function should revert if the length is not 32 (or 20)</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/281#issuecomment-1536208794\">Arachnid (ENS) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-02-invalid-addresses-will-be-accepted-as-resolvers-possibly-bricking-assets\" style=\"position:relative;\"><a href=\"#m-02-invalid-addresses-will-be-accepted-as-resolvers-possibly-bricking-assets\" aria-label=\"m 02 invalid addresses will be accepted as resolvers possibly bricking assets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/258\">[M-02] Invalid addresses will be accepted as resolvers, possibly bricking assets</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/258\">Trust</a></em></p>\n<p>The <code>hexToAddress</code> utility parses a string into an address type.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function hexToAddress(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        bytes memory str,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 idx,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 lastIdx</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ) internal pure returns (address, bool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (lastIdx - idx &lt; 40) return (address(0x0), false);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        (bytes32 r, bool valid) = hexStringToBytes32(str, idx, lastIdx);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return (address(uint160(uint256(r))), valid);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>The issue is that in the return statement, the <code>bytes32</code> type is reduced from 256 bits to 160 bits, without checking that the truncated bytes are zero. When the upper bits are not zero, the <code>bytes32</code> is not a valid address and the function must return <code>false</code> in the second parameter. However, it instead returns an incorrect trimmed number.</p>\n<p>The utility is used in the flow below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">proveAndClaim</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t_claim</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\tgetOwnerAddress</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\tparseRR</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\t\tparseString</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\t\t\thexToAdress</span></span></code></pre>\n<p>The incorrect address would be returned from <code>_claim</code> and then used as the owner address for <code>ens.setSubnodeOwner</code>. This would brick the node.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function proveAndClaim(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bytes memory name,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    DNSSEC.RRSetWithSignature[] memory input</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">) public override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    (bytes32 rootNode, bytes32 labelHash, address addr) = _claim(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        name,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        input</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ens.setSubnodeOwner(rootNode, labelHash, addr);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Lack of validation can lead to ENS addresses becoming permanently bricked.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a check for the upper 96 bits in the highlighted return statement.</p>\n<h3 id=\"note-for-judge\" style=\"position:relative;\"><a href=\"#note-for-judge\" aria-label=\"note for judge permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Note for judge</h3>\n<p>Historically, the judge has awarded medium severity to various issues which rely on some user error, are easy to check/fix and present material risk. I respect this line of thought and for the sake of consistency I believe this submission should be judged similarly.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/258#issuecomment-1571591149\">Arachnid (ENS) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>The upshot of this is that if you provide an invalid address in DNS, it will be set to a (possibly different) invalid address in ENS. This can be fixed by correcting the address in DNS and calling proveAndClaim again. I would argue this should be considered minor at best.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-offchain-name-resolution-would-fail-despite-the-located-dns-resolver-being-fully-functional\" style=\"position:relative;\"><a href=\"#m-03-offchain-name-resolution-would-fail-despite-the-located-dns-resolver-being-fully-functional\" aria-label=\"m 03 offchain name resolution would fail despite the located dns resolver being fully functional permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256\">[M-03] Offchain name resolution would fail despite the located DNS resolver being fully functional</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256\">Trust</a></em></p>\n<p>In OffchainDNSResolver, <code>resolveCallback</code> parses resource  records received off-chain and extracts the DNS resolver address:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t// Look for a valid ENS-DNS TXT record</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t(address dnsresolver, bytes memory context) = parseRR(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\titer.data,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\titer.rdataOffset,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t\titer.nextOffset</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t);</span></span></code></pre>\n<p>The contract supports three methods of resolution through the resolver:</p>\n<ol>\n<li>IExtendedDNSResolver.resolve</li>\n<li>IExtendedResolver.resolve</li>\n<li>Arbitrary call with the <code>query</code> parameter originating in <code>resolve()</code></li>\n</ol>\n<p>Code is below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">            // If we found a valid record, try to resolve it</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            if (dnsresolver != address(0)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    IERC165(dnsresolver).supportsInterface(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        IExtendedDNSResolver.resolve.selector</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    return</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        IExtendedDNSResolver(dnsresolver).resolve(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                            name,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                            query,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                            context</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                } else if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    IERC165(dnsresolver).supportsInterface(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        IExtendedResolver.resolve.selector</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    )</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    return IExtendedResolver(dnsresolver).resolve(name, query);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    (bool ok, bytes memory ret) = address(dnsresolver)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        .staticcall(query);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    if (ok) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        return ret;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                        revert CouldNotResolve(name);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            }</span></span></code></pre>\n<p>The issue is that a resolver could support option (3), but execution would revert prior to the <code>query</code> call. The function uses <code>supportsInterface</code> in an unsafe way. It should first check that the contract implements ERC165, which will guarantee the call won’t revert. Dynamic resolvers are not likely in practice to implement ERC165 as there’s no specific signature to support ahead of time.</p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Resolution with custom DNS resolvers are likely to fail.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use the OZ <code>ERC165Checker.sol</code> library, which <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/f959d7e4e6ee0b022b41e5b644c79369869d8411/contracts/utils/introspection/ERC165Checker.sol#L36\">addresses</a> the issue:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // query support of both ERC165 as per the spec and support of _interfaceId</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return supportsERC165(account) &amp;&amp; supportsERC165InterfaceUnchecked(account, interfaceId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256#issuecomment-1536257482\">Arachnid (ENS) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>ERC165 support is required in order to be a valid resolver. Any resolver that doesn’t support it is incorrectly implemented.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256#issuecomment-1539812287\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is easy to protect against. Issue stands.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256#issuecomment-1540226929\">Arachnid (ENS) commented</a>:</strong></p>\n<blockquote>\n<p>There’s no point building a protection for this; either way the result is a failed resolution.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256#issuecomment-1545645183\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>The OZ implementation would guarantee that the else clause gets triggered and the error returned is understandable / sane. In this case, a very simple fix will significantly enhance the composability of the protocol and improve the experience of dev users.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256#issuecomment-1548256807\">Arachnid (ENS) commented</a>:</strong></p>\n<blockquote>\n<p>I continue to disagree this is an issue. ERC165 support is a baseline requirement for a resolver; checking it’s supported is a pointless waste of gas.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/256#issuecomment-1551319058\">IllIllI (warden) commented</a>:</strong></p>\n<blockquote>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/83836eff1975fb47dae6b0982afd0b00294165cf/contracts/utils/UniversalResolver.sol#L498-L510\">https://github.com/code-423n4/2023-04-ens/blob/83836eff1975fb47dae6b0982afd0b00294165cf/contracts/utils/UniversalResolver.sol#L498-L510</a> this code shows that at least in other areas, the possibility failure is acknowledged and handled.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-incorrect-implementation-of-recordparserreadkeyvalue\" style=\"position:relative;\"><a href=\"#m-04-incorrect-implementation-of-recordparserreadkeyvalue\" aria-label=\"m 04 incorrect implementation of recordparserreadkeyvalue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/246\">[M-04] Incorrect implementation of <code>RecordParser.readKeyValue()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/246\">hihen</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/333\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/329\">eierina</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/189\">Parad0x</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/186\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/108\">nobody2018</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/106\">bin2chen</a>, and <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/73\">chaduke</a></em></p>\n<p><code>RecordParser.readKeyValue()</code> returns a wrong <code>value</code> if the terminator not found.<br>\nThis is a fundamental library and any contract using it may experience unexpected errors and problems due to this bug.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The implementation logic of <code>RecordParser.readKeyValue(bytes memory input, uint256 offset, uint256 len)</code> is roughly as follows:</p>\n<ol>\n<li>Find the character <code>=</code> in the range <code>offset..(offset+len)</code> of input and record its position in <code>separator</code>.</li>\n<li>Find the space character in the range <code>(separator+1)...(offset+len)</code> of input, and record its position in <code>terminator</code>.</li>\n<li>Return <code>key: input[offset..separator]</code>, <code>value: input[(separator+1)..terminator]</code>, <code>nextOffset: terminator+1</code></li>\n</ol>\n<p>The problem is that if the space is not found in step 2, terminator will be set to <code>input.length</code> - <a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/RecordParser.sol#L34\">RecordParser.sol#L34</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (terminator == type(uint256).max) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        terminator = input.length;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>This is incorrect because the parameters passed require data to be read within range <code>offset..(offset+len)</code>, it should not return a value beyond <code>offset+len</code>.</p>\n<p>For example, suppose we have: <code>input = \"...;key1=val1 key2=val2;...\"</code> and <code>offset</code> is the start position of <code>key2</code>.</p>\n<p>If we call <code>readKeyValue(input, offset, 9)</code>, the function will return:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">key: &quot;key2&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">value: &quot;val2;...&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">nextOffset: input.length+1</span></span></code></pre>\n<p>The returned <code>value</code> is wrong due to the incorrect implementation of RecordParser.</p>\n<p>The correct return should be:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">key: &quot;key2&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">value: &quot;val2&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">nextOffset: offset+9</span></span></code></pre>\n<p>Test code for PoC:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/contracts/dnsregistrar/mocks/DummyParser.sol b/contracts/dnsregistrar/mocks/DummyParser.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">new file mode 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 0000000..538e652</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- /dev/null</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/contracts/dnsregistrar/mocks/DummyParser.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -0,0 +1,34 @@</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+pragma solidity ^0.8.4;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+import &quot;../../dnssec-oracle/BytesUtils.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+import &quot;../RecordParser.sol&quot;;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+contract DummyParser {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    using BytesUtils for bytes;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    // parse data in format: name;key1=value1 key2=value2;url</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    function parseData(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        bytes memory data,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        uint256 kvCount</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    ) external pure returns (string memory name, string[] memory keys, string[] memory values, string memory url) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        uint256 len = data.length;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        // retrieve name</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        uint256 sep1 = data.find(0, len, &quot;;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        name = string(data.substring(0, sep1));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        // retrieve url</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        uint256 sep2 = data.find(sep1 + 1, len - sep1, &quot;;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        url = string(data.substring(sep2 + 1, len - sep2 - 1));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        keys = new string[](kvCount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        values = new string[](kvCount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        // retrieve keys and values</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        uint256 offset = sep1 + 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        for (uint256 i; i &lt; kvCount &amp;&amp; offset &lt; len; i++) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+            (bytes memory key, bytes memory val, uint256 nextOffset) = RecordParser.readKeyValue(data, offset, sep2 - offset);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+            keys[i] = string(key);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+            values[i] = string(val);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+            offset = nextOffset;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/test/DummyParser.test.js b/test/DummyParser.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">new file mode 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 0000000..396557d</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- /dev/null</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/test/DummyParser.test.js</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -0,0 +1,27 @@</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+const { expect } = require(&#39;chai&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+const { ethers } = require(&#39;hardhat&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+const { toUtf8Bytes } = require(&#39;ethers/lib/utils&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+describe(&#39;DummyParser&#39;, () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  let parser</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  before(async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    const factory = await ethers.getContractFactory(&#39;DummyParser&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    parser = await factory.deploy()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  it(&#39;parse data&#39;, async () =&gt; {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    const data = &quot;usdt;issuer=tether decimals=18;https://tether.to&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    const [name, keys, values, url] = await parser.parseData(toUtf8Bytes(data), 2)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    // correct name</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    expect(name).to.eq(&#39;usdt&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    // correct keys and values</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    expect(keys[0]).to.eq(&#39;issuer&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    expect(values[0]).to.eq(&#39;tether&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    expect(keys[1]).to.eq(&#39;decimals&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    // incorrect last value</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    expect(values[1]).to.eq(&#39;18;https://tether.to&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    // correct url</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    expect(url).to.eq(&#39;https://tether.to&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+  })</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+})</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\\ No newline at end of file</span></span></code></pre>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VS Code</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We should change <a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/RecordParser.sol#L34\">the assignment of <code>terminator</code></a> so that it cannot exceed the query range:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/contracts/dnsregistrar/RecordParser.sol b/contracts/dnsregistrar/RecordParser.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 339f213..876a87f 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/contracts/dnsregistrar/RecordParser.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/contracts/dnsregistrar/RecordParser.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -31,11 +31,12 @@ library RecordParser {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">             &quot; &quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         if (terminator == type(uint256).max) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-            terminator = input.length;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+            terminator = len + offset;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+            nextOffset = terminator;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+        } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+            nextOffset = terminator + 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         key = input.substring(offset, separator - offset);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">         value = input.substring(separator + 1, terminator - separator - 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-        nextOffset = terminator + 1;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"> }</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/246#issuecomment-1536266531\">Arachnid (ENS) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-05-unintentionally-register-a-non-relevant-dns-name-owner\" style=\"position:relative;\"><a href=\"#m-05-unintentionally-register-a-non-relevant-dns-name-owner\" aria-label=\"m 05 unintentionally register a non relevant dns name owner permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/198\">[M-05] Unintentionally register a non-relevant DNS name owner</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/198\">SaharAP</a>, also found by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/144\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/109\">nobody2018</a>, and <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/41\">Lilyjjo</a></em></p>\n<p>If a user proves and claims a DNS name using a wrong address format, it executes successfully without getting any error and the DNS name owner will be changed to a new unknown address.</p>\n<p>I considered this as medium severity, as it is high impact finding with low likelihood. Cause the person who owns the new address can take control of the ENS name and transfer its ownership to another account. But because if a person finds out, she can immediately replace the correct address, the probability of such an event is low.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the following scenario, I provided a value called <code>arbitrarybytes</code> which is 22 bytes and set it as the ‘foo.test’ DNS owner address. <code>proveAndClaim()</code> function will execute successfully. Finally, the owner of the ENS name would be the value set as <code>newOwner</code> which is the last 20 bytes (from the right) of the provided value in <code>arbitrarybytes</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">arbitrarybytes</span><span class=\"mtk1\">= </span><span class=\"mtk8\">&#39;0x9fD6E51AaD88f6f4CE6aB8827279CFFFb92266332265&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newOwner</span><span class=\"mtk1\">= </span><span class=\"mtk8\">&#39;0xe51Aad88f6F4CE6aB8827279cFFFB92266332265&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proof</span><span class=\"mtk1\"> = [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">hexEncodeSignedSet</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rootKeys</span><span class=\"mtk1\">(</span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">, </span><span class=\"mtk12\">inception</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">hexEncodeSignedSet</span><span class=\"mtk1\">(</span><span class=\"mtk11\">testRrset</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;foo.test&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">arbitrarybytes</span><span class=\"mtk1\">)),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">registrar</span><span class=\"mtk1\">.</span><span class=\"mtk11\">proveAndClaim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">hexEncodeName</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;foo.test&#39;</span><span class=\"mtk1\">), </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">, {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">from:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assert</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equal</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ens</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">namehash</span><span class=\"mtk1\">.</span><span class=\"mtk11\">hash</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&#39;foo.test&#39;</span><span class=\"mtk1\">)), </span><span class=\"mtk12\">newOwner</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vscode</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To check the validity of the owner address, the code first checks for the prefix which must be <code>a=0x</code>, and second for the length of the address which should not be less than 20 bytes or 40 characters through <code>hexToAddress()</code> function. The length of the address can also be checked to not be larger than 40 characters.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">hexToAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">str</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">40</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x0</span><span class=\"mtk1\">), </span><span class=\"mtk4\">false</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">valid</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">hexStringToBytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">str</span><span class=\"mtk1\">, </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint160</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">r</span><span class=\"mtk1\">))), </span><span class=\"mtk12\">valid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/198#issuecomment-1536285606\">Arachnid (ENS) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>I think this warrants a severity of ‘note’, as it requires the user to already supply an invalid-length address. It should revert rather than silently truncating.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/198#issuecomment-1538116480\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Medium risk is appropriate in this case. It is very easy to guard against the user making the mistake described.</p>\n<p>ref: <a href=\"https://github.com/code-423n4/org/issues/53#issuecomment-1340685618\">https://github.com/code-423n4/org/issues/53#issuecomment-1340685618</a></p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-validatesignature-in-ellipticcurve-mixes-up-jacobian-and-projective-coordinates\" style=\"position:relative;\"><a href=\"#m-06-validatesignature-in-ellipticcurve-mixes-up-jacobian-and-projective-coordinates\" aria-label=\"m 06 validatesignature in ellipticcurve mixes up jacobian and projective coordinates permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/180\">[M-06] <code>validateSignature(...)</code> in <code>EllipticCurve</code> mixes up Jacobian and projective coordinates</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/180\">Holmgren</a>, also found by <a href=\"undefined\">auditor0517</a></em></p>\n<p>Currently not exploitable because this bug is cancelled out by another issue (see my Gas report). If the other issue is fixed <code>validateSignature</code> will return completely incorrect values.</p>\n<h3 id=\"details\" style=\"position:relative;\"><a href=\"#details\" aria-label=\"details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Details</h3>\n<p>In <a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L415\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L415</a> <code>validateSignature</code> converts to affine coordinates from Jacobian coordinates, i.e. $X_a = X_j \\cdot (Z_j^{-1})^2$.</p>\n<p>However, the inputs from the previous computation <a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L408\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L408</a> are actually projective coordinates and the correct conversion formula is $X_a = X_p \\cdot Z_p^{-1}$.</p>\n<p>This has been working so far only because the <code>EllipticCurve</code> performs a redundant chain of immediate conversions projective->affine->projective->affine and so during that last conversion $Z = 1$. Should the chain of redundant conversions be fixed, <code>validateSignature</code> will no longer work correctly.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To just fix this bug:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/algorithms/EllipticCurve.sol b/contracts/dnssec-oracle/algorithms/EllipticCurve.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 6861264..ea7e865 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/algorithms/EllipticCurve.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/algorithms/EllipticCurve.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -412,7 +412,7 @@ contract EllipticCurve {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 Px = inverseMod(P[2], p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        Px = mulmod(P[0], mulmod(Px, Px, p), p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        Px = mulmod(P[0], Px, p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return Px % n == rs[0];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p>Or to fix this bug and optimize out the redundant conversions chain:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/algorithms/EllipticCurve.sol b/contracts/dnssec-oracle/algorithms/EllipticCurve.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 6861264..8568be2 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/algorithms/EllipticCurve.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/algorithms/EllipticCurve.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -405,14 +405,13 @@ contract EllipticCurve {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 sInv = inverseMod(rs[1], n);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (x1, y1) = multiplyScalar(gx, gy, mulmod(uint256(message), sInv, n));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         (x2, y2) = multiplyScalar(Q[0], Q[1], mulmod(rs[0], sInv, n));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256[3] memory P = addAndReturnProjectivePoint(x1, y1, x2, y2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        (uint256 Px,, uint256 Pz) = addProj(x1, y1, 1, x2, y2, 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (P[2] == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (Pz == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 Px = inverseMod(P[2], p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        Px = mulmod(P[0], mulmod(Px, Px, p), p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        Px = mulmod(Px, inverseMod(Pz, p), p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return Px % n == rs[0];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/180#issuecomment-1536298235\">Arachnid (ENS) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/180#issuecomment-1544801992\">d3e4 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I agree that EllipticCurve.sol is somewhat of a bodge. It’s correct what the warden says in that ”<code>EllipticCurve</code> mixes up” something. But actually it adds affine points and then trivially converts them to jacobian/projective coordinates. Since they are trivial they are the same in jacobian as in projective, so one could say that it’s as much a misnamed function as a confused computation.</p>\n<p>But it’s also correct what the warden himself said that it is “currently not exploitable”. In fact, I’m quite sure it’s not exploitable even if “the other issue is fixed”. Then it will just invalidate every signature.</p>\n<p>Both recommendations here are therefore just gas savings and refactoring. <code>mulmod(Px, Px, p)</code> is indeed a redundant computation, because <code>Px == 1</code> always here. But so is <code>inverseMod(P[2], p)</code> redundant. The first recommendation can be simplified even further to just</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- uint256 Px = inverseMod(P[2], p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- Px = mulmod(P[0], mulmod(Px, Px, p), p);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- return Px % n == rs[0];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ return P[0] % n == rs[0];</span></span></span></code></pre>\n<p>instead, since <code>P[2] == 1</code>.</p>\n<p>The second recommendation is a better optimisation but still does redundant conversions in <code>multiplyScalar</code>, which also should be corrected then. The whole point of using projective coordinates is to do the modular inverse (i.e. convert to affine) only at the end.</p>\n<p>In any case, there is nothing exploitable here, no funds or functionality are at risk. The code does what it’s supposed to do as it is, just not in the prettiest way. And the way in which the hypothetical issue is proposed to arise is by fixing the very same thing that the hypothetical issue is itself based on, i.e. it is said that fixing the needless conversion between coordinate representations causes an error due to coordinate conversions. One should assume that reworking the coordinate handling would fix all coordinate issues. And if the bug described here were to arise in the suggested manner, it would be immediately noticed in testing.</p>\n<p><em>This is a bug that is not yet a bug but could be a bug that is impossible to miss if someone were to create this bug so it’s never going to actually be a bug.</em></p>\n<p>I think this is a good catch, but the severity is only QA/Gas.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/180#issuecomment-1545670843\">LSDan (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with @d3e4 that the bug is highly unlikely to make it to production without being caught. In this case, however, if it were to make it into production, the “function of the protocol or availability could be impacted”. That makes this a valid medium in my view. I agree with the warden and sponsor.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-missing-recursive-calls-handling-in-offchaindnsresolver-ccip-aware-contract\" style=\"position:relative;\"><a href=\"#m-07-missing-recursive-calls-handling-in-offchaindnsresolver-ccip-aware-contract\" aria-label=\"m 07 missing recursive calls handling in offchaindnsresolver ccip aware contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/124\">[M-07] Missing recursive calls handling in <code>OffchainDNSResolver</code> CCIP-aware contract</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/124\">MalfurionWhitehat</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/OffchainDNSResolver.sol#L109-L113\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/OffchainDNSResolver.sol#L109-L113</a><br>\n<a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/OffchainDNSResolver.sol#L119\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/OffchainDNSResolver.sol#L119</a></p>\n<p>The <code>resolveCallback</code> function from <code>OffchainDNSResolver</code> is used as part of the EIP-3668 standard to properly resolve DNS names using an off-chain gateway and validating RRsets against the DNSSEC oracle.</p>\n<p>The issue is that the function lacks proper error handling, specifically, a try/catch block to properly bubble up <code>OffchainLookup</code> error from the <code>dnsresolver</code> extracted from the RRset. As the EIP specifies,</p>\n<blockquote>\n<p><em>When a CCIP-aware contract wishes to make a call to another contract, and the possibility exists that the callee may implement CCIP read, the calling contract MUST catch all <code>OffchainLookup</code> errors thrown by the callee, and revert with a different error if the <code>sender</code> field of the error does not match the callee address.</em><br>\n<em>[…]</em><br>\n<em>Where the possibility exists that a callee implements CCIP read, a CCIP-aware contract MUST NOT allow the default solidity behaviour of bubbling up reverts from nested calls.</em></p>\n</blockquote>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>As per the EIP, the result would be an OffchainLookup that looks valid to the client, as the sender field matches the address of the contract that was called, but does not execute correctly.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Client calls <code>OffchainDNSResolver.resolve</code>, which reverts with <code>OffchainLookup</code>, and prompts the client to execute <code>resolveCallback</code> after having fetched the necessary data from the <code>gatewayURL</code></li>\n<li>The RRset returned by the gateway contains a <code>dnsresolver</code> that is a CCIP-aware contract, and also supports the <code>IExtendedDNSResolver.resolve.selector</code> interface</li>\n<li>Calling <code>IExtendedDNSResolver(dnsresolver).resolve(name,query,context);</code> could trigger another <code>OffchainLookup</code> error, but with a <code>sender</code> that does not match the <code>dnsresolver</code>, which would be just returned to the client without any modifications</li>\n<li>As a result, the <code>sender</code> field would be incorrect as per the EIP</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use the <a href=\"https://eips.ethereum.org/EIPS/eip-3668#example-1\">recommended example</a> from the EIP in order to support nested lookups.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/124#issuecomment-1536309975\">Arachnid (ENS) confirmed</a></strong></p>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 39 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/26\">report highlighted below</a> by <strong>Sathish9098</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/317\">brgltd</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/313\">Shubham</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/311\">Udsen</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/309\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/307\">pontifex</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/306\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/301\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/298\">eierina</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/297\">SAAJ</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/295\">ArbitraryExecution</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/291\">urataps</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/287\">favelanky</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/279\">auditor0517</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/274\">Dyear</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/270\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/262\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/251\">schrodinger</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/250\">BRONZEDISC</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/245\">Jerry0x</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/215\">Recep</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/211\">IceBear</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/209\">j4ld1na</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/205\">naman1778</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/187\">catellatech</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/171\">0x73696d616f</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/170\">0xTheC0der</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/167\">MohammedRizwan</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/132\">ABA</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/126\">MalfurionWhitehat</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/122\">matrix_0wl</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/116\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/101\">codeslide</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/98\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/84\">Rickard</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/74\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/54\">Jorgect</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/49\">chaduke</a>, and <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/4\">Eurovickk</a>.</em></p>\n<h2 id=\"low-findings\" style=\"position:relative;\"><a href=\"#low-findings\" aria-label=\"low findings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LOW FINDINGS</h2>\n<table>\n<thead>\n<tr>\n<th>COUNT</th>\n<th>ISSUES</th>\n<th>INSTANCES</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[L-01]</td>\n<td>Use abi.encode to convert safest way from uint values to bytes</td>\n<td>3</td>\n</tr>\n<tr>\n<td>[L-02]</td>\n<td>Loss of precision due to rounding</td>\n<td>1</td>\n</tr>\n<tr>\n<td>[L-03]</td>\n<td>Consider using OpenZeppelin’s SafeCast library to prevent unexpected overflows when casting from uint256</td>\n<td>11</td>\n</tr>\n<tr>\n<td>[L-04]</td>\n<td>Lack of Sanity/Threshold/Limit Checks</td>\n<td>2</td>\n</tr>\n<tr>\n<td>[L-05]</td>\n<td>Function Calls in Loop Could Lead to Denial of Service</td>\n<td>10</td>\n</tr>\n<tr>\n<td>[L-06]</td>\n<td>Project Upgrade and Stop Scenario should be</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[L-07]</td>\n<td>Front running attacks by the onlyOwner</td>\n<td>3</td>\n</tr>\n<tr>\n<td>[L-08]</td>\n<td>Use BytesLib.sol library to safely covert bytes to uint256</td>\n<td>2</td>\n</tr>\n<tr>\n<td>[L-09]</td>\n<td>In the constructor, there is no return of incorrect address identification</td>\n<td>6</td>\n</tr>\n<tr>\n<td>[L-10]</td>\n<td>Even with the onlyOwner or <code>owner_only</code> modifier, it is best practice to use the re-entrancy pattern</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"non-critical-findings\" style=\"position:relative;\"><a href=\"#non-critical-findings\" aria-label=\"non critical findings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NON-CRITICAL FINDINGS</h2>\n<table>\n<thead>\n<tr>\n<th>COUNT</th>\n<th>ISSUES</th>\n<th>INSTANCES</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[N-01]</td>\n<td>Avoid infinite loops whenever possible</td>\n<td>2</td>\n</tr>\n<tr>\n<td>[N-02]</td>\n<td>immutable should be uppercase</td>\n<td>4</td>\n</tr>\n<tr>\n<td>[N-03]</td>\n<td>For functions, follow Solidity standard naming conventions (internal function style rule)</td>\n<td>28</td>\n</tr>\n<tr>\n<td>[N-04]</td>\n<td>Need Fuzzing test for unchecked</td>\n<td>5</td>\n</tr>\n<tr>\n<td>[N-05]</td>\n<td>Remove commented out code</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[N-06]</td>\n<td>Inconsistent method of specifying a floating pragma</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[N-07]</td>\n<td>NO SAME VALUE INPUT CONTROL</td>\n<td>1</td>\n</tr>\n<tr>\n<td>[N-08]</td>\n<td>Constant redefined elsewhere</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[N-09]</td>\n<td>According to the syntax rules, use => mapping ( instead of => mapping( using spaces as keyword</td>\n<td>3</td>\n</tr>\n<tr>\n<td>[N-10]</td>\n<td>Use SMTChecker</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[N-11]</td>\n<td>Assembly Codes Specific – Should Have Comments</td>\n<td>18</td>\n</tr>\n<tr>\n<td>[N-12]</td>\n<td>Take advantage of Custom Error’s return value property</td>\n<td>4</td>\n</tr>\n<tr>\n<td>[N-13]</td>\n<td>Use constants instead of using numbers directly without explanations</td>\n<td>6</td>\n</tr>\n<tr>\n<td>[N-14]</td>\n<td>Shorthand way to write if / else statement</td>\n<td>4</td>\n</tr>\n<tr>\n<td>[N-15]</td>\n<td>Don’t use named return variables its confusing</td>\n<td>8</td>\n</tr>\n<tr>\n<td>[N-16]</td>\n<td>Constants should be in uppercase</td>\n<td>7</td>\n</tr>\n<tr>\n<td>[N-17]</td>\n<td>TYPOS</td>\n<td>4</td>\n</tr>\n<tr>\n<td>[N-18]</td>\n<td>Use named parameters for mapping type declarations</td>\n<td>3</td>\n</tr>\n<tr>\n<td>[N-19]</td>\n<td>File does not contain an SPDX Identifier</td>\n<td>4</td>\n</tr>\n<tr>\n<td>[N-20]</td>\n<td>Declaration shadows an existing declaration</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[N-21]</td>\n<td>Event is missing indexed fields</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"l-01-use-abiencode-to-convert-safest-way-from-uint-values-to-bytes\" style=\"position:relative;\"><a href=\"#l-01-use-abiencode-to-convert-safest-way-from-uint-values-to-bytes\" aria-label=\"l 01 use abiencode to convert safest way from uint values to bytes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Use <code>abi.encode</code> to convert safest way from uint values to bytes</h2>\n<h3 id=\"drawbacks\" style=\"position:relative;\"><a href=\"#drawbacks\" aria-label=\"drawbacks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DRAWBACKS</h3>\n<p>Now the protocol uses direct conversion way this is not safe. bytes(value) to convert a uint to bytes is not considered a safe way because it creates an uninitialized byte array of length. This means that the contents of the byte array are undefined and may contain sensitive data from previous memory usage, which could result in security vulnerabilities.</p>\n<h3 id=\"benifits-of-abiencode\" style=\"position:relative;\"><a href=\"#benifits-of-abiencode\" aria-label=\"benifits of abiencode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BENIFITS of <code>abi.encode</code></h3>\n<p>In Solidity, the safest way to convert a uint to bytes is to use the abi.encode function. This function will encode the uint as a byte array using the ABI encoding rules, which ensures that the output is a deterministic and standardized representation of the uint value.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NameEncoder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">dnsName</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">bytes1</span><span class=\"mtk1\">(</span><span class=\"mtk12\">labelLength</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">dnsName</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">bytes1</span><span class=\"mtk1\">(</span><span class=\"mtk12\">labelLength</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/NameEncoder.sol#L27\">NameEncoder.sol#L27</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">376</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ret</span><span class=\"mtk1\"> &lt;&lt; (</span><span class=\"mtk7\">256</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">bitlen</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L376\">BytesUtils.sol#L376</a></p>\n<h2 id=\"l-02-loss-of-precision-due-to-rounding\" style=\"position:relative;\"><a href=\"#l-02-loss-of-precision-due-to-rounding\" aria-label=\"l 02 loss of precision due to rounding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Loss of precision due to rounding</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EllipticCurve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">: </span><span class=\"mtk12\">q</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">r1</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">r2</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L52\">EllipticCurve.sol#L52</a></p>\n<h2 id=\"l-03-consider-using-openzeppelins-safecast-library-to-prevent-unexpected-overflows-when-casting-from-uint256\" style=\"position:relative;\"><a href=\"#l-03-consider-using-openzeppelins-safecast-library-to-prevent-unexpected-overflows-when-casting-from-uint256\" aria-label=\"l 03 consider using openzeppelins safecast library to prevent unexpected overflows when casting from uint256 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] Consider using OpenZeppelin’s SafeCast library to prevent unexpected overflows when casting from uint256</h2>\n<p>Using the SafeCast library can help prevent unexpected errors in your Solidity code and make your contracts more secure</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">160</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">serialNumberGte</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">, </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">now</span><span class=\"mtk1\">))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">: </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SignatureExpired</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">, </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">now</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">166</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">serialNumberGte</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">now</span><span class=\"mtk1\">), </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inception</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">167</span><span class=\"mtk1\">: </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SignatureNotValidYet</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inception</span><span class=\"mtk1\">, </span><span class=\"mtk11\">uint32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">now</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L160\">DNSSECImpl.sol#L160</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">430</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint16</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ac1</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/RRUtils.sol#L430\">RRUtils.sol#L430</a></p>\n<blockquote>\n<p>When ever we convert int256 to uint256 or uint256 to int256 we should use OpenZeppelin’s safecast to avoid unexpected errors </p>\n</blockquote>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EllipticCurve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">t1</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">m</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(-</span><span class=\"mtk12\">t1</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">t1</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L56-L58\">EllipticCurve.sol#L56-L58</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">92</span><span class=\"mtk1\">: </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">diff</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">a</span><span class=\"mtk1\"> &amp; </span><span class=\"mtk12\">mask</span><span class=\"mtk1\">) - </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">b</span><span class=\"mtk1\"> &amp; </span><span class=\"mtk12\">mask</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">len</span><span class=\"mtk1\">) - </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">otherlen</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">[</span><span class=\"mtk12\">idx</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">344</span><span class=\"mtk1\">: </span><span class=\"mtk12\">decoded</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">base32HexTable</span><span class=\"mtk1\">[</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">char</span><span class=\"mtk1\">)) - </span><span class=\"mtk7\">0x30</span><span class=\"mtk1\">]);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L92\">BytesUtils.sol#L92</a></p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps:</h3>\n<p>Consider using OpenZeppelin’s SafeCast library to prevent unexpected overflows when casting from uint256.</p>\n<h2 id=\"l-04-lack-of-sanitythresholdlimit-checks\" style=\"position:relative;\"><a href=\"#l-04-lack-of-sanitythresholdlimit-checks\" aria-label=\"l 04 lack of sanitythresholdlimit checks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Lack of Sanity/Threshold/Limit Checks</h2>\n<p>Devoid of sanity/threshold/limit checks, critical parameters can be configured to invalid values, causing a variety of issues and breaking expected interactions within/between contracts. Consider adding proper uint256 validation as well as zero address checks for critical changes. A worst case scenario would render the contract needing to be re-deployed in the event of human/accidental errors that involve value assignments to immutable variables. If the validation procedure is unclear or too complex to implement on-chain, document the potential issues that could produce invalid values</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAlgorithm</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Algorithm</span><span class=\"mtk1\"> </span><span class=\"mtk12\">algo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">owner_only</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">algo</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AlgorithmUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">algo</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setDigest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Digest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">digest</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">owner_only</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">digests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">digest</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DigestUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">digest</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L64-L78\">DNSSECImpl.sol#L64-L78</a></p>\n<h2 id=\"l-05-function-calls-in-loop-could-lead-to-denial-of-service\" style=\"position:relative;\"><a href=\"#l-05-function-calls-in-loop-could-lead-to-denial-of-service\" aria-label=\"l 05 function calls in loop could lead to denial of service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] Function Calls in Loop Could Lead to Denial of Service</h2>\n<p>Function calls made in unbounded loop are error-prone with potential resource exhaustion as it can trap the contract due to the gas limitations or failed transactions</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">counts</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">othercounts</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">prevoff</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">off</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">off</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">progress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">off</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">counts</span><span class=\"mtk1\">--;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">othercounts</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">counts</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">otherprevoff</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">otheroff</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">otheroff</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">progress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">other</span><span class=\"mtk1\">, </span><span class=\"mtk12\">otheroff</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">othercounts</span><span class=\"mtk1\">--;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Compare the last nonequal labels to each other</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">counts</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">off</span><span class=\"mtk1\">, </span><span class=\"mtk12\">other</span><span class=\"mtk1\">, </span><span class=\"mtk12\">otheroff</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">prevoff</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">off</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">off</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">progress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">off</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">otherprevoff</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">otheroff</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">otheroff</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">progress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">other</span><span class=\"mtk1\">, </span><span class=\"mtk12\">otheroff</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">counts</span><span class=\"mtk1\"> -= </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/RRUtils.sol#L291-L295\">RRUtils.sol#L291-L295</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">input</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SignedSet</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">validateSignedSet</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">input</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">proof</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">inception</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inception</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; !</span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">signerName</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProofNameMismatch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">signerName</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rdata</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DNSKEY</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readDNSKEY</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">verifySignatureWithKey</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L118-L126\">DNSSECImpl.sol#L118-L126</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L336-L360\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L336-L360</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L380-L404\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L380-L404</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L325-L327\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L325-L327</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L361-L362\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L361-L362</a></p>\n<h2 id=\"l-06-project-upgrade-and-stop-scenario-should-be\" style=\"position:relative;\"><a href=\"#l-06-project-upgrade-and-stop-scenario-should-be\" aria-label=\"l 06 project upgrade and stop scenario should be permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] Project Upgrade and Stop Scenario should be</h2>\n<p>At the start of the project, the system may need to be stopped or upgraded, I suggest you have a script beforehand and add it to the documentation. This can also be called an ” EMERGENCY STOP (CIRCUIT BREAKER) PATTERN “.</p>\n<p><a href=\"https://github.com/maxwoe/solidity_patterns/blob/master/security/EmergencyStop.sol\">https://github.com/maxwoe/solidity_patterns/blob/master/security/EmergencyStop.sol</a></p>\n<h2 id=\"l-07-front-running-attacks-by-the-onlyowner\" style=\"position:relative;\"><a href=\"#l-07-front-running-attacks-by-the-onlyowner\" aria-label=\"l 07 front running attacks by the onlyowner permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] Front running attacks by the onlyOwner</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PublicSuffixList</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L80-L83\">DNSRegistrar.sol#L80-L83</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAlgorithm</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Algorithm</span><span class=\"mtk1\"> </span><span class=\"mtk12\">algo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">owner_only</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">algo</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AlgorithmUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">algo</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setDigest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Digest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">digest</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">owner_only</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">digests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">digest</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DigestUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">digest</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L64-L67\">DNSSECImpl.sol#L64-L67</a></p>\n<h2 id=\"l-08-use-byteslibsol-library-to-safely-covert-bytes-to-uint256\" style=\"position:relative;\"><a href=\"#l-08-use-byteslibsol-library-to-safely-covert-bytes-to-uint256\" aria-label=\"l 08 use byteslibsol library to safely covert bytes to uint256 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-08] Use BytesLib.sol library to safely covert bytes to uint256</h2>\n<p>Use <a href=\"https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol\">toUint256()</a> safely convert bytes to uint256 instead of plain way of conversion </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">P256SHA256Algorithm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> [</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readBytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)), </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readBytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">32</span><span class=\"mtk1\">))];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> [</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readBytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">4</span><span class=\"mtk1\">)), </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readBytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">36</span><span class=\"mtk1\">))];</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/P256SHA256Algorithm.sol#L34\">P256SHA256Algorithm.sol#L34</a></p>\n<h2 id=\"l-09-in-the-constructor-there-is-no-return-of-incorrect-address-identification\" style=\"position:relative;\"><a href=\"#l-09-in-the-constructor-there-is-no-return-of-incorrect-address-identification\" aria-label=\"l 09 in the constructor there is no return of incorrect address identification permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-09] In the constructor, there is no return of incorrect address identification</h2>\n<p>In case of incorrect address definition in the constructor , there is no way to fix it because of the variables are immutable.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OffchainDNSResolver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">: </span><span class=\"mtk12\">ens</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_ens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">: </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_oracle</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/OffchainDNSResolver.sol#L44-L45\">OffchainDNSResolver.sol#L44-L45</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">: </span><span class=\"mtk12\">previousRegistrar</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_previousRegistrar</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">: </span><span class=\"mtk12\">resolver</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_resolver</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">: </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_dnssec</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">: </span><span class=\"mtk12\">ens</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_ens</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L63-L65\">DNSRegistrar.sol#L63-L65</a></p>\n<h3 id=\"recommended-mitigations\" style=\"position:relative;\"><a href=\"#recommended-mitigations\" aria-label=\"recommended mitigations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigations:</h3>\n<p><code>require(_ens!=address(0), \" zero address\");</code></p>\n<h2 id=\"l-10-even-with-the-onlyowner-or-owner_only-modifier-it-is-best-practice-to-use-the-re-entrancy-pattern\" style=\"position:relative;\"><a href=\"#l-10-even-with-the-onlyowner-or-owner_only-modifier-it-is-best-practice-to-use-the-re-entrancy-pattern\" aria-label=\"l 10 even with the onlyowner or owner_only modifier it is best practice to use the re entrancy pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-10] Even with the <code>onlyOwner</code> or <code>owner_only</code> modifier, it is best practice to use the re-entrancy pattern</h2>\n<p>It’s still good practice to apply the reentry model as a precautionary measure in case the code is changed in the future to remove the onlyOwner modifier or the contract is used as a base contract for other contracts.</p>\n<p>Using the reentry modifier provides an additional layer of security and ensures that your code is protected from potential reentry attacks regardless of any other security measures you take.</p>\n<p>So even if you followed the “check-effects-interactions” pattern correctly, it’s still considered good practice to use the reentry modifier</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PublicSuffixList</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L80-L83\">DNSRegistrar.sol#L80-L83</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAlgorithm</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Algorithm</span><span class=\"mtk1\"> </span><span class=\"mtk12\">algo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">owner_only</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">algo</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AlgorithmUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">algo</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setDigest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Digest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">digest</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">owner_only</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">digests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">digest</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DigestUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">id</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">digest</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L64-L67\">DNSSECImpl.sol#L64-L67</a></p>\n<h3 id=\"recommended-mitigation\" style=\"position:relative;\"><a href=\"#recommended-mitigation\" aria-label=\"recommended mitigation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">noReentrant</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">locked</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Reentrant call&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">locked</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">locked</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PublicSuffixList</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\">  </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">noReentrant</span><span class=\"mtk1\">  {</span></span></span></code></pre>\n<h2 id=\"n-01-avoid-infinite-loops-whenever-possible\" style=\"position:relative;\"><a href=\"#n-01-avoid-infinite-loops-whenever-possible\" aria-label=\"n 01 avoid infinite loops whenever possible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Avoid infinite loops whenever possible</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EllipticCurve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&gt; </span><span class=\"mtk12\">This</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r2</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> </span><span class=\"mtk12\">condition</span><span class=\"mtk1\"> </span><span class=\"mtk12\">can</span><span class=\"mtk1\"> </span><span class=\"mtk12\">be</span><span class=\"mtk1\"> </span><span class=\"mtk12\">always</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cause</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unbounded</span><span class=\"mtk1\"> </span><span class=\"mtk12\">loop</span><span class=\"mtk1\">. </span><span class=\"mtk12\">This</span><span class=\"mtk1\"> </span><span class=\"mtk12\">condition</span><span class=\"mtk1\"> </span><span class=\"mtk12\">only</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fails</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r2</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exactly</span><span class=\"mtk1\"> </span><span class=\"mtk12\">equal</span><span class=\"mtk1\"> </span><span class=\"mtk12\">to</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">: </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">r2</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">q</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">r1</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">r2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">t1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">t2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">r1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">r2</span><span class=\"mtk1\">) = (</span><span class=\"mtk12\">t2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">t1</span><span class=\"mtk1\"> - </span><span class=\"mtk11\">int256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">q</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">t2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">r2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">r1</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">q</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">r2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L51-L54\">EllipticCurve.sol#L51-L54</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readUint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">idx</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/RRUtils.sol#L24-L31\">RRUtils.sol#L24-L31</a></p>\n<h2 id=\"n-02-immutable-should-be-uppercase\" style=\"position:relative;\"><a href=\"#n-02-immutable-should-be-uppercase\" aria-label=\"n 02 immutable should be uppercase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] immutable should be uppercase</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE : </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OffchainDNSResolver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">: </span><span class=\"mtk12\">ENS</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ens</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">: </span><span class=\"mtk12\">DNSSEC</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/OffchainDNSResolver.sol#L37-L38\">OffchainDNSResolver.sol#L37-L38</a></p>\n<h3 id=\"recommended-mitigation-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-1\" aria-label=\"recommended mitigation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- </span><span class=\"mtk7\">38</span><span class=\"mtk1\">: </span><span class=\"mtk12\">DNSSEC</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+ </span><span class=\"mtk7\">38</span><span class=\"mtk1\">: </span><span class=\"mtk12\">DNSSEC</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ORACLE</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L26-L27\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L26-L27</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L29-L30\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L29-L30</a></p>\n<h2 id=\"n-03-for-functions-follow-solidity-standard-naming-conventions-internal-function-style-rule\" style=\"position:relative;\"><a href=\"#n-03-for-functions-follow-solidity-standard-naming-conventions-internal-function-style-rule\" aria-label=\"n 03 for functions follow solidity standard naming conventions internal function style rule permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] For functions, follow Solidity standard naming conventions (internal function style rule)</h2>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The above codes don’t follow Solidity’s standard naming convention,</p>\n<p>internal and private functions : the mixedCase format starting with an underscore (<code>_mixedCase</code> starting with an underscore)</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OffchainDNSResolver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">parseRR</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">readTXT</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startIdx</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">parseAndResolve</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nameOrAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resolveName</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">textNamehash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/OffchainDNSResolver.sol#L136-L140\">OffchainDNSResolver.sol#L136-L140</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/RSAVerify.sol#L14-L18\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/RSAVerify.sol#L14-L18</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/ModexpPrecompile.sol#L7-L11\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/ModexpPrecompile.sol#L7-L11</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/P256SHA256Algorithm.sol#L30-L32\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/P256SHA256Algorithm.sol#L30-L32</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/P256SHA256Algorithm.sol#L37-L39\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/P256SHA256Algorithm.sol#L37-L39</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/NameEncoder.sol#L9-L11\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/NameEncoder.sol#L9-L11</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L11-L15\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L11-L15</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L68-L72\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L68-L72</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSClaimChecker.sol#L19-L22\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSClaimChecker.sol#L19-L22</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSClaimChecker.sol#L46-L50\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSClaimChecker.sol#L46-L50</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSClaimChecker.sol#L66-L70\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSClaimChecker.sol#L66-L70</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L13-L17\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L13-L17</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L32-L35\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L32-L35</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L52-L59\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L52-L59</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L111-L117\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L111-L117</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L129-L134\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L129-L134</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L148-L152\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L148-L152</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L164-L167\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L164-L167</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L179-L182\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L179-L182</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L332-L336\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L332-L336</a></p>\n<h2 id=\"n-04-need-fuzzing-test-for-unchecked\" style=\"position:relative;\"><a href=\"#n-04-need-fuzzing-test-for-unchecked\" aria-label=\"n 04 need fuzzing test for unchecked permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Need Fuzzing test for unchecked</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">NameEncoder</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">380</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">336</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EllipticCurve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">41</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<h2 id=\"n-05-remove-commented-out-code\" style=\"position:relative;\"><a href=\"#n-05-remove-commented-out-code\" aria-label=\"n 05 remove commented out code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Remove commented out code</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">358</span><span class=\"mtk1\">: *     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">computeKeytag</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint16</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">359</span><span class=\"mtk1\">: *         </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ac</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">360</span><span class=\"mtk1\">: *         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">361</span><span class=\"mtk1\">: *             </span><span class=\"mtk12\">ac</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &amp; </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> ? </span><span class=\"mtk11\">uint16</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readUint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) &lt;&lt; </span><span class=\"mtk7\">8</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readUint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">362</span><span class=\"mtk1\">: *         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">363</span><span class=\"mtk1\">: *         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint16</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ac</span><span class=\"mtk1\"> + (</span><span class=\"mtk12\">ac</span><span class=\"mtk1\"> &gt;&gt; </span><span class=\"mtk7\">16</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">364</span><span class=\"mtk1\">: *     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/RRUtils.sol#L358-L364\">RRUtils.sol#L358-L364</a></p>\n<h2 id=\"n-06-inconsistent-method-of-specifying-a-floating-pragma\" style=\"position:relative;\"><a href=\"#n-06-inconsistent-method-of-specifying-a-floating-pragma\" aria-label=\"n 06 inconsistent method of specifying a floating pragma permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Inconsistent method of specifying a floating pragma</h2>\n<p>Some files use <code>>=</code>, some use <code>^</code>. The instances below are examples of the method that has the fewest instances for a specific version. Note that using <code>>=</code> without also specifying <code>&#x3C;=</code> will lead to failures to compile, or external project incompatability, when the major version changes and there are breaking-changes, so <code>^</code> should be preferred regardless of the instance counts</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OffchainDNSResolver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">: </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1</span><span class=\"mtk1\">: </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SHA1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1</span><span class=\"mtk1\">: </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> &gt;=</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSClaimChecker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">: </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RecordParser</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2</span><span class=\"mtk1\">: </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">11</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ModexpPrecompile</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1</span><span class=\"mtk1\">: </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RSAVerify</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">1</span><span class=\"mtk1\">: </span><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-07-no-same-value-input-control\" style=\"position:relative;\"><a href=\"#n-07-no-same-value-input-control\" aria-label=\"n 07 no same value input control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-07] NO SAME VALUE INPUT CONTROL</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PublicSuffixList</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L80-L83\">DNSRegistrar.sol#L80-L83</a></p>\n<h2 id=\"n-08-constant-redefined-elsewhere\" style=\"position:relative;\"><a href=\"#n-08-constant-redefined-elsewhere\" aria-label=\"n 08 constant redefined elsewhere permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-08] Constant redefined elsewhere</h2>\n<p>Consider defining in only one contract so that values cannot become out of sync when only one location is updated.</p>\n<p>A cheap way to store constants in a single location is to create an internal constant in a library. If the variable is a local cache of another contract’s value, consider making the cache variable internal or private, which will require external users to query the contract with the source of truth, so that callers don’t get out of sync.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OffchainDNSResolver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">CLASS_INET</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">TYPE_TXT</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">16</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_TYPE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_ALGORITHM</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_LABELS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_TTL</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_EXPIRATION</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">8</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_INCEPTION</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">12</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_KEY_TAG</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">16</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RRSIG_SIGNER_NAME</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSKEY_FLAGS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSKEY_PROTOCOL</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSKEY_ALGORITHM</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">213</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSKEY_PUBKEY</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">236</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DS_KEY_TAG</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">237</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DS_ALGORITHM</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">2</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">238</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DS_DIGEST_TYPE</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">3</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">239</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DS_DIGEST</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EllipticCurve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">25</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gx</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gy</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">p</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lowSmax</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSCLASS_IN</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSTYPE_DS</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">43</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSTYPE_DNSKEY</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">48</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">DNSKEY_FLAG_ZONEKEY</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0x100</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-09-according-to-the-syntax-rules-use--mapping--instead-of--mapping-using-spaces-as-keyword\" style=\"position:relative;\"><a href=\"#n-09-according-to-the-syntax-rules-use--mapping--instead-of--mapping-using-spaces-as-keyword\" aria-label=\"n 09 according to the syntax rules use  mapping  instead of  mapping using spaces as keyword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-09] According to the syntax rules, use => mapping ( instead of => mapping( using spaces as keyword</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">: </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Algorithm</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">: </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Digest</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">digests</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L45-L46\">DNSSECImpl.sol#L45-L46</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">: </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inceptions</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L32\">DNSRegistrar.sol#L32</a></p>\n<h2 id=\"n-10-use-smtchecker\" style=\"position:relative;\"><a href=\"#n-10-use-smtchecker\" aria-label=\"n 10 use smtchecker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-10] Use SMTChecker</h2>\n<p>The highest tier of smart contract behavior assurance is formal mathematical verification. All assertions that are made are guaranteed to be true across all inputs → The quality of your asserts is the quality of your verification</p>\n<p><a href=\"https://twitter.com/0xOwenThurm/status/1614359896350425088?t=dbG9gHFigBX85Rv29lOjIQ&#x26;s=19\">https://twitter.com/0xOwenThurm/status/1614359896350425088?t=dbG9gHFigBX85Rv29lOjIQ&#x26;s=19</a></p>\n<h2 id=\"n-11-assembly-codes-specific--should-have-comments\" style=\"position:relative;\"><a href=\"#n-11-assembly-codes-specific--should-have-comments\" aria-label=\"n 11 assembly codes specific  should have comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-11] Assembly Codes Specific – Should Have Comments</h2>\n<p>Since this is a low level language that is more difficult to parse by readers, include extensive documentation, comments on the rationale behind its use, clearly explaining what each assembly instruction does.</p>\n<p>This will make it easier for users to trust the code, for reviewers to validate the code, and for developers to build on or update the code.</p>\n<p>Note that using Assembly removes several important security features of Solidity, which can make the code more insecure and more error-prone.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">ModexpPrecompile</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/ModexpPrecompile.sol#L23\">ModexpPrecompile.sol#L23</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">HexUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L17\">HexUtils.sol#L17</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/RRUtils.sol#L386\">RRUtils.sol#L386</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SHA1</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/SHA1.sol#L7\">SHA1.sol#L7</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">213</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">229</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">245</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">276</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">286</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">311</span><span class=\"mtk1\">: </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L19\">BytesUtils.sol#L19</a></p>\n<h2 id=\"n-12-take-advantage-of-custom-errors-return-value-property\" style=\"position:relative;\"><a href=\"#n-12-take-advantage-of-custom-errors-return-value-property\" aria-label=\"n 12 take advantage of custom errors return value property permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-12] Take advantage of Custom Error’s return value property</h2>\n<p>An important feature of Custom Error is that values such as address, tokenID, msg.value can be written inside the () sign, this kind of approach provides a serious advantage in debugging and examining the revert details of dapps such as tenderly</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">: </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NoOwnerRecordFound</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">: </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PreconditionNotMet</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">: </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">StaleProof</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L36-L37\">DNSRegistrar.sol#L36-L37</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRRSet</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L38\">DNSSECImpl.sol#L38</a></p>\n<h2 id=\"n-13-use-constants-instead-of-using-numbers-directly-without-explanations\" style=\"position:relative;\"><a href=\"#n-13-use-constants-instead-of-using-numbers-directly-without-explanations\" aria-label=\"n 13 use constants instead of using numbers directly without explanations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-13] Use constants instead of using numbers directly without explanations</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OffchainDNSResolver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">txt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">5</span><span class=\"mtk1\"> || !</span><span class=\"mtk12\">txt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;ENS1 &quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">5</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastTxtIdx</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">txt</span><span class=\"mtk1\">.</span><span class=\"mtk11\">find</span><span class=\"mtk1\">(</span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk12\">txt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot; &quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">: </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dnsResolver</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">parseAndResolve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">txt</span><span class=\"mtk1\">, </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk12\">txt</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">: </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dnsResolver</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">parseAndResolve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">txt</span><span class=\"mtk1\">, </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lastTxtIdx</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/OffchainDNSResolver.sol#L144\">OffchainDNSResolver.sol#L144</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">P256SHA256Algorithm</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">: </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">64</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid p256 signature length&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">: </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">68</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid p256 key length&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/P256SHA256Algorithm.sol#L33\">P256SHA256Algorithm.sol#L33</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L25-L36\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L25-L36</a></p>\n<h2 id=\"n-14-shorthand-way-to-write-if--else-statement\" style=\"position:relative;\"><a href=\"#n-14-shorthand-way-to-write-if--else-statement\" aria-label=\"n 14 shorthand way to write if  else statement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-14] Shorthand way to write if / else statement</h2>\n<p>The normal if / else statement can be refactored in a shorthand way to write it:</p>\n<p>Increases readability<br>\nShortens the overall SLOC</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OffchainDNSResolver</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">parentNode</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">textNamehash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/OffchainDNSResolver.sol#L216-L220\">OffchainDNSResolver.sol#L216-L220</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE : </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">shortest</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk7\">32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">mask</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">mask</span><span class=\"mtk1\"> = ~(</span><span class=\"mtk7\">2</span><span class=\"mtk1\"> ** (</span><span class=\"mtk7\">8</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">32</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">shortest</span><span class=\"mtk1\">)) - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L87-L91\">BytesUtils.sol#L87-L91</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EllipticCurve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">isZeroCurve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">x0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">y0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">x1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">y1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">z1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">isZeroCurve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">x1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">y1</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">x0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">y0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">z0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">234</span><span class=\"mtk1\">: </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">t0</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">t1</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">twiceProj</span><span class=\"mtk1\">(</span><span class=\"mtk12\">x0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">y0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">z0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">zeroProj</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L221-L225\">EllipticCurve.sol#L221-L225</a></p>\n<h3 id=\"recommended-mitigation-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-2\" aria-label=\"recommended mitigation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">parentNode</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">textNamehash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">separator</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">parentNode</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">textNamehash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">); : </span><span class=\"mtk12\">separator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\"> ;</span></span></span></code></pre>\n<h2 id=\"n-15-dont-use-named-return-variables-its-confusing\" style=\"position:relative;\"><a href=\"#n-15-dont-use-named-return-variables-its-confusing\" aria-label=\"n 15 dont use named return variables its confusing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-15] Don’t use named return variables, it’s confusing</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_claim</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        DNSSEC.RRSetWithSignature[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">input</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">parentNode</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">labelHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">166</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">enableNode</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">domain</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_enableNode</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">domain</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L133-L136\">DNSRegistrar.sol#L133-L136</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/RecordParser.sol#L14-L21\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/RecordParser.sol#L14-L21</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/ModexpPrecompile.sol#L7-L11\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/ModexpPrecompile.sol#L7-L11</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L11-L15\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/utils/HexUtils.sol#L11-L15</a></p>\n<h2 id=\"n-16-constants-should-be-in-uppercase\" style=\"position:relative;\"><a href=\"#n-16-constants-should-be-in-uppercase\" aria-label=\"n 16 constants should be in uppercase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-16] Constants should be in uppercase</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">/</span><span class=\"mtk12\">EllipticCurve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">25</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gx</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gy</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">p</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">constant</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lowSmax</span><span class=\"mtk1\"> =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L21-L35\">EllipticCurve.sol#L21-L35</a></p>\n<h2 id=\"n-17-typos\" style=\"position:relative;\"><a href=\"#n-17-typos\" aria-label=\"n 17 typos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-17] TYPOS</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit codepoints =&gt; code points</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- </span><span class=\"mtk7\">43</span><span class=\"mtk1\">: *      </span><span class=\"mtk12\">on</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unicode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">codepoints</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+ </span><span class=\"mtk7\">43</span><span class=\"mtk1\">: *      </span><span class=\"mtk12\">on</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unicode</span><span class=\"mtk1\"> </span><span class=\"mtk12\">code</span><span class=\"mtk1\"> </span><span class=\"mtk12\">points</span><span class=\"mtk1\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit bitshifting=&gt; bit shifting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit Naive =&gt; Native </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- </span><span class=\"mtk7\">356</span><span class=\"mtk1\">: * </span><span class=\"mtk12\">from</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">input</span><span class=\"mtk1\"> </span><span class=\"mtk12\">string</span><span class=\"mtk1\">, </span><span class=\"mtk15\">with</span><span class=\"mtk1\"> </span><span class=\"mtk12\">some</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mild</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bitshifting</span><span class=\"mtk1\">. </span><span class=\"mtk12\">Here</span><span class=\"mtk8\">&#39;s a Naive solidity implementation</span><span class=\"mtk14\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- </span><span class=\"mtk7\">356</span><span class=\"mtk1\">: * </span><span class=\"mtk12\">from</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">input</span><span class=\"mtk1\"> </span><span class=\"mtk12\">string</span><span class=\"mtk1\">, </span><span class=\"mtk15\">with</span><span class=\"mtk1\"> </span><span class=\"mtk12\">some</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mild</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bit</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shifting</span><span class=\"mtk1\">. </span><span class=\"mtk12\">Here</span><span class=\"mtk8\">&#39;s a Native solidity implementation</span><span class=\"mtk14\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @audit canonicalised =&gt; MEANING LESS WORD </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">: *        </span><span class=\"mtk12\">data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">followed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">by</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\"> </span><span class=\"mtk12\">series</span><span class=\"mtk1\"> </span><span class=\"mtk4\">of</span><span class=\"mtk1\"> </span><span class=\"mtk12\">canonicalised</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RR</span><span class=\"mtk1\"> </span><span class=\"mtk12\">records</span><span class=\"mtk1\"> </span><span class=\"mtk12\">that</span><span class=\"mtk1\"> </span><span class=\"mtk12\">the</span><span class=\"mtk1\"> </span><span class=\"mtk12\">signature</span></span></span></code></pre>\n<h2 id=\"n-18-use-named-parameters-for-mapping-type-declarations\" style=\"position:relative;\"><a href=\"#n-18-use-named-parameters-for-mapping-type-declarations\" aria-label=\"n 18 use named parameters for mapping type declarations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-18] Use named parameters for mapping type declarations</h2>\n<p>Consider using named parameters in mappings (e.g. <code>mapping(address account => uint256 balance)</code>) to improve readability. This feature is present since Solidity 0.8.18.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">: </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Algorithm</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">algorithms</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">: </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Digest</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">digests</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/DNSSECImpl.sol#L45-L46\">DNSSECImpl.sol#L45-L46</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">: </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inceptions</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L32\">DNSRegistrar.sol#L32</a></p>\n<h2 id=\"n-19-file-does-not-contain-an-spdx-identifier\" style=\"position:relative;\"><a href=\"#n-19-file-does-not-contain-an-spdx-identifier\" aria-label=\"n 19 file does not contain an spdx identifier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-19] File does not contain an SPDX Identifier</h2>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/SHA1.sol#L1-L3\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/SHA1.sol#L1-L3</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L1-L3\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/BytesUtils.sol#L1-L3</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/RRUtils.sol#L1-L9\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/RRUtils.sol#L1-L9</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L1-L19\">https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnssec-oracle/algorithms/EllipticCurve.sol#L1-L19</a></p>\n<h2 id=\"n-20-declaration-shadows-an-existing-declaration\" style=\"position:relative;\"><a href=\"#n-20-declaration-shadows-an-existing-declaration\" aria-label=\"n 20 declaration shadows an existing declaration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-20] Declaration shadows an existing declaration</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:   </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">immutable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">resolver</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">resolver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">resolver</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">192: </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">143: </span><span class=\"mtk10\">function</span><span class=\"mtk1\"> </span><span class=\"mtk10\">owner</span><span class=\"mtk1\">(</span></span></span></code></pre>\n<h2 id=\"n-21-event-is-missing-indexed-fields\" style=\"position:relative;\"><a href=\"#n-21-event-is-missing-indexed-fields\" aria-label=\"n 21 event is missing indexed fields permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-21] Event is missing indexed fields</h2>\n<p>Index event fields make the field more quickly accessible to off-chain tools that parse events. However, note that each index field costs extra gas during emission, so it’s not necessarily best to index the maximum allowed per event (threefields). Each event should use three indexed fields if there are three or more fields, and gas usage is not particularly of concern for the events in question. If there are fewer than three fields, all of the fields should be indexed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FILE: </span><span class=\"mtk7\">2023</span><span class=\"mtk1\">-</span><span class=\"mtk7\">04</span><span class=\"mtk1\">-</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">/</span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">: </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Claim</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexed</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dnsname</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">inception</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">: </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/45ea10bacb2a398e14d711fe28d1738271cd7640/contracts/dnsregistrar/DNSRegistrar.sol#L47-L53\">DNSRegistrar.sol#L47-L53</a></p>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 8 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/220\">report highlighted below</a> by <strong>JCN</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/322\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/265\">niser93</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/169\">descharre</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/70\">openwide</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/31\">naman1778</a>, <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/25\">Sathish9098</a>, and <a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/23\">saneryee</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<p>A majority of the optimizations were benchmarked via the protocol’s tests, i.e. using the following config: <code>solc version 0.8.17</code>, <code>optimizer on</code>, and <code>1300 runs</code>. Optimizations that were not benchmarked are explained via EVM gas costs and opcodes.</p>\n<p>Below are the overall average gas savings for the following tested functions, with all the optimizations applied:\n| Function |    Before   |    After   | Avg Gas Savings |\n| ------ | -------- | -------- | ------- |\n| DNSRegistrar.proveAndClaim |  269704  |  240737  | 28967 |\n| DNSRegistrar.proveAndClaimWithResolver |  320432  |  291386  | 29046 |  </p>\n<p><strong>Total gas saved across all listed functions: 58013</strong></p>\n<p><em>Notes</em>: </p>\n<ul>\n<li>The Gas report output, after all optimizations have been applied, can be found at the end of the report.</li>\n<li>The final diffs for each contract, with all the optimizations applied, can be found <a href=\"https://gist.github.com/0xJCN/e7523b1e87e79e6eea8e865906e5fb17\">here</a>.</li>\n</ul>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<table>\n<thead>\n<tr>\n<th>Number</th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G-01]</td>\n<td align=\"left\">Refactor code to avoid unnecessary memory expansion and data check within loops</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>[G-02]</td>\n<td align=\"left\">State variables can be cached instead of re-reading them from storage</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-03]</td>\n<td align=\"left\">Create immutable variable to avoid an external call</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-04]</td>\n<td align=\"left\">Avoid emitting storage values</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-05]</td>\n<td align=\"left\">Refactor code with assembly to check zero address, hash values, and perform external call</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-06]</td>\n<td align=\"left\">Use assembly to hash values more efficiently</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>[G-07]</td>\n<td align=\"left\">Use assembly to make more efficient back-to-back calls</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-08]</td>\n<td align=\"left\">Use assembly for loops</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td>[G-09]</td>\n<td align=\"left\">Use assembly to grab and cast value in byte array</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-10]</td>\n<td align=\"left\">Include check in assembly block</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td>[G-11]</td>\n<td align=\"left\">Write a more gas efficient assembly loop</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-12]</td>\n<td align=\"left\">Use a <code>do while</code> loop instead of a <code>for</code> loop</td>\n<td align=\"center\">8</td>\n</tr>\n<tr>\n<td>[G-13]</td>\n<td align=\"left\">Don’t cache value if it is only used once</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-14]</td>\n<td align=\"left\">Refactor code to avoid instantiating memory struct within loop</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-15]</td>\n<td align=\"left\"><code>If</code> statements that use <code>&#x26;</code> can be refactored into nested <code>if</code> statements</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-16]</td>\n<td align=\"left\">Refactor modifier to avoid two external calls when calling <code>setPublicSuffixList</code></td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"g-01-refactor-code-to-avoid-unnecessary-memory-expansion-and-data-check-within-loops\" style=\"position:relative;\"><a href=\"#g-01-refactor-code-to-avoid-unnecessary-memory-expansion-and-data-check-within-loops\" aria-label=\"g 01 refactor code to avoid unnecessary memory expansion and data check within loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Refactor code to avoid unnecessary memory expansion and data check within loops</h2>\n<p>In the instances below, the proof name is being read from memory and then stored into a new section of memory. After this is done an <code>if</code> statement is used to check a condition. Both the proof name and condition in the <code>if</code> statement stay the same for each iteration, and therefore those lines of code can be moved outside of the loop to avoid doing those computations on each iteration.</p>\n<p>Total Instances: <code>2</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L254-L264\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L254-L264</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 3270 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>298194</td>\n<td>336129</td>\n<td>317162</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">254</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyWithKnownKey</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">255:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">SignedSet</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">rrset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">256:        </span><span class=\"mtk10\">RRSetWithSignature</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">257:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">RRIterator</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">259</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Check the DNSKEY&#39;s owner name matches the signer name on the RRSIG</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; !</span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">signerName</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProofNameMismatch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">signerName</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..f8adb3c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -257,11 +257,11 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         RRUtils.RRIterator memory proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal view {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Check the DNSKEY&#39;s owner name matches the signer name on the RRSIG</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes memory proofName = proof.name();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (!proofName.equals(rrset.signerName)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            revert ProofNameMismatch(rrset.signerName, proofName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (; !proof.done(); proof.next()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            bytes memory proofName = proof.name();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (!proofName.equals(rrset.signerName)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                revert ProofNameMismatch(rrset.signerName, proofName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             bytes memory keyrdata = proof.rdata();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             RRUtils.DNSKEY memory dnskey = keyrdata.readDNSKEY(</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L373-L384\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L373-L384</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 3223 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>298241</td>\n<td>336176</td>\n<td>317209</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">373</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyKeyWithDS</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">374:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">keyname</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">375:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">RRIterator</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">dsrrs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">376:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">DNSKEY</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">dnskey</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">377:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">keyrdata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">378</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">379</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keytag</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeKeytag</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">380</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; !</span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">381</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">382</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keyname</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">383</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProofNameMismatch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keyname</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">384</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..ae9ba6a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -377,11 +377,11 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory keyrdata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint16 keytag = keyrdata.computeKeytag();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes memory proofName = dsrrs.name();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (!proofName.equals(keyname)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            revert ProofNameMismatch(keyname, proofName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (; !dsrrs.done(); dsrrs.next()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            bytes memory proofName = dsrrs.name();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (!proofName.equals(keyname)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                revert ProofNameMismatch(keyname, proofName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             RRUtils.DS memory ds = dsrrs.data.readDS(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 dsrrs.rdataOffset,</span></span></span></code></pre>\n<h2 id=\"g-02-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#g-02-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" aria-label=\"g 02 state variables can be cached instead of re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] State variables can be cached instead of re-reading them from storage</h2>\n<p>Caching of a state variable replaces each <code>Gwarmaccess (100 gas)</code> with a much cheaper stack read.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L415-L425\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L415-L425</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaim</code>, obtained via protocol’s tests: Avg 182 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>198110</td>\n<td>308834</td>\n<td>269704</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>197928</td>\n<td>308652</td>\n<td>269522</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cache-digestsdigesttype-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-digestsdigesttype-to-save-1-sload\" aria-label=\"cache digestsdigesttype to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>digests[digesttype]</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">415</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyDSHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">416:        </span><span class=\"mtk10\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk10\">digesttype</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">417:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">418:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">digest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">419</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">420</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">digests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">digesttype</span><span class=\"mtk1\">]) == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">421</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">422</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">423</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">digests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">digesttype</span><span class=\"mtk1\">].</span><span class=\"mtk11\">verify</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">digest</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">424</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..df0bbf7 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -417,9 +417,11 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory data,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory digest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (address(digests[digesttype]) == address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        Digest _digest = digests[digesttype];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (address(_digest) == address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        return digests[digesttype].verify(data, digest);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        return _digest.verify(data, digest);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span></code></pre>\n<h2 id=\"g-03-create-immutable-variable-to-avoid-an-external-call\" style=\"position:relative;\"><a href=\"#g-03-create-immutable-variable-to-avoid-an-external-call\" aria-label=\"g 03 create immutable variable to avoid an external call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Create immutable variable to avoid an external call</h2>\n<p>Instead of performing an external call to get the <code>root</code> address each time <code>_enableNode</code> is invoked, we can perform this external call once in the constructor and store the <code>root</code> as an immutable variable. Doing this will save 1 external call each time <code>_enableNode</code> is invoked.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L187-L192\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L187-L192</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 1011 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>300453</td>\n<td>338388</td>\n<td>319421</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">previousRegistrar</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">parentNode</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">Root</span><span class=\"mtk1\"> </span><span class=\"mtk12\">root</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Root</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">root</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setSubnodeOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">label</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">ens</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setResolver</span><span class=\"mtk1\">(</span><span class=\"mtk12\">node</span><span class=\"mtk1\">, </span><span class=\"mtk12\">resolver</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">:            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSRegistrar.sol b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 953a9a3..fda3ebc 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -28,6 +28,7 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     PublicSuffixList public suffixes;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public immutable previousRegistrar;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public immutable resolver;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    Root private immutable root;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // A mapping of the most recent signatures seen for each claimed domain.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping(bytes32 =&gt; uint32) public inceptions;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -65,6 +66,7 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         suffixes = _suffixes;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit NewPublicSuffixList(address(suffixes));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ens = _ens;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        root = Root(_ens.owner(bytes32(0)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -186,7 +188,6 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address owner = ens.owner(node);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (owner == address(0) || owner == previousRegistrar) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (parentNode == bytes32(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                Root root = Root(ens.owner(bytes32(0)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 root.setSubnodeOwner(label, address(this));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 ens.setResolver(node, resolver);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             } else {</span></span></span></code></pre>\n<h2 id=\"g-04-avoid-emitting-storage-values\" style=\"position:relative;\"><a href=\"#g-04-avoid-emitting-storage-values\" aria-label=\"g 04 avoid emitting storage values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Avoid emitting storage values</h2>\n<p>In the instance below, we can emit the calldata value instead of emitting a storage value. This will result in using a cheap <code>CALLDATALOAD</code> instead of an expensive <code>SLOAD</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L80-L83\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L80-L83</a></p>\n<h3 id=\"emit-_suffixes-instead-of-reading-from-storage\" style=\"position:relative;\"><a href=\"#emit-_suffixes-instead-of-reading-from-storage\" aria-label=\"emit _suffixes instead of reading from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Emit <code>_suffixes</code> instead of reading from storage</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk12\">PublicSuffixList</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_suffixes</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NewPublicSuffixList</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">suffixes</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">83</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSRegistrar.sol b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 953a9a3..64e758f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -79,7 +79,7 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function setPublicSuffixList(PublicSuffixList _suffixes) public onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         suffixes = _suffixes;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        emit NewPublicSuffixList(address(suffixes));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit NewPublicSuffixList(address(_suffixes));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-05-refactor-code-with-assembly-to-check-zero-address-hash-values-and-perform-external-call\" style=\"position:relative;\"><a href=\"#g-05-refactor-code-with-assembly-to-check-zero-address-hash-values-and-perform-external-call\" aria-label=\"g 05 refactor code with assembly to check zero address hash values and perform external call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Refactor code with assembly to check zero address, hash values, and perform external call</h2>\n<p>In the instance below, we can check for the zero address using assembly. In addition, we can reuse memory to hash values and perform an external call.</p>\n<p><strong>Note: In order to do this optimization safely we will cache and restore the free memory pointer.</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L115-L122\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L115-L122</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 169 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301449</td>\n<td>339077</td>\n<td>320263</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">116</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">resolver</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">117</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PreconditionNotMet</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rootNode</span><span class=\"mtk1\">, </span><span class=\"mtk12\">labelHash</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// Set the resolver record</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">AddrResolver</span><span class=\"mtk1\">(</span><span class=\"mtk12\">resolver</span><span class=\"mtk1\">).</span><span class=\"mtk11\">setAddr</span><span class=\"mtk1\">(</span><span class=\"mtk12\">node</span><span class=\"mtk1\">, </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSRegistrar.sol b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 953a9a3..a2802fd 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -112,13 +112,25 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert PermissionDenied(msg.sender, owner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ens.setSubnodeRecord(rootNode, labelHash, owner, resolver, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (addr != address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (resolver == address(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                revert PreconditionNotMet();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if iszero(iszero(calldataload(0x64))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(calldataload(0x44)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, 0xf1613c4c)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    revert(0x1c, 0x04)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, rootNode)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, labelHash)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let node := keccak256(0x00, 0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x00, 0xd5fa2b00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x20, node)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, calldataload(0x64))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let success := call(gas(), calldataload(0x44), 0x00, 0x1c, 0x44, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(success) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            bytes32 node = keccak256(abi.encodePacked(rootNode, labelHash));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            // Set the resolver record</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            AddrResolver(resolver).setAddr(node, addr);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-06-use-assembly-to-hash-values-more-efficiently\" style=\"position:relative;\"><a href=\"#g-06-use-assembly-to-hash-values-more-efficiently\" aria-label=\"g 06 use assembly to hash values more efficiently permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Use assembly to hash values more efficiently</h2>\n<p>In the instances below, we can hash values more efficiently by using the least amount of opcodes possible via assembly.</p>\n<p>Total Instances: <code>2</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L151\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L151</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 116 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301348</td>\n<td>339283</td>\n<td>320316</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">parentNode</span><span class=\"mtk1\">, </span><span class=\"mtk12\">labelHash</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSRegistrar.sol b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 953a9a3..8fc7456 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -147,8 +147,13 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Make sure the parent name is enabled</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         parentNode = enableNode(parentName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        bytes32 node = keccak256(abi.encodePacked(parentNode, labelHash));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes32 node;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            mstore(0x00, parentNode)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            mstore(0x20, labelHash)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            node := keccak256(0x00, 0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (!RRUtils.serialNumberGte(inception, inceptions[node])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert StaleProof();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L185\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L185</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaim</code>, obtained via protocol’s tests: Avg 97 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>198110</td>\n<td>308834</td>\n<td>269704</td>\n<td>7</td>\n</tr>\n<tr>\n<td>After</td>\n<td>198025</td>\n<td>308665</td>\n<td>269607</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">node</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">parentNode</span><span class=\"mtk1\">, </span><span class=\"mtk12\">label</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSRegistrar.sol b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 953a9a3..8fc7456 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -182,7 +182,11 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32 parentNode = _enableNode(domain, offset + len + 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32 label = domain.keccak(offset + 1, len);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        node = keccak256(abi.encodePacked(parentNode, label));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            mstore(0x00, parentNode)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            mstore(0x20, label)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            node := keccak256(0x00, 0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address owner = ens.owner(node);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (owner == address(0) || owner == previousRegistrar) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (parentNode == bytes32(0)) {</span></span></span></code></pre>\n<h2 id=\"g-07-use-assembly-to-make-more-efficient-back-to-back-calls\" style=\"position:relative;\"><a href=\"#g-07-use-assembly-to-make-more-efficient-back-to-back-calls\" aria-label=\"g 07 use assembly to make more efficient back to back calls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Use assembly to make more efficient back-to-back calls</h2>\n<p>In the instance below, two external calls, both of which take two function parameters, are performed. We can potentially avoid memory expansion costs by using assembly to utilize <code>scratch space</code> + <code>free memory pointer</code> memory offsets for the function calls. We will use the same memory space for both function calls.</p>\n<p><strong>Note: In order to do this optimization safely we will cache the free memory pointer value and restore it once we are done with our function calls.</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L190-L191\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L190-L191</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 380 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301084</td>\n<td>339019</td>\n<td>320052</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">root</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setSubnodeOwner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">label</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">ens</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setResolver</span><span class=\"mtk1\">(</span><span class=\"mtk12\">node</span><span class=\"mtk1\">, </span><span class=\"mtk12\">resolver</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSRegistrar.sol b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 953a9a3..07f8d99 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -187,8 +187,26 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (owner == address(0) || owner == previousRegistrar) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (parentNode == bytes32(0)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 Root root = Root(ens.owner(bytes32(0)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                root.setSubnodeOwner(label, address(this));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                ens.setResolver(node, resolver);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                address _resolver = resolver;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ENS _ens = ens;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let memptr := mload(0x40)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, 0x8cb8ecec)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x20, label)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, address())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success1 := call(gas(), root, 0x00, 0x1c, 0x44, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success1) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x00, 0x1896f70a)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x20, node)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, _resolver)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    let success2 := call(gas(), _ens, 0x00, 0x1c, 0x44, 0x00, 0x00)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    if iszero(success2) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                        revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    mstore(0x40, memptr)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 ens.setSubnodeRecord(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     parentNode,</span></span></span></code></pre>\n<h2 id=\"g-08-use-assembly-for-loops\" style=\"position:relative;\"><a href=\"#g-08-use-assembly-for-loops\" aria-label=\"g 08 use assembly for loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Use assembly for loops</h2>\n<p>We can use assembly to write a more gas efficient loop. See the <a href=\"https://gist.github.com/0xJCN/e7523b1e87e79e6eea8e865906e5fb17\">final diffs</a> for comments regarding the assembly code.</p>\n<p>Total Instances: <code>3</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L19-L31\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L19-L31</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 9009 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>292455</td>\n<td>330390</td>\n<td>311423</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nameLength</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">20:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">21:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">23</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">offset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">25</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">26</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readUint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">idx</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/RRUtils.sol b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 20fbf15..2579945 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -21,12 +21,14 @@ library RRUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 idx = offset;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        while (true) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            assert(idx &lt; self.length);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            uint256 labelLen = self.readUint8(idx);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            idx += labelLen + 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (labelLen == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                break;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(lt(idx, mload(self))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let labelLen := shr(248, mload(add(add(self, 0x20), idx)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                idx := add(idx, add(labelLen, 1))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(labelLen) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return idx - offset;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L55-L68\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L55-L68</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 3216 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>298248</td>\n<td>336183</td>\n<td>317216</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">labelCount</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">56:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">57:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">count</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">true</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">assert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">offset</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readUint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">offset</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">offset</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">labelLen</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">count</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/RRUtils.sol b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 20fbf15..0cfe57a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -57,14 +57,16 @@ library RRUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 offset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 count = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        while (true) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            assert(offset &lt; self.length);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            uint256 labelLen = self.readUint8(offset);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            offset += labelLen + 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (labelLen == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                break;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(lt(offset, mload(self))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                let labelLen := shr(248, mload(add(add(self, 0x20), offset)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                offset := add(offset, add(labelLen, 1))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(labelLen) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                count := add(count, 1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            count += 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return count;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L259-L270\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L259-L270</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 894 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>300570</td>\n<td>338505</td>\n<td>319538</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">259</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isSubdomainOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">260:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">261:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">other</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">off</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">counts</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">labelCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">othercounts</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">labelCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">other</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">counts</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">othercounts</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">off</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">progress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">off</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">269</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">counts</span><span class=\"mtk1\">--;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/RRUtils.sol b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 20fbf15..8f098f0 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -263,10 +263,18 @@ library RRUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 off = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 counts = labelCount(self, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 othercounts = labelCount(other, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        while (counts &gt; othercounts) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            off = progress(self, off);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            counts--;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(gt(counts, othercounts)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(lt(off, mload(self))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                off := add(add(off, 1), shr(248, mload(add(add(self, 0x20), off))))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                counts := sub(counts, 1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return self.equals(off, other, 0);</span></span></span></code></pre>\n<h2 id=\"g-09-use-assembly-to-grab-and-cast-value-in-byte-array\" style=\"position:relative;\"><a href=\"#g-09-use-assembly-to-grab-and-cast-value-in-byte-array\" aria-label=\"g 09 use assembly to grab and cast value in byte array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Use assembly to grab and cast value in byte array</h2>\n<p>Like various similar functions, i.e. <a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L192\">readUint16</a> and <a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L208\">readUint32</a>, assembly can be used to grab the value at a specified index of a byte array and cast that value to a specific uint type. In the diff below, a check is done before this operation to ensure that the offset is not out of bounds.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L179-L184\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L179-L184</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 1280 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>300184</td>\n<td>338119</td>\n<td>319152</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">readUint8</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">180:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">181:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ret</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">[</span><span class=\"mtk12\">idx</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/BytesUtils.sol b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 96344ce..8b6335d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -180,7 +180,12 @@ library BytesUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory self,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (uint8 ret) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        return uint8(self[idx]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if iszero(lt(idx, mload(self))) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ret := shr(248, mload(add(add(self, 0x20), idx)))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-10-include-check-in-assembly-block\" style=\"position:relative;\"><a href=\"#g-10-include-check-in-assembly-block\" aria-label=\"g 10 include check in assembly block permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Include check in assembly block</h2>\n<p>In the instances below, we can include the checks in the <code>require</code> statements inside the following assembly blocks.</p>\n<p>Total Instances: <code>3</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L13-L22\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L13-L22</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 1656 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>299808</td>\n<td>337743</td>\n<td>318776</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">13</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">keccak</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">14:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">15:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">offset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">16:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">len</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ret</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">offset</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">len</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">20</span><span class=\"mtk1\">:            ret := </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk7\">32</span><span class=\"mtk1\">), </span><span class=\"mtk12\">offset</span><span class=\"mtk1\">), </span><span class=\"mtk12\">len</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">22</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/BytesUtils.sol b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 96344ce..472c224 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -15,8 +15,10 @@ library BytesUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 offset,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 len</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (bytes32 ret) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(offset + len &lt;= self.length);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if gt(add(offset, len), mload(self)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ret := keccak256(add(add(self, 32), offset), len)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L192-L200\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L192-L200</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 3795 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>297669</td>\n<td>335604</td>\n<td>316637</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">readUint16</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">193:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">194:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ret</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">198</span><span class=\"mtk1\">:            ret := </span><span class=\"mtk11\">and</span><span class=\"mtk1\">(</span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">), </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">0xFFFF</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/BytesUtils.sol b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 96344ce..cd94ece 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -193,8 +193,10 @@ library BytesUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory self,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (uint16 ret) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(idx + 2 &lt;= self.length);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if gt(add(idx, 2), mload(self)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ret := and(mload(add(add(self, 2), idx)), 0xFFFF)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L208-L216\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L208-L216</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 1449 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>300015</td>\n<td>337950</td>\n<td>318983</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">BytesUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">readUint32</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">209:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">210:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ret</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">4</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">213</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">214</span><span class=\"mtk1\">:            ret := </span><span class=\"mtk11\">and</span><span class=\"mtk1\">(</span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk7\">4</span><span class=\"mtk1\">), </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">)), </span><span class=\"mtk7\">0xFFFFFFFF</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">215</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">216</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/BytesUtils.sol b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 96344ce..e5d3190 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/BytesUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -209,8 +209,10 @@ library BytesUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory self,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (uint32 ret) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(idx + 4 &lt;= self.length);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if gt(add(idx, 4), mload(self)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert(0, 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ret := and(mload(add(add(self, 4), idx)), 0xFFFFFFFF)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><strong>This optimization can also be done for the instances below. However, they are not included in the final Diffs as they do not result in gas savings when the tests are run:</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L224-L232\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L224-L232</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L240-L251\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L240-L251</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L260-L271\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/BytesUtils.sol#L260-L271</a></p>\n<h2 id=\"g-11-write-a-more-gas-efficient-assembly-loop\" style=\"position:relative;\"><a href=\"#g-11-write-a-more-gas-efficient-assembly-loop\" aria-label=\"g 11 write a more gas efficient assembly loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] Write a more gas efficient assembly loop</h2>\n<p>In the instance below, we can rewrite the assembly loop using a more gas efficient infinite loop, which performs the condition check at the end of the loop. See <a href=\"https://www.youtube.com/watch?v=ew3pfnb2_V8&#x26;t=946s\">this</a> for more information.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/utils/HexUtils.sol#L44-L58\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/utils/HexUtils.sol#L44-L58</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 306 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301158</td>\n<td>339093</td>\n<td>320126</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">/</span><span class=\"mtk12\">HexUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">44</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">for</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">45</span><span class=\"mtk1\">:                </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:            } </span><span class=\"mtk11\">lt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk12\">lastIdx</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">:                i := </span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk7\">2</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:            } {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:                </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">byte1</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">getHex</span><span class=\"mtk1\">(</span><span class=\"mtk10\">byte</span><span class=\"mtk1\">(0, </span><span class=\"mtk12\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk12\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ptr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">i</span><span class=\"mtk1\">))))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:                </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">byte2</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">getHex</span><span class=\"mtk1\">(</span><span class=\"mtk10\">byte</span><span class=\"mtk1\">(0, </span><span class=\"mtk12\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk12\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ptr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, 1)))))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// if either byte is invalid, set invalid and break loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">or</span><span class=\"mtk1\">(</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">byte1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0xff</span><span class=\"mtk1\">), </span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">byte2</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0xff</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:                    valid := </span><span class=\"mtk4\">false</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:                    </span><span class=\"mtk15\">break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">:                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:                </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">combined</span><span class=\"mtk1\"> := </span><span class=\"mtk10\">or</span><span class=\"mtk1\">(</span><span class=\"mtk10\">shl</span><span class=\"mtk1\">(4, </span><span class=\"mtk12\">byte1</span><span class=\"mtk1\">), </span><span class=\"mtk10\">byte2</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:                r := </span><span class=\"mtk11\">or</span><span class=\"mtk1\">(</span><span class=\"mtk11\">shl</span><span class=\"mtk1\">(</span><span class=\"mtk7\">8</span><span class=\"mtk1\">, </span><span class=\"mtk12\">r</span><span class=\"mtk1\">), </span><span class=\"mtk12\">combined</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/utils/HexUtils.sol b/contracts/utils/HexUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3508390..b8579b7 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/utils/HexUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/utils/HexUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -41,11 +41,8 @@ library HexUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             let ptr := add(str, 32)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                let i := idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            } lt(i, lastIdx) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                i := add(i, 2)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            } {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            let i := idx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            for {} 1 {} {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 let byte1 := getHex(byte(0, mload(add(ptr, i))))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 let byte2 := getHex(byte(0, mload(add(ptr, add(i, 1)))))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 // if either byte is invalid, set invalid and break loop</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -55,6 +52,8 @@ library HexUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 let combined := or(shl(4, byte1), byte2)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 r := or(shl(8, r), combined)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                i := add(i, 2)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if iszero(lt(i, lastIdx)) { break }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-12-use-a-do-while-loop-instead-of-a-for-loop\" style=\"position:relative;\"><a href=\"#g-12-use-a-do-while-loop-instead-of-a-for-loop\" aria-label=\"g 12 use a do while loop instead of a for loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Use a <code>do while</code> loop instead of a <code>for</code> loop</h2>\n<p>A <code>do while</code> loop will cost less gas since the condition is not being checked for the first iteration.</p>\n<p><strong>Note: Other optimizations, such as caching length, precrementing, and using unchecked blocks are not included in the Diff since they are included in the automated findings report.</strong></p>\n<p>Total Instances: <code>8</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L118-L126\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L118-L126</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 60 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301404</td>\n<td>339339</td>\n<td>320372</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">input</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SignedSet</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">validateSignedSet</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">input</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">proof</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">inception</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inception</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..c30d8ba 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -115,7 +115,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         returns (bytes memory rrs, uint32 inception)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory proof = anchors;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (uint256 i = 0; i &lt; input.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             RRUtils.SignedSet memory rrset = validateSignedSet(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 input[i],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 proof,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -123,7 +124,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             proof = rrset.data;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             inception = rrset.inception;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            i++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } while (i &lt; input.length);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return (proof, inception);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L260-L274\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L260-L274</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 62 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301402</td>\n<td>339337</td>\n<td>320370</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; !</span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">signerName</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProofNameMismatch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">signerName</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">264</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">265</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rdata</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">267</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DNSKEY</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readDNSKEY</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">268</span><span class=\"mtk1\">:                </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">269</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">271</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">verifySignatureWithKey</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">273</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">274</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..a357e70 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -257,7 +257,7 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         RRUtils.RRIterator memory proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal view {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Check the DNSKEY&#39;s owner name matches the signer name on the RRSIG</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (; !proof.done(); proof.next()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             bytes memory proofName = proof.name();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (!proofName.equals(rrset.signerName)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert ProofNameMismatch(rrset.signerName, proofName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -271,7 +271,9 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (verifySignatureWithKey(dnskey, keyrdata, rrset, data)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 return;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            proof.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } while (!proof.done());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         revert NoMatchingProof(rrset.signerName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L181-L213\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L181-L213</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 140 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301324</td>\n<td>339259</td>\n<td>320292</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateRRs</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">182:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">SignedSet</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">rrset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">183:        </span><span class=\"mtk10\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk10\">typecovered</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">184</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:        </span><span class=\"mtk3\">// Iterate over all the RRs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">RRIterator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">iter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rrs</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:            !</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// We only support class IN (Internet)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">DNSCLASS_IN</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidClass</span><span class=\"mtk1\">(</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">class</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">name</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">198</span><span class=\"mtk1\">:            } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// Name must be the same on all RRs. We do things this way to avoid copying the name</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">200</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// repeatedly.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">201</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">nameLength</span><span class=\"mtk1\">(</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offset</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">203</span><span class=\"mtk1\">:                    !</span><span class=\"mtk12\">name</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">name</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">204</span><span class=\"mtk1\">:                ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">205</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRRSet</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">:                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">207</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">208</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">209</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">// o  The RRSIG RR&#39;s Type Covered field MUST equal the RRset&#39;s type.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">210</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dnstype</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">typecovered</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SignatureTypeMismatch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dnstype</span><span class=\"mtk1\">, </span><span class=\"mtk12\">typecovered</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">213</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..f09438a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -183,11 +183,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint16 typecovered</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (bytes memory name) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Iterate over all the RRs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            RRUtils.RRIterator memory iter = rrset.rrs();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            !iter.done();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            iter.next()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        RRUtils.RRIterator memory iter = rrset.rrs();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             // We only support class IN (Internet)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (iter.class != DNSCLASS_IN) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert InvalidClass(iter.class);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -210,7 +207,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (iter.dnstype != typecovered) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert SignatureTypeMismatch(iter.dnstype, typecovered);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            iter.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } while (!iter.done());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L330-L361\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L330-L361</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 68 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301396</td>\n<td>339331</td>\n<td>320364</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">330</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyWithDS</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">331:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">SignedSet</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">rrset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">332:        </span><span class=\"mtk10\">RRSetWithSignature</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">333:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">RRIterator</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">334</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">335</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proofOffset</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">offset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">336</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">337</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">RRIterator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">iter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rrs</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">338</span><span class=\"mtk1\">:            !</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">339</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">340</span><span class=\"mtk1\">:        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">341</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dnstype</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">DNSTYPE_DNSKEY</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">342</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidProofType</span><span class=\"mtk1\">(</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">dnstype</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">343</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">344</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">345</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">rdata</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">346</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DNSKEY</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readDNSKEY</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">347</span><span class=\"mtk1\">:                </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">348</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">349</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">350</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">verifySignatureWithKey</span><span class=\"mtk1\">(</span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">data</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">351</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// It&#39;s self-signed - look for a DS record to verify it.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">352</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">353</span><span class=\"mtk1\">:                    </span><span class=\"mtk11\">verifyKeyWithDS</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">signerName</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">, </span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\">, </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">354</span><span class=\"mtk1\">:                ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">355</span><span class=\"mtk1\">:                    </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">356</span><span class=\"mtk1\">:                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">357</span><span class=\"mtk1\">:                </span><span class=\"mtk3\">// Rewind proof iterator to the start for the next loop iteration.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">358</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nextOffset</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">proofOffset</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">359</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">360</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">361</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..66cc74e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -333,11 +333,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         RRUtils.RRIterator memory proof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal view {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 proofOffset = proof.offset;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            RRUtils.RRIterator memory iter = rrset.rrs();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            !iter.done();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            iter.next()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        RRUtils.RRIterator memory iter = rrset.rrs();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (iter.dnstype != DNSTYPE_DNSKEY) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert InvalidProofType(iter.dnstype);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -358,7 +355,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 proof.nextOffset = proofOffset;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 proof.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            iter.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } while (!iter.done());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         revert NoMatchingProof(rrset.signerName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L373-L404\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L373-L404</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 68 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301396</td>\n<td>339331</td>\n<td>320364</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">373</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyKeyWithDS</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">374:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">keyname</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">375:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">RRIterator</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">dsrrs</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">376:        </span><span class=\"mtk10\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk10\">DNSKEY</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">dnskey</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">377:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">keyrdata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">378</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">379</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keytag</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeKeytag</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">380</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (; !</span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">(); </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">381</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">382</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">.</span><span class=\"mtk11\">equals</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keyname</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">383</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProofNameMismatch</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keyname</span><span class=\"mtk1\">, </span><span class=\"mtk12\">proofName</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">384</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">385</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">DS</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ds</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readDS</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">387</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rdataOffset</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">388</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nextOffset</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">dsrrs</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rdataOffset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">389</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">390</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">keytag</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">keytag</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">391</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">392</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">393</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">algorithm</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\">.</span><span class=\"mtk12\">algorithm</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">394</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">395</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">396</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">397</span><span class=\"mtk1\">:            </span><span class=\"mtk10\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buffer</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">buf</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">398</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">buf</span><span class=\"mtk1\">.</span><span class=\"mtk11\">init</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keyname</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">399</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">buf</span><span class=\"mtk1\">.</span><span class=\"mtk11\">append</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keyname</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">400</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">buf</span><span class=\"mtk1\">.</span><span class=\"mtk11\">append</span><span class=\"mtk1\">(</span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">401</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">verifyDSHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">digestType</span><span class=\"mtk1\">, </span><span class=\"mtk12\">buf</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buf</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ds</span><span class=\"mtk1\">.</span><span class=\"mtk12\">digest</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">402</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">403</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">404</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..ed1c137 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -377,7 +377,7 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory keyrdata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint16 keytag = keyrdata.computeKeytag();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (; !dsrrs.done(); dsrrs.next()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             bytes memory proofName = dsrrs.name();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (!proofName.equals(keyname)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert ProofNameMismatch(keyname, proofName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -388,9 +388,11 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 dsrrs.nextOffset - dsrrs.rdataOffset</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (ds.keytag != keytag) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                dsrrs.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (ds.algorithm != dnskey.algorithm) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                dsrrs.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -401,7 +403,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (verifyDSHash(ds.digestType, buf.buf, ds.digest)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 return true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            dsrrs.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } while (!dsrrs.done());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSClaimChecker.sol#L29-L40\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSClaimChecker.sol#L29-L40</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 42 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301422</td>\n<td>339357</td>\n<td>320390</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSClaimChecker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">RRIterator</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">iter</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk11\">iterateRRs</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:            !</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">done</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">next</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk11\">name</span><span class=\"mtk1\">().</span><span class=\"mtk11\">compareNames</span><span class=\"mtk1\">(</span><span class=\"mtk12\">buf</span><span class=\"mtk1\">.</span><span class=\"mtk12\">buf</span><span class=\"mtk1\">) != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">found</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">36</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">37</span><span class=\"mtk1\">:            (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">found</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">parseRR</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rdataOffset</span><span class=\"mtk1\">, </span><span class=\"mtk12\">iter</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nextOffset</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">found</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">39</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">40</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSClaimChecker.sol b/contracts/dnsregistrar/DNSClaimChecker.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 54950d1..7848671 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSClaimChecker.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSClaimChecker.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -26,19 +26,20 @@ library DNSClaimChecker {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         buf.append(&quot;\\x04_ens&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         buf.append(name);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        for (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            RRUtils.RRIterator memory iter = data.iterateRRs(0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            !iter.done();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            iter.next()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (iter.name().compareNames(buf.buf) != 0) continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        RRUtils.RRIterator memory iter = data.iterateRRs(0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (iter.name().compareNames(buf.buf) != 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                iter.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             bool found;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address addr;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             (addr, found) = parseRR(data, iter.rdataOffset, iter.nextOffset);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (found) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 return (addr, true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            iter.next();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } while (!iter.done());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return (address(0x0), false);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSClaimChecker.sol#L46-L61\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSClaimChecker.sol#L46-L61</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 36 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301428</td>\n<td>339363</td>\n<td>320396</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSClaimChecker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">parseRR</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">47:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">rdata</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">48:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">idx</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">49:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">endIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">50</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">endIdx</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">len</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rdata</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readUint8</span><span class=\"mtk1\">(</span><span class=\"mtk12\">idx</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">53</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">found</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addr</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:            (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk12\">found</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">parseString</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rdata</span><span class=\"mtk1\">, </span><span class=\"mtk12\">idx</span><span class=\"mtk1\">, </span><span class=\"mtk12\">len</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">found</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">addr</span><span class=\"mtk1\">, </span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">idx</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">len</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSClaimChecker.sol b/contracts/dnsregistrar/DNSClaimChecker.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 54950d1..55bb5d2 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSClaimChecker.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSClaimChecker.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -48,9 +48,9 @@ library DNSClaimChecker {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 idx,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 endIdx</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) internal pure returns (address, bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        while (idx &lt; endIdx) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint256 len = rdata.readUint8(idx);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            idx += 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ++idx;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             bool found;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address addr;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -58,7 +58,7 @@ library DNSClaimChecker {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (found) return (addr, true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             idx += len;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } while (idx &lt; endIdx);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return (address(0x0), false);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L384-L399\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/RRUtils.sol#L384-L399</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 406 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301072</td>\n<td>339007</td>\n<td>320026</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">384</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">31</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">385</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">word</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">assembly</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">387</span><span class=\"mtk1\">:                    word := </span><span class=\"mtk11\">mload</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">, </span><span class=\"mtk7\">32</span><span class=\"mtk1\">), </span><span class=\"mtk12\">i</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">388</span><span class=\"mtk1\">:                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">389</span><span class=\"mtk1\">:                </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">32</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">390</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unused</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">256</span><span class=\"mtk1\"> - (</span><span class=\"mtk12\">data</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">i</span><span class=\"mtk1\">) * </span><span class=\"mtk7\">8</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">391</span><span class=\"mtk1\">:                    </span><span class=\"mtk12\">word</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">word</span><span class=\"mtk1\"> &gt;&gt; </span><span class=\"mtk12\">unused</span><span class=\"mtk1\">) &lt;&lt; </span><span class=\"mtk12\">unused</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">392</span><span class=\"mtk1\">:                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">393</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">ac1</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">394</span><span class=\"mtk1\">:                    (</span><span class=\"mtk12\">word</span><span class=\"mtk1\"> &amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">395</span><span class=\"mtk1\">:                        </span><span class=\"mtk7\">0xFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00</span><span class=\"mtk1\">) &gt;&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">396</span><span class=\"mtk1\">:                    </span><span class=\"mtk7\">8</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">397</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">ac2</span><span class=\"mtk1\"> += (</span><span class=\"mtk12\">word</span><span class=\"mtk1\"> &amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">398</span><span class=\"mtk1\">:                    </span><span class=\"mtk7\">0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">399</span><span class=\"mtk1\">:            }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/RRUtils.sol b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 20fbf15..e9309d6 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/RRUtils.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -381,13 +381,15 @@ library RRUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             require(data.length &lt;= 8192, &quot;Long keys not permitted&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint256 ac1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint256 ac2;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            for (uint256 i = 0; i &lt; data.length + 31; i += 32) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 length = data.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 i;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            do {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 uint256 word;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 assembly {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     word := mload(add(add(data, 32), i))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                if (i + 32 &gt; data.length) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                    uint256 unused = 256 - (data.length - i) * 8;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                if (i + 32 &gt; length) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    uint256 unused = 256 - (length - i) * 8;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     word = (word &gt;&gt; unused) &lt;&lt; unused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 ac1 +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -396,7 +398,8 @@ library RRUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     8;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 ac2 += (word &amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                i += 32;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            } while (i &lt; data.length + 31);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ac1 =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 (ac1 &amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) +</span></span></span></code></pre>\n<h2 id=\"g-13-dont-cache-value-if-it-is-only-used-once\" style=\"position:relative;\"><a href=\"#g-13-dont-cache-value-if-it-is-only-used-once\" aria-label=\"g 13 dont cache value if it is only used once permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Don’t cache value if it is only used once</h2>\n<p>If a value is only intended to be used once then it should not be cached. Caching the value will result in unnecessary stack manipulation.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L304-L307\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L304-L307</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 90 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301374</td>\n<td>339309</td>\n<td>320342</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">304</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint16</span><span class=\"mtk1\"> </span><span class=\"mtk12\">computedkeytag</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">keyrdata</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeKeytag</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">305</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">computedkeytag</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">keytag</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">306</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">307</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..c6c03fc 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -301,8 +301,7 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (dnskey.algorithm != rrset.algorithm) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint16 computedkeytag = keyrdata.computeKeytag();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (computedkeytag != rrset.keytag) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (keyrdata.computeKeytag() != rrset.keytag) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<h2 id=\"g-14-refactor-code-to-avoid-instantiating-memory-struct-within-loop\" style=\"position:relative;\"><a href=\"#g-14-refactor-code-to-avoid-instantiating-memory-struct-within-loop\" aria-label=\"g 14 refactor code to avoid instantiating memory struct within loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] Refactor code to avoid instantiating memory struct within loop</h2>\n<p>In the instance below, instead of instantiating the <code>SignedSets</code> struct within memory in the loop we can refactor the <code>validateSignedSet</code> function so that only the needed struct values are returned and used in the loop.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L118-L174\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L118-L174</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 322 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301142</td>\n<td>339077</td>\n<td>320110</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"121\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">input</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">RRUtils</span><span class=\"mtk1\">.</span><span class=\"mtk12\">SignedSet</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">validateSignedSet</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">input</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">proof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">proof</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">inception</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk12\">inception</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateSignedSet</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">141:        </span><span class=\"mtk10\">RRSetWithSignature</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">input</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">142:        </span><span class=\"mtk10\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk10\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk10\">proof</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">143:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (RRUtils.SignedSet </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">input</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">.</span><span class=\"mtk11\">readSignedSet</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rrset</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"122\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..a6a184c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -116,13 +116,13 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory proof = anchors;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i = 0; i &lt; input.length; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            RRUtils.SignedSet memory rrset = validateSignedSet(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            (bytes memory rrsetData, uint32 rrsetInception) = validateSignedSet(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 input[i],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 proof,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            proof = rrset.data;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            inception = rrset.inception;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            proof = rrsetData;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            inception = rrsetInception;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return (proof, inception);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -141,8 +141,8 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         RRSetWithSignature memory input,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory proof,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 now</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    ) internal view returns (RRUtils.SignedSet memory rrset) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        rrset = input.rrset.readSignedSet();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ) internal view returns (bytes memory, uint32) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        RRUtils.SignedSet memory rrset = input.rrset.readSignedSet();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Do some basic checks on the RRs and extract the name</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes memory name = validateRRs(rrset, rrset.typeCovered);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -170,7 +170,7 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // Validate the signature</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         verifySignature(name, rrset, input, proof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        return rrset;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        return (rrset.data, rrset.inception);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-15-if-statements-that-use--can-be-refactored-into-nested-if-statements\" style=\"position:relative;\"><a href=\"#g-15-if-statements-that-use--can-be-refactored-into-nested-if-statements\" aria-label=\"g 15 if statements that use  can be refactored into nested if statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-15] <code>If</code> statements that use <code>&#x26;</code> can be refactored into nested <code>if</code> statements</h2>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L312-L314\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnssec-oracle/DNSSECImpl.sol#L312-L314</a></p>\n<p><em>Gas Savings for <code>DNSRegistrar.proveAndClaimWithResolver</code>, obtained via protocol’s tests: Avg 64 gas</em> </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Min</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>301464</td>\n<td>339399</td>\n<td>320432</td>\n<td>2</td>\n</tr>\n<tr>\n<td>After</td>\n<td>301400</td>\n<td>339335</td>\n<td>320368</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"123\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnssec</span><span class=\"mtk1\">-</span><span class=\"mtk12\">oracle</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">312</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">dnskey</span><span class=\"mtk1\">.</span><span class=\"mtk12\">flags</span><span class=\"mtk1\"> &amp; </span><span class=\"mtk12\">DNSKEY_FLAG_ZONEKEY</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">313</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">314</span><span class=\"mtk1\">:        }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"124\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnssec-oracle/DNSSECImpl.sol b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index a3e4e5f..e442944 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnssec-oracle/DNSSECImpl.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -309,8 +309,10 @@ contract DNSSECImpl is DNSSEC, Owned {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // o The matching DNSKEY RR MUST be present in the zone&#39;s apex DNSKEY</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         //   RRset, and MUST have the Zone Flag bit (DNSKEY RDATA Flag bit 7)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         //   set.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (dnskey.flags &amp; DNSKEY_FLAG_ZONEKEY == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (dnskey.flags == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (DNSKEY_FLAG_ZONEKEY == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                return false;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span></code></pre>\n<h2 id=\"g-16-refactor-modifier-to-avoid-two-external-calls-when-calling-setpublicsuffixlist\" style=\"position:relative;\"><a href=\"#g-16-refactor-modifier-to-avoid-two-external-calls-when-calling-setpublicsuffixlist\" aria-label=\"g 16 refactor modifier to avoid two external calls when calling setpublicsuffixlist permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-16] Refactor modifier to avoid two external calls when calling <code>setPublicSuffixList</code></h2>\n<p>The <code>onlyOwner</code> modifier performs two external calls. In order to avoid these two calls everytime <code>setPublicSufficList</code> is called, we can perform these two calls in the constructor and create immutable variables for the return values.</p>\n<p><a href=\"https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L73-L78\">https://github.com/code-423n4/2023-04-ens/blob/main/contracts/dnsregistrar/DNSRegistrar.sol#L73-L78</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"125\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">dnsregistrar</span><span class=\"mtk1\">/</span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">Root</span><span class=\"mtk1\"> </span><span class=\"mtk12\">root</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">Root</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ens</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">(</span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">root</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">76</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"126\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/dnsregistrar/DNSRegistrar.sol b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 953a9a3..3779292 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/dnsregistrar/DNSRegistrar.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -28,6 +28,7 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     PublicSuffixList public suffixes;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public immutable previousRegistrar;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     address public immutable resolver;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    address private immutable rootOwner;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // A mapping of the most recent signatures seen for each claimed domain.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping(bytes32 =&gt; uint32) public inceptions;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -65,15 +66,14 @@ contract DNSRegistrar is IDNSRegistrar, IERC165 {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         suffixes = _suffixes;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit NewPublicSuffixList(address(suffixes));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         ens = _ens;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        rootOwner = Root(_ens.owner(bytes32(0))).owner();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      * @dev This contract&#39;s owner-only functions can be invoked by the owner of the ENS root.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     modifier onlyOwner() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        Root root = Root(ens.owner(bytes32(0)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address owner = root.owner();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        require(msg.sender == owner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(msg.sender == rootOwner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         _;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"gasreport-output-with-all-optimizations-applied\" style=\"position:relative;\"><a href=\"#gasreport-output-with-all-optimizations-applied\" aria-label=\"gasreport output with all optimizations applied permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>GasReport</code> output, with all optimizations applied</h2>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"js\" data-index=\"127\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">·--------------------------------------------------------|---------------------------|--------------|-----------------------------·</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|                  </span><span class=\"mtk12\">Solc</span><span class=\"mtk1\"> version: </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">17</span><span class=\"mtk1\">                  ·  </span><span class=\"mtk12\">Optimizer</span><span class=\"mtk1\"> enabled: </span><span class=\"mtk4\">true</span><span class=\"mtk1\">  ·  Runs: </span><span class=\"mtk7\">1300</span><span class=\"mtk1\">  ·  </span><span class=\"mtk12\">Block</span><span class=\"mtk1\"> limit: </span><span class=\"mtk7\">30000000</span><span class=\"mtk1\"> </span><span class=\"mtk12\">gas</span><span class=\"mtk1\">  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">·························································|···························|··············|······························</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">Methods</span><span class=\"mtk1\">                                                                                                                        │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">Contract</span><span class=\"mtk1\">                ·  </span><span class=\"mtk12\">Method</span><span class=\"mtk1\">                     ·  </span><span class=\"mtk12\">Min</span><span class=\"mtk1\">        ·  </span><span class=\"mtk12\">Max</span><span class=\"mtk1\">        ·  </span><span class=\"mtk12\">Avg</span><span class=\"mtk1\">         ·  # </span><span class=\"mtk12\">calls</span><span class=\"mtk1\">      ·  </span><span class=\"mtk11\">eur</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">avg</span><span class=\"mtk1\">)  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">            ·  </span><span class=\"mtk12\">proveAndClaim</span><span class=\"mtk1\">              ·     </span><span class=\"mtk7\">170611</span><span class=\"mtk1\">  ·     </span><span class=\"mtk7\">277955</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">240737</span><span class=\"mtk1\">  ·            </span><span class=\"mtk7\">7</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">DNSRegistrar</span><span class=\"mtk1\">            ·  </span><span class=\"mtk12\">proveAndClaimWithResolver</span><span class=\"mtk1\">  ·     </span><span class=\"mtk7\">272572</span><span class=\"mtk1\">  ·     </span><span class=\"mtk7\">310200</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">291386</span><span class=\"mtk1\">  ·            </span><span class=\"mtk7\">2</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">              ·  </span><span class=\"mtk12\">setAlgorithm</span><span class=\"mtk1\">               ·      </span><span class=\"mtk7\">47660</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">47672</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">47671</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">96</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">DNSSECImpl</span><span class=\"mtk1\">              ·  </span><span class=\"mtk12\">setDigest</span><span class=\"mtk1\">                  ·      </span><span class=\"mtk7\">47703</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">47727</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">47726</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">48</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">ENSRegistry</span><span class=\"mtk1\">             ·  </span><span class=\"mtk12\">setOwner</span><span class=\"mtk1\">                   ·      </span><span class=\"mtk7\">28697</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">28721</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">28719</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">21</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">ENSRegistry</span><span class=\"mtk1\">             ·  </span><span class=\"mtk12\">setResolver</span><span class=\"mtk1\">                ·      </span><span class=\"mtk7\">48254</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">48266</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">48265</span><span class=\"mtk1\">  ·          </span><span class=\"mtk7\">112</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">ENSRegistry</span><span class=\"mtk1\">             ·  </span><span class=\"mtk12\">setSubnodeOwner</span><span class=\"mtk1\">            ·      </span><span class=\"mtk7\">48998</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">49394</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">49319</span><span class=\"mtk1\">  ·          </span><span class=\"mtk7\">286</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">ERC20Recoverable</span><span class=\"mtk1\">        ·  </span><span class=\"mtk12\">recoverFunds</span><span class=\"mtk1\">               ·          -  ·          -  ·       </span><span class=\"mtk7\">35298</span><span class=\"mtk1\">  ·            </span><span class=\"mtk7\">1</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">MockERC20</span><span class=\"mtk1\">               ·  </span><span class=\"mtk12\">transfer</span><span class=\"mtk1\">                   ·          -  ·          -  ·       </span><span class=\"mtk7\">51378</span><span class=\"mtk1\">  ·            </span><span class=\"mtk7\">2</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">OwnedResolver</span><span class=\"mtk1\">           ·  </span><span class=\"mtk12\">setAddr</span><span class=\"mtk1\">                    ·      </span><span class=\"mtk7\">53760</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">53772</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">53770</span><span class=\"mtk1\">  ·            </span><span class=\"mtk7\">7</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">PublicResolver</span><span class=\"mtk1\">          ·  </span><span class=\"mtk12\">setAddr</span><span class=\"mtk1\">                    ·          -  ·          -  ·       </span><span class=\"mtk7\">58510</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">22</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">PublicResolver</span><span class=\"mtk1\">          ·  </span><span class=\"mtk12\">setApprovalForAll</span><span class=\"mtk1\">          ·          -  ·          -  ·       </span><span class=\"mtk7\">46189</span><span class=\"mtk1\">  ·            </span><span class=\"mtk7\">1</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">PublicResolver</span><span class=\"mtk1\">          ·  </span><span class=\"mtk12\">setName</span><span class=\"mtk1\">                    ·          -  ·          -  ·       </span><span class=\"mtk7\">55359</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">22</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">PublicResolver</span><span class=\"mtk1\">          ·  </span><span class=\"mtk12\">setText</span><span class=\"mtk1\">                    ·          -  ·          -  ·       </span><span class=\"mtk7\">57629</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">22</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">ReverseRegistrar</span><span class=\"mtk1\">        ·  </span><span class=\"mtk12\">claim</span><span class=\"mtk1\">                      ·      </span><span class=\"mtk7\">60960</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">60972</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">60966</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">44</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">Root</span><span class=\"mtk1\">                    ·  </span><span class=\"mtk12\">setController</span><span class=\"mtk1\">              ·          -  ·          -  ·       </span><span class=\"mtk7\">47813</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">30</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">Root</span><span class=\"mtk1\">                    ·  </span><span class=\"mtk12\">setSubnodeOwner</span><span class=\"mtk1\">            ·          -  ·          -  ·       </span><span class=\"mtk7\">58638</span><span class=\"mtk1\">  ·            </span><span class=\"mtk7\">1</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">|  </span><span class=\"mtk12\">SimplePublicSuffixList</span><span class=\"mtk1\">  ·  </span><span class=\"mtk12\">addPublicSuffixes</span><span class=\"mtk1\">          ·      </span><span class=\"mtk7\">47573</span><span class=\"mtk1\">  ·      </span><span class=\"mtk7\">71045</span><span class=\"mtk1\">  ·       </span><span class=\"mtk7\">68810</span><span class=\"mtk1\">  ·           </span><span class=\"mtk7\">21</span><span class=\"mtk1\">  ·          -  │</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">···························|·····························|·············|·············|··············|···············|··············</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-04-ens-findings/issues/220#issuecomment-1536271298\">Arachnid (ENS) acknowledged</a></strong></p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk14 { color: #F44747; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#medium-risk-findings-7\">Medium Risk Findings (7)</a></p>\n<ul>\n<li><a href=\"#m-01-hexutilshexstringtobytes32-and-hexutilshextoaddress-may-return-incorrect-results\">[M-01] <code>HexUtils.hexStringToBytes32()</code> and <code>HexUtils.hexToAddress()</code> may return incorrect results</a></li>\n<li><a href=\"#m-02-invalid-addresses-will-be-accepted-as-resolvers-possibly-bricking-assets\">[M-02] Invalid addresses will be accepted as resolvers, possibly bricking assets</a></li>\n<li><a href=\"#m-03-offchain-name-resolution-would-fail-despite-the-located-dns-resolver-being-fully-functional\">[M-03] Offchain name resolution would fail despite the located DNS resolver being fully functional</a></li>\n<li><a href=\"#m-04-incorrect-implementation-of-recordparserreadkeyvalue\">[M-04] Incorrect implementation of <code>RecordParser.readKeyValue()</code></a></li>\n<li><a href=\"#m-05-unintentionally-register-a-non-relevant-dns-name-owner\">[M-05] Unintentionally register a non-relevant DNS name owner</a></li>\n<li><a href=\"#m-06-validatesignature-in-ellipticcurve-mixes-up-jacobian-and-projective-coordinates\">[M-06] <code>validateSignature(...)</code> in <code>EllipticCurve</code> mixes up Jacobian and projective coordinates</a></li>\n<li><a href=\"#m-07-missing-recursive-calls-handling-in-offchaindnsresolver-ccip-aware-contract\">[M-07] Missing recursive calls handling in <code>OffchainDNSResolver</code> CCIP-aware contract</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#low-findings\">LOW FINDINGS</a></li>\n<li><a href=\"#non-critical-findings\">NON-CRITICAL FINDINGS</a></li>\n<li><a href=\"#l-01-use-abiencode-to-convert-safest-way-from-uint-values-to-bytes\">L-01 Use <code>abi.encode</code> to convert safest way from uint values to bytes</a></li>\n<li><a href=\"#l-02-loss-of-precision-due-to-rounding\">L-02 Loss of precision due to rounding</a></li>\n<li><a href=\"#l-03-consider-using-openzeppelins-safecast-library-to-prevent-unexpected-overflows-when-casting-from-uint256\">L-03 Consider using OpenZeppelin’s SafeCast library to prevent unexpected overflows when casting from uint256</a></li>\n<li><a href=\"#l-04-lack-of-sanitythresholdlimit-checks\">L-04 Lack of Sanity/Threshold/Limit Checks</a></li>\n<li><a href=\"#l-05-function-calls-in-loop-could-lead-to-denial-of-service\">L-05 Function Calls in Loop Could Lead to Denial of Service</a></li>\n<li><a href=\"#l-06-project-upgrade-and-stop-scenario-should-be\">L-06 Project Upgrade and Stop Scenario should be</a></li>\n<li><a href=\"#l-07-front-running-attacks-by-the-onlyowner\">L-07 Front running attacks by the onlyOwner</a></li>\n<li><a href=\"#l-08-use-byteslibsol-library-to-safely-covert-bytes-to-uint256\">L-08 Use BytesLib.sol library to safely covert bytes to uint256</a></li>\n<li><a href=\"#l-09-in-the-constructor-there-is-no-return-of-incorrect-address-identification\">L-09 In the constructor, there is no return of incorrect address identification</a></li>\n<li><a href=\"#l-10-even-with-the-onlyowner-or-owner_only-modifier-it-is-best-practice-to-use-the-re-entrancy-pattern\">L-10 Even with the <code>onlyOwner</code> or <code>owner_only</code> modifier, it is best practice to use the re-entrancy pattern</a></li>\n<li><a href=\"#n-01-avoid-infinite-loops-whenever-possible\">N-01 Avoid infinite loops whenever possible</a></li>\n<li><a href=\"#n-02-immutable-should-be-uppercase\">N-02 immutable should be uppercase</a></li>\n<li><a href=\"#n-03-for-functions-follow-solidity-standard-naming-conventions-internal-function-style-rule\">N-03 For functions, follow Solidity standard naming conventions (internal function style rule)</a></li>\n<li><a href=\"#n-04-need-fuzzing-test-for-unchecked\">N-04 Need Fuzzing test for unchecked</a></li>\n<li><a href=\"#n-05-remove-commented-out-code\">N-05 Remove commented out code</a></li>\n<li><a href=\"#n-06-inconsistent-method-of-specifying-a-floating-pragma\">N-06 Inconsistent method of specifying a floating pragma</a></li>\n<li><a href=\"#n-07-no-same-value-input-control\">N-07 NO SAME VALUE INPUT CONTROL</a></li>\n<li><a href=\"#n-08-constant-redefined-elsewhere\">N-08 Constant redefined elsewhere</a></li>\n<li><a href=\"#n-09-according-to-the-syntax-rules-use--mapping--instead-of--mapping-using-spaces-as-keyword\">N-09 According to the syntax rules, use => mapping ( instead of => mapping( using spaces as keyword</a></li>\n<li><a href=\"#n-10-use-smtchecker\">N-10 Use SMTChecker</a></li>\n<li><a href=\"#n-11-assembly-codes-specific--should-have-comments\">N-11 Assembly Codes Specific – Should Have Comments</a></li>\n<li><a href=\"#n-12-take-advantage-of-custom-errors-return-value-property\">N-12 Take advantage of Custom Error’s return value property</a></li>\n<li><a href=\"#n-13-use-constants-instead-of-using-numbers-directly-without-explanations\">N-13 Use constants instead of using numbers directly without explanations</a></li>\n<li><a href=\"#n-14-shorthand-way-to-write-if--else-statement\">N-14 Shorthand way to write if / else statement</a></li>\n<li><a href=\"#n-15-dont-use-named-return-variables-its-confusing\">N-15 Don’t use named return variables, it’s confusing</a></li>\n<li><a href=\"#n-16-constants-should-be-in-uppercase\">N-16 Constants should be in uppercase</a></li>\n<li><a href=\"#n-17-typos\">N-17 TYPOS</a></li>\n<li><a href=\"#n-18-use-named-parameters-for-mapping-type-declarations\">N-18 Use named parameters for mapping type declarations</a></li>\n<li><a href=\"#n-19-file-does-not-contain-an-spdx-identifier\">N-19 File does not contain an SPDX Identifier</a></li>\n<li><a href=\"#n-20-declaration-shadows-an-existing-declaration\">N-20 Declaration shadows an existing declaration</a></li>\n<li><a href=\"#n-21-event-is-missing-indexed-fields\">N-21 Event is missing indexed fields</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#table-of-contents\">Table of Contents</a></li>\n<li><a href=\"#g-01-refactor-code-to-avoid-unnecessary-memory-expansion-and-data-check-within-loops\">G-01 Refactor code to avoid unnecessary memory expansion and data check within loops</a></li>\n<li><a href=\"#g-02-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\">G-02 State variables can be cached instead of re-reading them from storage</a></li>\n<li><a href=\"#g-03-create-immutable-variable-to-avoid-an-external-call\">G-03 Create immutable variable to avoid an external call</a></li>\n<li><a href=\"#g-04-avoid-emitting-storage-values\">G-04 Avoid emitting storage values</a></li>\n<li><a href=\"#g-05-refactor-code-with-assembly-to-check-zero-address-hash-values-and-perform-external-call\">G-05 Refactor code with assembly to check zero address, hash values, and perform external call</a></li>\n<li><a href=\"#g-06-use-assembly-to-hash-values-more-efficiently\">G-06 Use assembly to hash values more efficiently</a></li>\n<li><a href=\"#g-07-use-assembly-to-make-more-efficient-back-to-back-calls\">G-07 Use assembly to make more efficient back-to-back calls</a></li>\n<li><a href=\"#g-08-use-assembly-for-loops\">G-08 Use assembly for loops</a></li>\n<li><a href=\"#g-09-use-assembly-to-grab-and-cast-value-in-byte-array\">G-09 Use assembly to grab and cast value in byte array</a></li>\n<li><a href=\"#g-10-include-check-in-assembly-block\">G-10 Include check in assembly block</a></li>\n<li><a href=\"#g-11-write-a-more-gas-efficient-assembly-loop\">G-11 Write a more gas efficient assembly loop</a></li>\n<li><a href=\"#g-12-use-a-do-while-loop-instead-of-a-for-loop\">G-12 Use a <code>do while</code> loop instead of a <code>for</code> loop</a></li>\n<li><a href=\"#g-13-dont-cache-value-if-it-is-only-used-once\">G-13 Don’t cache value if it is only used once</a></li>\n<li><a href=\"#g-14-refactor-code-to-avoid-instantiating-memory-struct-within-loop\">G-14 Refactor code to avoid instantiating memory struct within loop</a></li>\n<li><a href=\"#g-15-if-statements-that-use--can-be-refactored-into-nested-if-statements\">G-15 <code>If</code> statements that use <code>&#x26;</code> can be refactored into nested <code>if</code> statements</a></li>\n<li><a href=\"#g-16-refactor-modifier-to-avoid-two-external-calls-when-calling-setpublicsuffixlist\">G-16 Refactor modifier to avoid two external calls when calling <code>setPublicSuffixList</code></a></li>\n<li><a href=\"#gasreport-output-with-all-optimizations-applied\"><code>GasReport</code> output, with all optimizations applied</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}