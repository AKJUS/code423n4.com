{
  "circa": {
    "title": "Llama",
    "sponsor": "Llama",
    "slug": "2023-06-llama",
    "date": "2023-07-26",
    "findings": "https://github.com/code-423n4/2023-06-llama-findings/issues",
    "contest": 246
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Llama smart contract system written in Solidity. The audit took place between June 6—June 14 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p> 50 wardens contributed reports to the Llama Audit:</p>\n<ol>\n<li>0xHati</li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>0xcm</li>\n<li><a href=\"https://twitter.com/0xnevi\">0xnev</a></li>\n<li>Atree</li>\n<li>BLOS</li>\n<li>BRONZEDISC</li>\n<li><a href=\"https://twitter.com/Conan0x3\">Co0nan</a></li>\n<li>DavidGiladi</li>\n<li>Go-Langer</li>\n<li><a href=\"https://twitter.com/0xJCN\">JCN</a></li>\n<li><a href=\"https://twitter.com/CrystAlline_K42\">K42</a></li>\n<li>Madalad</li>\n<li>MiniGlome</li>\n<li><a href=\"https://twitter.com/QiuhaoLi\">QiuhaoLi</a></li>\n<li>Rageur</li>\n<li>Raihan</li>\n<li><a href=\"https://twitter.com/Rolezn\">Rolezn</a></li>\n<li>SAAJ</li>\n<li>SAQ</li>\n<li>SM3_SS</li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li>T1MOH</li>\n<li><a href=\"https://twitter.com/0xToshii\">Toshii</a></li>\n<li><a href=\"https://github.com/udsene\">Udsen</a></li>\n<li>VictoryGod</li>\n<li><a href=\"https://twitter.com/auditor0517\">auditor0517</a></li>\n<li><a href=\"https://twitter.com/iamdirky\">dirk_y</a></li>\n<li>ernestognw</li>\n<li>flacko</li>\n<li><a href=\"https://twitter.com/hunt3r_w3b\">hunter_w3b</a></li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li>ktg</li>\n<li>kutugu</li>\n<li>libratus</li>\n<li>lsaudit</li>\n<li><a href=\"http://www.linkedin.com/in/mahdirostami\">mahdirostami</a></li>\n<li>matrix_0wl</li>\n<li><a href=\"https://www.linkedin.com/in/minhquanym/\">minhquanym</a></li>\n<li><a href=\"https://twitter.com/n1punp\">n1punp</a></li>\n<li><a href=\"https://www.linkedin.com/in/naman-agrawal1778/\">naman1778</a></li>\n<li>neko_nyaa</li>\n<li>peanuts</li>\n<li>petrichor</li>\n<li>qpzm</li>\n<li>rvierdiiev</li>\n<li>sces60107</li>\n<li>sebghatullah</li>\n<li>shamsulhaq123</li>\n<li>xuwinnie</li>\n</ol>\n<p>This audit was judged by <a href=\"https://twitter.com/gzeon\">gzeon</a>.</p>\n<p>Final report assembled by PaperParachute.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 5 unique vulnerabilities. Of these vulnerabilities, 2 received a risk rating in the category of HIGH severity and 3 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 13 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 17 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-06-llama\">C4 Llama repository</a>, and is composed of 23 smart contracts written in the Solidity programming language and includes 2096 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-2\" style=\"position:relative;\"><a href=\"#high-risk-findings-2\" aria-label=\"high risk findings 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (2)</h1>\n<h2 id=\"h-01-in-llamarelativequorum-the-governance-result-might-be-incorrect-as-it-counts-the-wrong-approvaldisapproval\" style=\"position:relative;\"><a href=\"#h-01-in-llamarelativequorum-the-governance-result-might-be-incorrect-as-it-counts-the-wrong-approvaldisapproval\" aria-label=\"h 01 in llamarelativequorum the governance result might be incorrect as it counts the wrong approvaldisapproval permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/203\">[H-01] In <code>LlamaRelativeQuorum</code>, the governance result might be incorrect as it counts the wrong approval/disapproval</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/203\">auditor0517</a>, also found by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/135\">Toshii</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/115\">kutugu</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/47\">0xnev</a>, and <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/33\">T1MOH</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/9d641b32e3f4092cc81dbac7b1c451c695e78983/src/strategies/LlamaRelativeQuorum.sol#L223\">https://github.com/code-423n4/2023-06-llama/blob/9d641b32e3f4092cc81dbac7b1c451c695e78983/src/strategies/LlamaRelativeQuorum.sol#L223</a> <br><a href=\"https://github.com/code-423n4/2023-06-llama/blob/9d641b32e3f4092cc81dbac7b1c451c695e78983/src/strategies/LlamaRelativeQuorum.sol#L242\">https://github.com/code-423n4/2023-06-llama/blob/9d641b32e3f4092cc81dbac7b1c451c695e78983/src/strategies/LlamaRelativeQuorum.sol#L242</a></p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The <code>LlamaRelativeQuorum</code> uses approval/disapproval thresholds that are specified as percentages of total supply and the approval/disapproval supplies are set at <code>validateActionCreation()</code> during the action creation.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateActionCreation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaPolicy</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Reduce SLOADs.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">approvalPolicySupply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">llamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getRoleSupplyAsNumberOfHolders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">approvalRole</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">approvalPolicySupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleHasZeroSupply</span><span class=\"mtk1\">(</span><span class=\"mtk12\">approvalRole</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">disapprovalPolicySupply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">llamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getRoleSupplyAsNumberOfHolders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">disapprovalPolicySupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleHasZeroSupply</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Save off the supplies to use for checking quorum.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">actionApprovalSupply</span><span class=\"mtk1\">[</span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">approvalPolicySupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">actionDisapprovalSupply</span><span class=\"mtk1\">[</span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">disapprovalPolicySupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>As we can see, <code>actionApprovalSupply</code> and <code>actionDisapprovalSupply</code> are set using <code>getRoleSupplyAsNumberOfHolders</code> which means the total number of role holders.</p>\n<p>But while counting for <code>totalApprovals/totalDisapprovals</code> in <code>getApprovalQuantityAt()/getDisapprovalQuantityAt()</code>, it adds the quantity instead of role holders(1 for each holder).</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getApprovalQuantityAt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">approvalRole</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">forceApprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPastQuantity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">forceApprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">] ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">; </span><span class=\"mtk3\">//@audit should return supply, not quantity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>So the governance result would be wrong with the below example.</p>\n<ol>\n<li>There are 3 role holders(Alice, Bob, Charlie) and Alice has 2 quantities, others have 1.</li>\n<li>During the action creation with the <code>LlamaRelativeQuorum</code> strategy, <code>actionApprovalSupply = 3</code> and there should be 2 approved holders at least when <code>minApprovalPct = 51%</code>.</li>\n<li>But if Alice approves the action, the result of <code>getApprovalQuantityAt()</code> will be 2 and the action will be approved with only one approval.</li>\n</ol>\n<p>It’s because <code>getApprovalQuantityAt()</code> return the quantity although <code>actionApprovalSupply</code> equals <code>NumberOfHolders</code>.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><code>getApprovalQuantityAt()</code> and <code>getDisapprovalQuantityAt()</code> should return 1 instead of <code>quantity</code> for the positive quantity.</p>\n<p>I think we can modify these functions like below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getApprovalQuantityAt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">approvalRole</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">forceApprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPastQuantity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">forceApprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">] ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getDisapprovalQuantityAt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">forceDisapprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPastQuantity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">forceDisapprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">] ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/203#issuecomment-1601169669\">AustinGreen (Llama) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>This is actually how we intend this strategy to work but we’re open to feedback! Here’s an example:</p>\n<ul>\n<li>An instance has 10 role holders and a 50% min approval percentage. Each role holder’s quantity is 1, so 5 role holders can approve this action.</li>\n<li>2 of the role holders have their quantity increased to 2.</li>\n<li>This means that if each of these role holders cast approvals, then their approval power will count as 4. That means just one other role holder is needed to cast approval to approve the action.</li>\n</ul>\n<p>In this system quantity can be used to provide granular approval weights to role holders.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/203#issuecomment-1616683309\">gzeon (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>@AustinGreen- I don’t think this make sense. Sure, if each holder’s quantity is 1, then <code>getRoleSupply</code> is same as <code>getRoleSupplyAsNumberOfHolders</code> and what you said is valid. However, if you have 10 holders each with quantity 10 at snapshot, then your <code>actionApprovalSupply</code> is set to 10 (number of holder) and any of their approval (10 quantity) would hit quorum.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/203#issuecomment-1616796649\">AustinGreen (Llama) commented</a>:</strong></p>\n<blockquote>\n<p>@gzeon- Yes that’s exactly how the design is intended to work!</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/203#issuecomment-1617278035\">gzeon (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>@AustinGreen- This sounds weird, is this design documented anywhere? From what I can see in the code comments it seems to be hard for anyone (including potential user/dao) to understand such logic. </p>\n<p>In the code, there is a comment</p>\n<blockquote>\n<p> Minimum percentage of <code>totalApprovalQuantity / totalApprovalSupplyAtCreationTime</code> required for the action to be queued</p>\n</blockquote>\n<p>I think it is fair for one to assume <code>totalApprovalQuantity</code> and <code>totalApprovalSupplyAtCreationTime</code> would be using the same metric, instead of one using the raw count and the other using <code>AsNumberOfHolders</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/203\">AustinGreen (Llama) commented</a>:</strong></p>\n<blockquote>\n<p>Although this is the intended design for this strategy, we decided to create an additional strategy that Llama instances can adopt that follows the warden’s recommendations. It uses total (dis)approval quantity for the quorum calculation as specified.</p>\n</blockquote>\n<hr>\n<h2 id=\"h-02-anyone-can-change-approvaldisapproval-threshold-for-any-action-using-llamarelativequorum-strategy\" style=\"position:relative;\"><a href=\"#h-02-anyone-can-change-approvaldisapproval-threshold-for-any-action-using-llamarelativequorum-strategy\" aria-label=\"h 02 anyone can change approvaldisapproval threshold for any action using llamarelativequorum strategy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/62\">[H-02] Anyone can change approval/disapproval threshold for any action using LlamaRelativeQuorum strategy</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/62\">ktg</a>, also found by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/201\">auditor0517</a> and <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/195\">dirk_y</a></em></p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When a new action is created with <code>LlamaRelativeQuorum</code> strategy, <code>LlamaCore</code> will call function <code>validateActionCreation</code> which is currently implemented as below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function validateActionCreation(ActionInfo calldata actionInfo) external {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    LlamaPolicy llamaPolicy = policy; // Reduce SLOADs.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 approvalPolicySupply = llamaPolicy.getRoleSupplyAsNumberOfHolders(approvalRole);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (approvalPolicySupply == 0) revert RoleHasZeroSupply(approvalRole);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 disapprovalPolicySupply = llamaPolicy.getRoleSupplyAsNumberOfHolders(disapprovalRole);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (disapprovalPolicySupply == 0) revert RoleHasZeroSupply(disapprovalRole);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Save off the supplies to use for checking quorum.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    actionApprovalSupply[actionInfo.id] = approvalPolicySupply;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    actionDisapprovalSupply[actionInfo.id] = disapprovalPolicySupply;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>The last 2 lines of code is to <code>Save off the supplies to use for checking quorum</code>. The 2 variables <code>actionApprovalSupply</code> and <code>actionDisapprovalSupply</code> are described as <code>Mapping of action ID to the supply of the approval/disapproval role at the time the action was created.</code></p>\n<p>This means the strategy will save the total supply of approval/disapproval role at creation time and then use them to calculate the approval/disapproval threshold, which equals to (approval/disapproval percentage) * (total supply of approval/disapproval).</p>\n<p>However, since the function <code>validateActionCreation</code>’s scope is <code>external</code> and does not require any privilege to be called, any user can call this function and update the total supply of approval/disapproval role to the current timestamp and break the intention to keep total supply of approval/disapproval role <code>at the time the action was created</code>. This issue is highly critical because many Llama protocol’s functions depend on these 2 variables to function as intended.</p>\n<p>For example, if the total supply of approval role is 10 at the creation of action and the <code>minApprovalPct</code> = 100% - which means requires all policy holders to approve the action to pass it.</p>\n<p>If it then be casted 9 votes (1 vote short), the action’s state is still Active (not approved yet).</p>\n<p>However, if 1 user is revoked their approval/role, anyone can call function <code>validateActionCreation</code> and update the required threshold to 9 votes and thus the action’s state becomes Approved.</p>\n<p>Below is a POC for the above example, for ease of testing, place this test case under file <code>LlamaStrategy.t.sol</code>, contract <code>IsActionApproved</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function testAnyoneCanChangeActionApprovalSupply() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Deploy a relative quorum strategy</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 numberOfHolders = 10;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Assign 10 users role of TestRole1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    for (uint256 i=0; i&lt; numberOfHolders; i++){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      address _policyHolder = address(uint160(i + 100));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      if (mpPolicy.balanceOf(_policyHolder) == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vm.prank(address(mpExecutor));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        mpPolicy.setRoleHolder(uint8(Roles.TestRole1), _policyHolder, 1, type(uint64).max);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Create  a LlamaRelativeQuorum strategy</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // in this minApprovalPct = 10_000 (meaning we require all 10 policyholders to approve)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    LlamaRelativeQuorum.Config memory testStrategyData = LlamaRelativeQuorum.Config({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      approvalPeriod: 2 days,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      queuingPeriod: 2 days,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      expirationPeriod: 8 days,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      isFixedLengthApprovalPeriod: true,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      minApprovalPct: 10000, // require all policyholder to approve</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      minDisapprovalPct: 2000,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      approvalRole: uint8(Roles.TestRole1),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      disapprovalRole: uint8(Roles.TestRole1),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      forceApprovalRoles: new uint8[](0),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      forceDisapprovalRoles: new uint8[](0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ILlamaStrategy testStrategy = lens.computeLlamaStrategyAddress(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">      address(relativeQuorumLogic), DeployUtils.encodeStrategy(testStrategyData), address(mpCore)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    LlamaRelativeQuorum.Config[] memory testStrategies</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    = new LlamaRelativeQuorum.Config[](1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    testStrategies[0] = testStrategyData;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(address(mpExecutor));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mpCore.createStrategies(relativeQuorumLogic, DeployUtils.encodeStrategyConfigs(testStrategies));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // create action</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ActionInfo memory actionInfo = createAction(testStrategy);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    assertEq(LlamaRelativeQuorum(address(testStrategy)).actionApprovalSupply(actionInfo.id), numberOfHolders);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Suppose that 9 policyholder approve</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // the action lacks 1 more approval vote so isActionApproved = false</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    approveAction(9, actionInfo);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    assertEq(LlamaRelativeQuorum(address(testStrategy)).isActionApproved(actionInfo), false);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Revoke 1 user</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(address(mpExecutor));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mpPolicy.revokePolicy(address(100));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Now anyone can update the actionApprovalSupply and therefore</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // change the approval threshold</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address anyOne = address(12345);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(anyOne);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    LlamaRelativeQuorum(address(testStrategy)).validateActionCreation(actionInfo);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // The actionApproval for the above action is reduced to 9</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // and the action state changes to approved</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    assertEq(LlamaRelativeQuorum(address(testStrategy)).actionApprovalSupply(actionInfo.id), numberOfHolders - 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    assertEq(LlamaRelativeQuorum(address(testStrategy)).isActionApproved(actionInfo), true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Since the intention is to keep values <code>actionApprovalSupply</code> and <code>actionDisapprovalSupply</code> snapshot at creation time for every action and <code>LlamaCore</code> only call <code>validateActionCreation</code> at creation time, I think the easiest way is to allow only <code>llamaCore</code> to call this function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/62#issuecomment-1601259723\">AustinGreen (Llama) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This finding was addressed in this PR: <a href=\"https://github.com/llamaxyz/llama/pull/384\">https://github.com/llamaxyz/llama/pull/384</a> (note our repo is private until we launch)</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-3\" style=\"position:relative;\"><a href=\"#medium-risk-findings-3\" aria-label=\"medium risk findings 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (3)</h1>\n<h2 id=\"m-01-it-is-not-possible-to-execute-actions-that-require-eth-or-other-protocol-token\" style=\"position:relative;\"><a href=\"#m-01-it-is-not-possible-to-execute-actions-that-require-eth-or-other-protocol-token\" aria-label=\"m 01 it is not possible to execute actions that require eth or other protocol token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/247\">[M-01] It is not possible to execute actions that require ETH (or other protocol token)</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/247\">libratus</a>, also found by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/296\">Udsen</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/283\">flacko</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/255\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/215\">n1punp</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/189\">Go-Langer</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/176\">QiuhaoLi</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/172\">sces60107</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/136\">Toshii</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/118\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/105\">minhquanym</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/78\">Madalad</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/73\">BRONZEDISC</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/63\">0xcm</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/57\">ernestognw</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/48\">Co0nan</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/30\">T1MOH</a>, and <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/19\">MiniGlome</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L334\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L334</a> <br><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaExecutor.sol#L29\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaExecutor.sol#L29</a></p>\n<p>Actions can have value attached to them. That means when action is being executed, a certain amount of ETH (or other protocol token) need to be sent by the caller with the contract call. This is why <code>LlamaCore.executeAction</code> is payable.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeAction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p>However, when LlamaCore executes the action it doesn’t pass value to the downstream call to LlamaExecutor</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Execute action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">executor</span><span class=\"mtk1\">.</span><span class=\"mtk11\">execute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">action</span><span class=\"mtk1\">.</span><span class=\"mtk12\">isScript</span><span class=\"mtk1\">, </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>LlamaExecutor’s <code>execute</code> is not payable even though it does try to pass value to the downstream call</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">execute</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isScript</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">result</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">LLAMA_CORE</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OnlyLlamaCore</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">isScript</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk11\">delegatecall</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">) : </span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p>This will of course revert because LlamaExecutor is not expected to have any ETH balance.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>To reproduce the issue based on the existing tests we can do the following changes:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/LlamaCore.t.sol b/test/LlamaCore.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 8135c93..6964846 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/LlamaCore.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/LlamaCore.t.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -77,9 +77,9 @@ contract LlamaCoreTest is LlamaTestSetup, LlamaCoreSigUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function _createAction() public returns (ActionInfo memory actionInfo) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bytes memory data = abi.encodeCall(MockProtocol.pause, (true));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     vm.prank(actionCreatorAaron);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 actionId = mpCore.createAction(uint8(Roles.ActionCreator), mpStrategy1, address(mockProtocol), 0, data, &quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 actionId = mpCore.createAction(uint8(Roles.ActionCreator), mpStrategy1, address(mockProtocol), 1, data, &quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     actionInfo =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      ActionInfo(actionId, actionCreatorAaron, uint8(Roles.ActionCreator), mpStrategy1, address(mockProtocol), 0, data);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      ActionInfo(actionId, actionCreatorAaron, uint8(Roles.ActionCreator), mpStrategy1, address(mockProtocol), 1, data);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     vm.warp(block.timestamp + 1);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -107,7 +107,7 @@ contract LlamaCoreTest is LlamaTestSetup, LlamaCoreSigUtils {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function _executeAction(ActionInfo memory actionInfo) public {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     vm.expectEmit();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     emit ActionExecuted(actionInfo.id, address(this), actionInfo.strategy, actionInfo.creator, bytes(&quot;&quot;));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    mpCore.executeAction(actionInfo);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    mpCore.executeAction{value: actionInfo.value}(actionInfo);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     Action memory action = mpCore.getAction(actionInfo.id);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     assertEq(action.executed, true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/test/mock/MockProtocol.sol b/test/mock/MockProtocol.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 1636808..f6b0e0f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/test/mock/MockProtocol.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/test/mock/MockProtocol.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -21,7 +21,7 @@ contract MockProtocol {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     return msg.value;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  function pause(bool isPaused) external onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  function pause(bool isPaused) external payable onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     paused = isPaused;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p>Now we can run any test that executes this action, for example:<br>\n<code>forge test -m test_RevertIf_ActionExecuted</code></p>\n<p>The test fails with “EvmError: OutOfFund”.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>It seems like an important part of protocol functionality that is not working, therefore suggested <strong>High</strong> severity.</p>\n<p>The fix is straightforward, making LlamaExecutor.execute payable and passing value in LlamaCore:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaCore.sol b/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 89d60de..05f1755 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -331,7 +331,7 @@ contract LlamaCore is Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Execute action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     (bool success, bytes memory result) =</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      executor.execute(actionInfo.target, actionInfo.value, action.isScript, actionInfo.data);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      executor.execute{value: msg.value}(actionInfo.target, actionInfo.value, action.isScript, actionInfo.data);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (!success) revert FailedActionExecution(result);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaExecutor.sol b/src/LlamaExecutor.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f92ebc0..fe7127e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaExecutor.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaExecutor.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -28,6 +28,7 @@ contract LlamaExecutor {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @return result The data returned by the function being called.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function execute(address target, uint256 value, bool isScript, bytes calldata data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    payable</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (bool success, bytes memory result)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (msg.sender != LLAMA_CORE) revert OnlyLlamaCore();</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/247#issuecomment-1601098574\">AustinGreen (Llama) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>This was resolved in this PR: <a href=\"https://github.com/llamaxyz/llama/pull/367\">https://github.com/llamaxyz/llama/pull/367</a> (note repo is currently private but will be made public before launch)</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/247#issuecomment-1616583612\">gzeon (Judge) reduced severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Valid issue, actions that require the executor to forward a call value would not work. However, fund is secure and not stuck since this does not impact the functionality of <code>LlamaAccount.transferNativeToken</code> which take the amount from calldata.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-user-with-disapproval-role-can-gas-grief-the-action-executor\" style=\"position:relative;\"><a href=\"#m-02-user-with-disapproval-role-can-gas-grief-the-action-executor\" aria-label=\"m 02 user with disapproval role can gas grief the action executor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/223\">[M-02] User with disapproval role can gas grief the action executor</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/223\">dirk_y</a>, also found by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/80\">rvierdiiev</a></em></p>\n<p>Because disapprovals can be cast after the minimum queue time has expired (i.e. the action is now executable), a user with the disapproval role can frontrun any execute calls to push the action into the disapproved state and cause the execute call to fail, hence gas griefing the execute caller. This is particularly easy to achieve if a user has a force disapproval role.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>During calls to <code>castDisapproval</code> there is a call to <code>_preCastAssertions</code> which checks that the action is in a queued state. The purpose of this check is to ensure that disapprovals can only be cast after the action was first approved and then queued for execution.</p>\n<p>However, the issue is that the action remains in the queue state even after the <code>minExecutionTime</code> has been passed. The result is that a malicious user can disapprove an action once it is ready to execute.</p>\n<p>Below is a diff to the existing test suite that shows how an action that is ready to be executed could be disapproved just before execution. This isn’t demonstrated with a force disapproval role, but that case would be the most harmful in terms of gas griefing.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">diff --git a/test/LlamaCore.t.sol b/test/LlamaCore.t.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">index 8135c93..34fd630 100644</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">--- a/test/LlamaCore.t.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+++ b/test/LlamaCore.t.sol</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">@@ -1015,8 +1015,12 @@ contract ExecuteAction is LlamaCoreTest {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     mpCore.queueAction(actionInfo);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     vm.warp(block.timestamp + 6 days);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"> </span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-    vm.expectEmit();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">-    emit ActionExecuted(0, address(this), mpStrategy1, actionCreatorAaron, bytes(&quot;&quot;));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    vm.prank(disapproverDave);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    mpCore.castDisapproval(uint8(Roles.Disapprover), actionInfo, &quot;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    vm.prank(disapproverDrake);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    mpCore.castDisapproval(uint8(Roles.Disapprover), actionInfo, &quot;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+    vm.expectRevert();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">     mpCore.executeAction(actionInfo);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   }</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I suggest that disapprovals should only be allowed to be cast whilst the timestamp is still less than the <code>minExecutionTime</code> of the action. Effectively there is a specified disapproval window. The following lines could be added to <code>_preCastAssertions</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (!isApproval) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    require(block.timestamp &lt; action.minExecutionTime, &quot;Missed disapproval window&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/223#issuecomment-1601698591\">AustinGreen (Llama) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>We confirm this and are working on a fix. It is a duplicate of <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/80\">https://github.com/code-423n4/2023-06-llama-findings/issues/80</a></p>\n<p>Not sure if it should be medium or not but don’t feel strongly. Llama is a trusted system so this would require malicious user intent or user error.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/223#issuecomment-1622579973\">Co0nan (Warden) commented</a>:</strong></p>\n<blockquote>\n<p>This is more of an improved design than a security issue. <code>disapproval</code> role is a highly privileged role as per the design of the system. </p>\n<p>The <code>minExecutionTime</code> is meant to prevent someone from executing the action early but is not designed to prevent the <code>disApproval</code> role. Either he disapproved early or after <code>minExecutionTime</code> passed this doesn’t break the logic of the function at all, it will be excepted to cancel the action in this case. I believe this is a valid QA.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/223\">AustinGreen (Llama) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>We removed the ability to disapprove after minExecutionTime to address this finding.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-llamapolicy-could-be-dos-by-creating-large-amount-of-actions\" style=\"position:relative;\"><a href=\"#m-03-llamapolicy-could-be-dos-by-creating-large-amount-of-actions\" aria-label=\"m 03 llamapolicy could be dos by creating large amount of actions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/64\">[M-03] LlamaPolicy could be DOS by creating large amount of actions</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/64\">ktg</a>, also found by <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/209\">auditor0517</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/144\">BLOS</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/142\">Atree</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/137\">Toshii</a>, <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/12\">xuwinnie</a>, and <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/10\">0xnev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L404-#L409\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L404-#L409</a> <br><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L516-#L562\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L516-#L562</a></p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Currently, when Executor want to set role for a user, he call function <code>LlamaPolicy._setRoleHolder</code>, this in turn will first call function <code>_assertNoActionCreationsAtCurrentTimestamp</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">/// @dev Because role supplies are not checkpointed for simplicity, the following issue can occur</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  /// if each of the below is executed within the same timestamp:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  //    1. An action is created that saves off the current role supply.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  //    2. A policyholder is given a new role.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  //    3. Now the total supply in that block is different than what it was at action creation.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  // As a result, we disallow changes to roles if an action was created in the same block.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  function _assertNoActionCreationsAtCurrentTimestamp() internal view {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (llamaExecutor == address(0)) return; // Skip check during initialization.</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    address llamaCore = LlamaExecutor(llamaExecutor).LLAMA_CORE();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 lastActionCreation = LlamaCore(llamaCore).getLastActionTimestamp();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (lastActionCreation == block.timestamp) revert ActionCreationAtSameTimestamp();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<p>As stated in the comment, the protocol disallows changes to roles if an action was created in the same block. However, function <code>LlamaCore._createAction</code> does not limit the number of actions a user could create. Consequently, a user with createAction role can DOS protocol’s policy by creating large amount of actions. A user can create 24 * 3600 * 30 ~ 2.5 mils actions to DOS a system in a month, this is definitely a not too big number, especially when the protocol is deployed in low fee blockchains. (I notice that the folder <code>script</code> is organized as <code>script/input/{blockchainId}/*.json</code> so I assume that the protocol will be used across different blockchains).</p>\n<p>This will prevents the revoking of expired roles, revoke policy,… because they all use <code>_setRoleHolder</code> function.</p>\n<p>Below is a POC, for ease of testing, place this test case under file LlamaStrategy.t.sol, contract IsActionApproved:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function testDOSByCreatingManyAction() public {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    ILlamaStrategy testStrategy = deployTestStrategy();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 numberOfHolders = 10;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    generateAndSetRoleHolders(numberOfHolders);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // create action</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bytes32 newPermissionId = keccak256(abi.encode(address(mockProtocol), PAUSE_SELECTOR, testStrategy));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(address(mpExecutor));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mpPolicy.setRolePermission(uint8(Roles.ActionCreator), newPermissionId, true);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    bytes memory data = abi.encodeCall(MockProtocol.pause, (true));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(actionCreatorAaron);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    uint256 actionId = mpCore.createAction(uint8(Roles.ActionCreator), testStrategy, address(mockProtocol), 0, data, &quot;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    console.logUint(actionId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // revert if we try to set role</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(address(mpExecutor));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.expectRevert(LlamaPolicy.ActionCreationAtSameTimestamp.selector);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mpPolicy.setRoleHolder(uint8(Roles.TestRole1), address(12345), 1, type(uint64).max);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Pass time</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.warp(block.timestamp + 1);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // Create action again</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(actionCreatorAaron);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    actionId = mpCore.createAction(uint8(Roles.ActionCreator), testStrategy, address(mockProtocol), 0, data, &quot;&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    console.logUint(actionId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    // policy can&#39;t set role again</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.prank(address(mpExecutor));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    vm.expectRevert(LlamaPolicy.ActionCreationAtSameTimestamp.selector);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    mpPolicy.setRoleHolder(uint8(Roles.TestRole1), address(12345), 1, type(uint64).max);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  }</span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>I recommend limiting the number of active actions a user can create.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/64#issuecomment-1608402410\">AustinGreen (Llama) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>We are tracking the issue here and deciding on a fix: <a href=\"https://github.com/llamaxyz/llama/issues/393\">https://github.com/llamaxyz/llama/issues/393</a></p>\n<p>This is a duplicate of <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/209\">https://github.com/code-423n4/2023-06-llama-findings/issues/209</a></p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/64#issuecomment-1616605440\">gzeon (Judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping this as M given this is a valid DOS vector and the cost to DOS is linear. There are EVM chains with low enough gas fee which can make this a feasible attack.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/64\">AustinGreen (Llama) commented</a>:</strong></p>\n<blockquote>\n<p>We addressed this issue by adding an additional checkpoint that strategies can use to get a (dis)approval role’s total number of holders and total quantity in the past. This allowed us to remove the <code>_assertNoActionCreationsAtCurrentTimestamp</code> check.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 9 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/44\">report highlighted below</a> by <strong>Rolezn</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/278\">libratus</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/267\">0xSmartContract</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/199\">QiuhaoLi</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/158\">DavidGiladi</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/123\">kutugu</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/119\">Sathish9098</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/107\">minhquanym</a>, and\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/98\">matrix_0wl</a>\n.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<h3 id=\"low-risk-issues\" style=\"position:relative;\"><a href=\"#low-risk-issues\" aria-label=\"low risk issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk Issues</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Contexts</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[L-01]</td>\n<td align=\"left\">External calls in an un-bounded <code>for-</code>loop may result in a DOS</td>\n<td align=\"center\">19</td>\n</tr>\n<tr>\n<td>[L-02]</td>\n<td align=\"left\">Missing Contract-existence Checks Before Low-level Calls</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>[L-03]</td>\n<td align=\"left\">Protect <code>LlamaPolicy.sol</code> NFT from copying in POW forks</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>[L-04]</td>\n<td align=\"left\">Unbounded loop</td>\n<td align=\"center\">7</td>\n</tr>\n<tr>\n<td>[L-05]</td>\n<td align=\"left\">Inconsistent documentation to actual function logic</td>\n<td align=\"center\">3</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 37 contexts over 5 issues</p>\n<h3 id=\"non-critical-issues\" style=\"position:relative;\"><a href=\"#non-critical-issues\" aria-label=\"non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non-critical Issues</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Contexts</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[N-01]</td>\n<td align=\"left\">Critical Changes Should Use Two-step Procedure</td>\n<td align=\"center\">9</td>\n</tr>\n<tr>\n<td>[N-02]</td>\n<td align=\"left\">Large or complicated code bases should implement fuzzing tests</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[N-03]</td>\n<td align=\"left\">Initial value check is missing in Set Functions</td>\n<td align=\"center\">9</td>\n</tr>\n<tr>\n<td>[N-04]</td>\n<td align=\"left\">Use @inheritdoc rather than using a non-standard annotation</td>\n<td align=\"center\">55</td>\n</tr>\n<tr>\n<td>[N-05]</td>\n<td align=\"left\">Function name should contain <code>InitializeRoles</code> instead of <code>NewRoles</code></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[N-06]</td>\n<td align=\"left\">Add to <code>blacklist</code> function</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 76 contexts over 6 issues</p>\n<h2 id=\"l-01-external-calls-in-an-un-bounded-for-loop-may-result-in-a-dos\" style=\"position:relative;\"><a href=\"#l-01-external-calls-in-an-un-bounded-for-loop-may-result-in-a-dos\" aria-label=\"l 01 external calls in an un bounded for loop may result in a dos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] External calls in an un-bounded <code>for-</code>loop may result in a DOS</h2>\n<p>Consider limiting the number of iterations in <code>for-</code>loops that make external calls.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">roleDescriptions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">roleHolders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L151\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L151</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L155\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L155</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L161\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L161</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L227\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L227</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">291</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">start</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">end</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L291\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L291</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">207</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">237</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">270</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">285</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L156\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L156</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L174\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L174</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L189\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L189</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L207\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L207</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L222\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L222</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L237\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L237</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L270\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L270</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L285\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L285</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L71\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L71</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L178\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L178</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L186\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L186</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L199\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L199</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">strategyConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">forceApprovalRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">: </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">strategyConfig</span><span class=\"mtk1\">.</span><span class=\"mtk12\">forceDisapprovalRoles</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaAbsoluteStrategyBase.sol#L177\">https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaAbsoluteStrategyBase.sol#L177</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaAbsoluteStrategyBase.sol#L185\">https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaAbsoluteStrategyBase.sol#L185</a></p>\n</details>\n<h2 id=\"l-02-missing-contract-existence-checks-before-low-level-calls\" style=\"position:relative;\"><a href=\"#l-02-missing-contract-existence-checks-before-low-level-calls\" aria-label=\"l 02 missing contract existence checks before low level calls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Missing Contract-existence Checks Before Low-level Calls</h2>\n<p>Low-level calls return success if there is no code present at the specified address. </p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">: (</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">isScript</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk11\">delegatecall</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">) : </span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaExecutor.sol#L34\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaExecutor.sol#L34</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">: (</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk11\">delegatecall</span><span class=\"mtk1\">(</span><span class=\"mtk12\">callData</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L323\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L323</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">326</span><span class=\"mtk1\">: (</span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">result</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">target</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk12\">callData</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L326\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L326</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">: (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">success</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">response</span><span class=\"mtk1\">) = </span><span class=\"mtk12\">targets</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">call</span><span class=\"mtk1\">(</span><span class=\"mtk12\">data</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L75\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L75</a></p>\n</details>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In addition to the zero-address checks, add a check to verify that <code>&#x3C;address>.code.length > 0</code></p>\n<h2 id=\"l-03-protect-llamapolicysol--nft-from-copying-in-pow-forks\" style=\"position:relative;\"><a href=\"#l-03-protect-llamapolicysol--nft-from-copying-in-pow-forks\" aria-label=\"l 03 protect llamapolicysol  nft from copying in pow forks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] Protect <code>LlamaPolicy.sol</code>  NFT from copying in POW forks</h2>\n<p>Ethereum has performed the long-awaited “merge” that will dramatically reduce the environmental impact of the network</p>\n<p>There may be forked versions of Ethereum, which could cause confusion and lead to scams as duplicated NFT assets enter the market.</p>\n<p>If the Ethereum Merge, which took place in September 2022, results in the Blockchain splitting into two Blockchains due to the ‘THE DAO’ attack in 2016, this could result in duplication of immutable tokens (NFTs).</p>\n<p>In any case, duplicate NFTs will exist due to the ETH proof-of-work chain and other potential forks, and there’s likely to be some level of confusion around which assets are ‘official’ or ‘authentic.’</p>\n<p>Even so, there could be a frenzy for these copies, as NFT owners attempt to flip the proof-of-work versions of their valuable tokens.</p>\n<p>As ETHPOW and any other forks spin off of the Ethereum mainnet, they will yield duplicate versions of Ethereum’s NFTs. An NFT is simply a blockchain token, and it can work as a deed of ownership to digital items like artwork and collectibles. A forked Ethereum chain will thus have duplicated deeds that point to the same tokenURI.</p>\n<p>About Merge Replay Attack: <a href=\"https://twitter.com/elerium115/status/1558471934924431363?s=20&#x26;t=RRheaYJwo-GmSnePwofgag\">https://twitter.com/elerium115/status/1558471934924431363?s=20&#x26;t=RRheaYJwo-GmSnePwofgag</a></p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaExecutor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L206\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L206</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">346</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L346\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L346</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">17</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">color</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">logo</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadata.sol#L17\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadata.sol#L17</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">tokenURI</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/ERC721NonTransferableMinimalProxy.sol#L30\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/ERC721NonTransferableMinimalProxy.sol#L30</a></p>\n</details>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add the following check:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">chainid</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) { </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">revert</span><span class=\"mtk1\">(); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h2 id=\"l-04-unbounded-loop\" style=\"position:relative;\"><a href=\"#l-04-unbounded-loop\" aria-label=\"l 04 unbounded loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Unbounded loop</h2>\n<p>New items are pushed into the following arrays but there is no option to <code>pop</code> them out. Currently, the array can grow indefinitely. E.g. there’s no maximum limit and there’s no functionality to remove array values.</p>\n<p>If the array grows too large, calling relevant functions might run out of gas and revert. Calling these functions could result in a DOS condition.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">448</span><span class=\"mtk1\">: </span><span class=\"mtk12\">roleBalanceCkpts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">role</span><span class=\"mtk1\">].</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">willHaveRole</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> : </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L448\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L448</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">515</span><span class=\"mtk1\">: </span><span class=\"mtk12\">roleBalanceCkpts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">ALL_HOLDERS_ROLE</span><span class=\"mtk1\">].</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L515\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L515</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">529</span><span class=\"mtk1\">: </span><span class=\"mtk12\">roleBalanceCkpts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">ALL_HOLDERS_ROLE</span><span class=\"mtk1\">].</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L529\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L529</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">: </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Checkpoint</span><span class=\"mtk1\">({</span><span class=\"mtk12\">timestamp:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiration:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">, </span><span class=\"mtk12\">quantity:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">}));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">: </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Checkpoint</span><span class=\"mtk1\">({</span><span class=\"mtk12\">timestamp:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiration:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">, </span><span class=\"mtk12\">quantity:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">}));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">: </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Checkpoint</span><span class=\"mtk1\">({</span><span class=\"mtk12\">timestamp:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiration:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">, </span><span class=\"mtk12\">quantity:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">}));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">: </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk11\">Checkpoint</span><span class=\"mtk1\">({</span><span class=\"mtk12\">timestamp:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiration:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">, </span><span class=\"mtk12\">quantity:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">}));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L143\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L143</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L147\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L147</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L143\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L143</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L147\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L147</a></p>\n</details>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a functionality to delete array values or add a maximum size limit for arrays.</p>\n<h2 id=\"l-05-inconsistent-documentation-to-actual-function-logic\" style=\"position:relative;\"><a href=\"#l-05-inconsistent-documentation-to-actual-function-logic\" aria-label=\"l 05 inconsistent documentation to actual function logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] Inconsistent documentation to actual function logic</h2>\n<p>It is mentioned in documentation of the function <code>validateActionCreation</code> that the param <code>actionInfo</code> is used. </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// @notice Reverts if action creation is not allowed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// @param actionInfo Data required to create an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateActionCreation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/interfaces/ILlamaStrategy.sol#L33-L35\">https://github.com/code-423n4/2023-06-llama/blob/main/src/interfaces/ILlamaStrategy.sol#L33-L35</a></p>\n<p>However, in <code>LlamaAbsoluteQuorum.sol</code> the param is commented out and is not used in the function.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateActionCreation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* actionInfo */</span><span class=\"mtk1\"> ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L27\">https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L27</a></p>\n<p>The same applies to <code>isApprovalEnabled</code> and <code>isDisapprovalEnabled</code>.</p>\n<h2 id=\"n-01-critical-changes-should-use-two-step-procedure\" style=\"position:relative;\"><a href=\"#n-01-critical-changes-should-use-two-step-procedure\" aria-label=\"n 01 critical changes should use two step procedure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Critical Changes Should Use Two-step Procedure</h2>\n<p>The critical procedures should be two step process.</p>\n<p>See similar findings in previous Code4rena audits for reference:<br>\n<a href=\"https://code4rena.com/reports/2022-06-illuminate/#2-critical-changes-should-use-two-step-procedure\">https://code4rena.com/reports/2022-06-illuminate/#2-critical-changes-should-use-two-step-procedure</a></p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">444</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setGuard</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">selector</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ILlamaActionGuard</span><span class=\"mtk1\"> </span><span class=\"mtk12\">guard</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLlama</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L444\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L444</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPolicyMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaPolicyMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_llamaPolicyMetadata</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRootLlama</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L197\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L197</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoleHolder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLlama</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L199\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L199</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">207</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRolePermission</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hasPermission</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLlama</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L207\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L207</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setColor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaExecutor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_color</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAuthorized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L82\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L82</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setLogo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaExecutor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_logo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAuthorized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L90\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L90</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">approved</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/ERC721NonTransferableMinimalProxy.sol#L81\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/ERC721NonTransferableMinimalProxy.sol#L81</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoleHolders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L183\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L183</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRolePermissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RolePermissionData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_setRolePermissions</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L196\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L196</a></p>\n</details>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Lack of two-step procedure for critical operations leaves them error-prone. Consider adding two step procedure on the critical functions.</p>\n<h2 id=\"n-02-large-or-complicated-code-bases-should-implement-fuzzing-tests\" style=\"position:relative;\"><a href=\"#n-02-large-or-complicated-code-bases-should-implement-fuzzing-tests\" aria-label=\"n 02 large or complicated code bases should implement fuzzing tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Large or complicated code bases should implement fuzzing tests</h2>\n<p>Large code bases, or code with lots of inline-assembly, complicated math, or complicated interactions between multiple contracts, should implement <a href=\"https://medium.com/coinmonks/smart-contract-fuzzing-d9b88e0b0a05\">fuzzing tests</a>. Fuzzers such as Echidna require the test writer to come up with invariants which should not be violated under any circumstances, and the fuzzer tests various inputs and function calls to ensure that the invariants always hold. Even code with 100% code coverage can still have bugs due to the order of the operations a user performs, and fuzzers, with properly and extensively-written invariants, can close this testing gap significantly.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>Various in-scope contract files.</p>\n<h2 id=\"n-03-initial-value-check-is-missing-in-set-functions\" style=\"position:relative;\"><a href=\"#n-03-initial-value-check-is-missing-in-set-functions\" aria-label=\"n 03 initial value check is missing in set functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] Initial value check is missing in Set Functions</h2>\n<p>A check regarding whether the current value and the new value are the same should be added.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">444</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setGuard</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">selector</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ILlamaActionGuard</span><span class=\"mtk1\"> </span><span class=\"mtk12\">guard</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLlama</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">target</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">) || </span><span class=\"mtk12\">target</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policy</span><span class=\"mtk1\">)) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RestrictedAddress</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">actionGuard</span><span class=\"mtk1\">[</span><span class=\"mtk12\">target</span><span class=\"mtk1\">][</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">guard</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ActionGuardSet</span><span class=\"mtk1\">(</span><span class=\"mtk12\">target</span><span class=\"mtk1\">, </span><span class=\"mtk12\">selector</span><span class=\"mtk1\">, </span><span class=\"mtk12\">guard</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L444\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L444</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPolicyMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaPolicyMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_llamaPolicyMetadata</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRootLlama</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_setPolicyMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_llamaPolicyMetadata</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L197\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L197</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoleHolder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLlama</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_setRoleHolder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L199\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L199</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">207</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRolePermission</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hasPermission</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLlama</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_setRolePermission</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">hasPermission</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L207\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L207</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">386</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,  </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">  ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonTransferableToken</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L386\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L386</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setColor</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaExecutor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_color</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAuthorized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">color</span><span class=\"mtk1\">[</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_color</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ColorSet</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_color</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L82\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L82</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">90</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setLogo</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaExecutor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_logo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyAuthorized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">logo</span><span class=\"mtk1\">[</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_logo</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LogoSet</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_logo</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L90\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicyMetadataParamRegistry.sol#L90</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRoleHolders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (, </span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRoleHolder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">role</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">expiration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L183\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L183</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setRolePermissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RolePermissionData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_setRolePermissions</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (, </span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">length</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_setRolePermissions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRolePermission</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_setRolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_setRolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_setRolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">hasPermission</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L196\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaGovernanceScript.sol#L196</a></p>\n</details>\n<h2 id=\"n-04-use-inheritdoc-rather-than-using-a-non-standard-annotation\" style=\"position:relative;\"><a href=\"#n-04-use-inheritdoc-rather-than-using-a-non-standard-annotation\" aria-label=\"n 04 use inheritdoc rather than using a non standard annotation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-04] Use @inheritdoc rather than using a non-standard annotation</h2>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<details>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">514</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Creates an action. The creator needs to hold a policy with the permission ID of the provided</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// `(target, selector, strategy)`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_createAction</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">description</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">564</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev How policyholders that have the right role contribute towards the approval of an action with a reason.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_castApproval</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reason</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">575</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev How policyholders that have the right role contribute towards the disapproval of an action with a reason.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_castDisapproval</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reason</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">586</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev The only `expectedState` values allowed to be passed into this method are Active or Queued.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_preCastAssertions</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ActionState</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expectedState</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">Action</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">action</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">615</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the new total count of approvals or disapprovals.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_newCastCount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentCount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">621</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Deploys new strategies. Takes in the strategy logic contract to be used and an array of configurations to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// initialize the new strategies with. Returns the address of the first strategy, which is only used during the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// `LlamaCore` initialization so that we can ensure someone (specifically, policyholders with role ID 1) has the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// permission to assign role permissions.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_deployStrategies</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaStrategyLogic</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategyConfigs</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">firstStrategy</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">646</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Deploys new accounts. Takes in the account logic contract to be used and an array of configurations to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// initialize the new accounts with.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_deployAccounts</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ILlamaAccount</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaAccountLogic</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accountConfigs</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">664</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the hash of the `createAction` parameters using the `actionInfo` struct.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_infoHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">677</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the hash of the `createAction` parameters.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_infoHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creatorRole</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">690</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Validates that the hash of the `actionInfo` struct matches the provided hash.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_validateActionInfoHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actualHash</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">696</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the current nonce for a given policyholder and selector, and increments it. Used to prevent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// replay attacks.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_useNonce</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">selector</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">nonce</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">705</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the EIP-712 domain separator.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getDomainHash</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">712</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the hash of the ABI-encoded EIP-712 message for the `CreateAction` domain, which can be used to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// recover the signer.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getCreateActionTypedDataHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">description</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">744</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the hash of the ABI-encoded EIP-712 message for the `CastApproval` domain, which can be used to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// recover the signer.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getCastApprovalTypedDataHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reason</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">766</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the hash of the ABI-encoded EIP-712 message for the `CastDisapproval` domain, which can be used to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// recover the signer.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getCastDisapprovalTypedDataHash</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">reason</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">788</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the hash of `actionInfo`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_getActionInfoHash</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L514\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L514</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L564\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L564</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L575\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L575</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L586\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L586</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L615\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L615</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L621\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L621</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L646\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L646</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L664\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L664</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L677\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L677</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L690\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L690</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L696\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L696</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L705\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L705</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L712\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L712</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L744\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L744</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L766\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L766</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L788\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaCore.sol#L788</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">226</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Deploys a new Llama instance.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_deploy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategyLogic</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ILlamaAccount</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accountLogic</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialStrategies</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialAccounts</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RoleDescription</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialRoleDescriptions</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialRoleHolders</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RolePermissionData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialRolePermissions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">LlamaExecutor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaCore</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">266</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Authorizes a strategy implementation (logic) contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_authorizeStrategyLogic</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategyLogic</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">272</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Authorizes an account implementation (logic) contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_authorizeAccountLogic</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ILlamaAccount</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accountLogic</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">278</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Sets the Llama policy metadata contract.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setPolicyMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaPolicyMetadata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_llamaPolicyMetadata</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">284</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Sets the `color` and `logo` of a Llama instance.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setDeploymentMetadata</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LlamaExecutor</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">color</span><span class=\"mtk1\">, </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">logo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L226\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L226</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L266\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L266</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L272\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L272</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L278\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L278</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L284\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaFactory.sol#L284</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Ensures that none of the ERC721 `transfer` and `approval` functions can be called, so that the policies are</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// soulbound.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonTransferableToken</span><span class=\"mtk1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">358</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev overriding `transferFrom` to disable transfers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">transferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* from */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* to */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* policyId */</span><span class=\"mtk1\"> )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">nonTransferableToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">366</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev overriding `safeTransferFrom` to disable transfers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* from */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* to */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* id */</span><span class=\"mtk1\"> )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">nonTransferableToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">374</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev overriding `safeTransferFrom` to disable transfers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* from */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* to */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* policyId */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* data */</span><span class=\"mtk1\"> )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">public</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">pure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">nonTransferableToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">382</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev overriding `approve` to disable approvals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* spender */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* id */</span><span class=\"mtk1\"> ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonTransferableToken</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">385</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev overriding `approve` to disable approvals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setApprovalForAll</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\">, </span><span class=\"mtk3\">/* operator */</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* approved */</span><span class=\"mtk1\"> ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonTransferableToken</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">392</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Initializes the next unassigned role with the given `description`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_initializeRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RoleDescription</span><span class=\"mtk1\"> </span><span class=\"mtk12\">description</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">398</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Because role supplies are not checkpointed for simplicity, the following issue can occur</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// if each of the below is executed within the same timestamp:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    1. An action is created that saves off the current role supply.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    2. A policyholder is given a new role.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">//    3. Now the total supply in that block is different than what it was at action creation.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// As a result, we disallow changes to roles if an action was created in the same block.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_assertNoActionCreationsAtCurrentTimestamp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">411</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Checks if the conditions are met for a `role` to be updated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_assertValidRoleHolderUpdate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">430</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Sets the `role` for the given `policyholder` to the given `quantity` and `expiration`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setRoleHolder</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">489</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Sets a role&#39;s permission along with whether that permission is valid or not.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setRolePermission</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hasPermission</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">496</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Revokes a policyholder&#39;s expired `role`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_revokeExpiredRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">503</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Mints a policyholder&#39;s policy.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">518</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Burns a policyholder&#39;s policy.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">532</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Returns the token ID for a `policyholder`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_tokenId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L73\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L73</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L358\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L358</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L366\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L366</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L374\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L374</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L382\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L382</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L385\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L385</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L392\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L392</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L398\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L398</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L411\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L411</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L430\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L430</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L489\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L489</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L496\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L496</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L503\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L503</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L518\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L518</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L532\">https://github.com/code-423n4/2023-06-llama/tree/main/src/LlamaPolicy.sol#L532</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">337</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Reads slot 0 from storage, used to check that storage hasn&#39;t changed after delegatecall.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_readSlot0</span><span class=\"mtk1\">() </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">slot0</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L337\">https://github.com/code-423n4/2023-06-llama/tree/main/src/accounts/LlamaAccount.sol#L337</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> This library defines the </span><span class=\"mtk8\">`History`</span><span class=\"mtk3\"> struct, for checkpointing values as they change at different points in</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * time, and later looking up past values by block timestamp.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * To create a history of checkpoints define a variable type </span><span class=\"mtk8\">`Checkpoints.History`</span><span class=\"mtk3\"> in your contract, and store a new</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * checkpoint for the current transaction timestamp using the {push} function.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> This was created by modifying then running the OpenZeppelin </span><span class=\"mtk8\">`Checkpoints.js`</span><span class=\"mtk3\"> script, which generated a version</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * of this library that uses a 64 bit </span><span class=\"mtk8\">`timestamp`</span><span class=\"mtk3\"> and 128 bit </span><span class=\"mtk8\">`quantity`</span><span class=\"mtk3\"> field in the </span><span class=\"mtk8\">`Checkpoint`</span><span class=\"mtk3\"> struct. The struct</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * was then modified to add a 64 bit </span><span class=\"mtk8\">`expiration`</span><span class=\"mtk3\"> field. For simplicity, safe cast and math methods were inlined from</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * the OpenZeppelin versions at the same commit. We disable forge-fmt for this file to simplify diffing against the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * original OpenZeppelin version: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/d00acef4059807535af0bd0dd0ddf619747a044b/contracts/utils/Checkpoints.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">library</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Checkpoints</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Returns the quantity at a given block timestamp. If a checkpoint is not available at that time, the closest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * one before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * searched checkpoint is probably &quot;recent&quot;, defined as being among the last sqrt(N) checkpoints where N is the</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * timestamp of checkpoints.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getAtProbablyRecentTimestamp</span><span class=\"mtk1\">(</span><span class=\"mtk12\">History</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Pushes a </span><span class=\"mtk8\">`quantity`</span><span class=\"mtk3\"> and </span><span class=\"mtk8\">`expiration`</span><span class=\"mtk3\"> onto a History so that it is stored as the checkpoint for the current</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk8\">`timestamp`</span><span class=\"mtk3\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * Returns previous quantity and new quantity.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">History</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Pushes a </span><span class=\"mtk8\">`quantity`</span><span class=\"mtk3\"> with no expiration onto a History so that it is stored as the checkpoint for the current</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk8\">`timestamp`</span><span class=\"mtk3\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * Returns previous quantity and new quantity.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">History</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Returns the quantity in the most recent checkpoint, or zero if there are no checkpoints.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">latest</span><span class=\"mtk1\">(</span><span class=\"mtk12\">History</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">88</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the timestamp and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * quantity in the most recent checkpoint.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">latestCheckpoint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">History</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">exists</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Returns the number of checkpoints.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">length</span><span class=\"mtk1\">(</span><span class=\"mtk12\">History</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Pushes a (</span><span class=\"mtk8\">`timestamp`</span><span class=\"mtk3\">, </span><span class=\"mtk8\">`expiration`</span><span class=\"mtk3\">, </span><span class=\"mtk8\">`quantity`</span><span class=\"mtk3\">) pair into an ordered list of checkpoints, either by inserting a new</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * checkpoint, or by updating the last one.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_insert</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Checkpoint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Return the index of the oldest checkpoint whose timestamp is greater than the search timestamp, or </span><span class=\"mtk8\">`high`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * if there is none. </span><span class=\"mtk8\">`low`</span><span class=\"mtk3\"> and </span><span class=\"mtk8\">`high`</span><span class=\"mtk3\"> define a section where to do the search, with inclusive </span><span class=\"mtk8\">`low`</span><span class=\"mtk3\"> and exclusive</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk8\">`high`</span><span class=\"mtk3\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * WARNING: </span><span class=\"mtk8\">`high`</span><span class=\"mtk3\"> should not be greater than the array&#39;s length.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_upperBinaryLookup</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Checkpoint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">low</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">high</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Return the index of the oldest checkpoint whose timestamp is greater or equal than the search timestamp, or</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk8\">`high`</span><span class=\"mtk3\"> if there is none. </span><span class=\"mtk8\">`low`</span><span class=\"mtk3\"> and </span><span class=\"mtk8\">`high`</span><span class=\"mtk3\"> define a section where to do the search, with inclusive </span><span class=\"mtk8\">`low`</span><span class=\"mtk3\"> and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * exclusive </span><span class=\"mtk8\">`high`</span><span class=\"mtk3\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * WARNING: </span><span class=\"mtk8\">`high`</span><span class=\"mtk3\"> should not be greater than the array&#39;s length.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_lowerBinaryLookup</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">Checkpoint</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">low</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">high</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Returns the average of two numbers. The result is rounded towards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     * zero.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">     */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">average</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">a</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">b</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L7\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L7</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L31\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L31</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L60\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L60</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L70\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L70</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L80\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L80</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L88\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L88</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L111\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L111</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L118\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L118</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L152\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L152</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L176\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L176</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L211\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Checkpoints.sol#L211</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Shared helper methods for Llama&#39;s contracts.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">library</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// @dev Thrown when a value cannot be safely casted to a smaller type.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UnsafeCast</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// @dev Reverts if `n` does not fit in a `uint64`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">toUint64</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint64</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Reverts if `n` does not fit in a `uint128`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">toUint128</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">n</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">21</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Increments a `uint256` without checking for overflow.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/LlamaUtils.sol#L4\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/LlamaUtils.sol#L4</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/LlamaUtils.sol#L15\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/LlamaUtils.sol#L15</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/LlamaUtils.sol#L21\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/LlamaUtils.sol#L21</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Data required to create an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">id</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// ID of the action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creator</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Address that created the action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creatorRole</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// The role that created the action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Strategy used to govern the action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Contract being called by an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Value in wei to be sent when the action is executed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">data</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Data to be called on the target when the action is executed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev Data that represents an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Action</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// Instead of storing all data required to execute an action in storage, we only save the hash to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// make action creation cheaper. The hash is computed by taking the keccak256 hash of the concatenation of each</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// field in the `ActionInfo` struct.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">infoHash</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">executed</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Has action executed.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">canceled</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Is action canceled.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isScript</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Is the action&#39;s target a script.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">creationTime</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// The timestamp when action was created (used for policy snapshots).</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minExecutionTime</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Only set when an action is queued. The timestamp when action execution can begin.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalApprovals</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// The total quantity of policyholder approvals.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalDisapprovals</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// The total quantity of policyholder disapprovals.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev Data that represents a permission.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">PermissionData</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">target</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Contract being called by an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">bytes4</span><span class=\"mtk1\"> </span><span class=\"mtk12\">selector</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Selector of the function being called by an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">ILlamaStrategy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Strategy used to govern the action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/// @dev Data required to assign/revoke a role to/from a policyholder.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">struct</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RoleHolderData</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Structs.sol#L6\">https://github.com/code-423n4/2023-06-llama/tree/main/src/lib/Structs.sol#L6</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev This script is a template for creating new scripts, and should not be used directly.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">abstract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">LlamaBaseScript</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// @dev Thrown if you try to CALL a function that has the `onlyDelegatecall` modifier.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">error</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OnlyDelegateCall</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// @dev Add this to your script&#39;s methods to ensure the script can only be used via delegatecall, and not a regular</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">/// call.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\">() {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaBaseScript.sol#L4\">https://github.com/code-423n4/2023-06-llama/tree/main/src/llama-scripts/LlamaBaseScript.sol#L4</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">303</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Reverts if the given `role` is greater than `numRoles`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_assertValidRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaAbsoluteStrategyBase.sol#L303\">https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaAbsoluteStrategyBase.sol#L303</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">: </span><span class=\"mtk3\">/// @dev Reverts if the given `role` is greater than `numRoles`.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_assertValidRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaRelativeQuorum.sol#L323\">https://github.com/code-423n4/2023-06-llama/tree/main/src/strategies/LlamaRelativeQuorum.sol#L323</a></p>\n</details>\n<h2 id=\"n-05-function-name-should-contain-initializeroles-instead-of-newroles\" style=\"position:relative;\"><a href=\"#n-05-function-name-should-contain-initializeroles-instead-of-newroles\" aria-label=\"n 05 function name should contain initializeroles instead of newroles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-05] Function name should contain <code>InitializeRoles</code> instead of <code>NewRoles</code></h2>\n<p>The function <code>createNewStrategiesAndNewRolesAndSetRoleHoldersAndSetRolePermissions</code> should be <code>createNewStrategiesAndInitializeRolesAndSetRoleHoldersAndSetRolePermissions</code> as it calls <code>initializeRoles(description);</code>.</p>\n<p>Similar to the function <code>createNewStrategiesAndInitializeRolesAndSetRoleHolders</code></p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNewStrategiesAndInitializeRolesAndSetRoleHolders</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CreateStrategies</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_createStrategies</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RoleDescription</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">description</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_setRoleHolders</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">core</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">core</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createStrategies</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_createStrategies</span><span class=\"mtk1\">.</span><span class=\"mtk12\">llamaStrategyLogic</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_createStrategies</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">initializeRoles</span><span class=\"mtk1\">(</span><span class=\"mtk12\">description</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">setRoleHolders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L120-L129\">https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L120-L129</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNewStrategiesAndNewRolesAndSetRoleHoldersAndSetRolePermissions</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CreateStrategies</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_createStrategies</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RoleDescription</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">description</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RolePermissionData</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_setRolePermissions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">core</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">core</span><span class=\"mtk1\">.</span><span class=\"mtk11\">createStrategies</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_createStrategies</span><span class=\"mtk1\">.</span><span class=\"mtk12\">llamaStrategyLogic</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_createStrategies</span><span class=\"mtk1\">.</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">initializeRoles</span><span class=\"mtk1\">(</span><span class=\"mtk12\">description</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">setRoleHolders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_setRoleHolders</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">setRolePermissions</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_setRolePermissions</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L140-L151\">https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L140-L151</a></p>\n<h2 id=\"n-06-add-to-blacklist-function\" style=\"position:relative;\"><a href=\"#n-06-add-to-blacklist-function\" aria-label=\"n 06 add to blacklist function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-06] Add to <code>blacklist</code> function</h2>\n<p>It is noted that in this project: <code>LlamaPolicy.sol is an NFT</code>.</p>\n<p>NFT thefts have increased recently, so with the addition of hacked NFTs to the platform, NFTs can be converted into liquidity. To prevent this, I recommend adding the blacklist function.</p>\n<p>Marketplaces such as Opensea have a blacklist feature that will not list NFTs that have been reported theft, NFT projects such as Manifold have blacklist functions in their smart contracts.</p>\n<p>Here is the project example; Manifold</p>\n<p>Manifold Contract <a href=\"https://etherscan.io/address/0xe4e4003afe3765aca8149a82fc064c0b125b9e5a#code\">https://etherscan.io/address/0xe4e4003afe3765aca8149a82fc064c0b125b9e5a#code</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span><span class=\"mtk12\">modifier</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonBlacklistRequired</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">extension</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">_blacklistedExtensions</span><span class=\"mtk1\">.</span><span class=\"mtk11\">contains</span><span class=\"mtk1\">(</span><span class=\"mtk12\">extension</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Extension blacklisted&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">_</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add to Blacklist function and modifier.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/44#issuecomment-1629329290\">AustinGreen (Llama) commented</a>:</strong></p>\n<blockquote>\n<p>L-01: These external calls are to the internal Llama system so this finding is incorrect.<br>\nL-03: We plan to deploy Llama on multiple EVM chains so this check would not make sense.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 17 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/174\">report highlighted below</a> by <strong>JCN</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/285\">naman1778</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/284\">0xSmartContract</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/257\">sebghatullah</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/233\">SM3_SS</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/230\">shamsulhaq123</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/228\">hunter_w3b</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/227\">SAQ</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/225\">petrichor</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/220\">Rageur</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/216\">Raihan</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/157\">SAAJ</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/156\">lsaudit</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/155\">DavidGiladi</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/120\">Sathish9098</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/117\">Rolezn</a>, and\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/84\">VictoryGod</a>\n.</em></p>\n<h2 id=\"summary-2\" style=\"position:relative;\"><a href=\"#summary-2\" aria-label=\"summary 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<p>A majority of the optimizations were benchmarked via the protocol’s tests, i.e. using the following config: <code>solc version 0.8.17</code>, <code>optimizer on</code>, and <code>1300 runs</code>. Optimizations that were not benchmarked are explained via EVM gas costs and opcodes.</p>\n<p><strong>Note</strong></p>\n<ul>\n<li>Only optimizations for state-mutating functions (i.e. non <code>view</code>/<code>pure</code>) and <code>view</code>/<code>pure</code> functions called within state-mutating functions have been highlighted below.</li>\n<li>Some code snippets may be truncated to save space. Code snippets may also be accompanied by @audit tags in comments to aid in explaining the issue.</li>\n</ul>\n<h2 id=\"table-of-contents\" style=\"position:relative;\"><a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<table>\n<thead>\n<tr>\n<th>Number</th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n<th align=\"center\">Gas Saved</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G-01]</td>\n<td align=\"left\">State variables can be cached instead of re-reading them from storage</td>\n<td align=\"center\">5</td>\n<td align=\"center\">500</td>\n</tr>\n<tr>\n<td>[G-02]</td>\n<td align=\"left\">Cache state variables outside of loop to avoid reading/writing storage on every iteration</td>\n<td align=\"center\">3</td>\n<td align=\"center\">5869</td>\n</tr>\n<tr>\n<td>[G-03]</td>\n<td align=\"left\">Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</td>\n<td align=\"center\">1</td>\n<td align=\"center\">21838</td>\n</tr>\n<tr>\n<td>[G-04]</td>\n<td align=\"left\">Cache calldata/memory pointers for complex types to avoid offset calculations</td>\n<td align=\"center\">2</td>\n<td align=\"center\">1192</td>\n</tr>\n<tr>\n<td>[G-05]</td>\n<td align=\"left\">Forgo internal function to save 1 <code>STATICCALL</code></td>\n<td align=\"center\">4</td>\n<td align=\"center\">400</td>\n</tr>\n<tr>\n<td>[G-06]</td>\n<td align=\"left\">Multiple accesses of a mapping/array should use a local variable cache</td>\n<td align=\"center\">1</td>\n<td align=\"center\">116</td>\n</tr>\n<tr>\n<td>[G-07]</td>\n<td align=\"left\">Refactor <code>If</code>/<code>require</code> statements to save SLOADs in case of early revert</td>\n<td align=\"center\">4</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody>\n</table>\n<p><em>Total Estimated Gas Saved: 29915</em></p>\n<h2 id=\"g-01-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#g-01-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" aria-label=\"g 01 state variables can be cached instead of re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] State variables can be cached instead of re-reading them from storage</h2>\n<p>Caching of a state variable replaces each <code>Gwarmaccess (100 gas)</code> with a much cheaper stack read.</p>\n<p>Total Instances: <code>5</code></p>\n<p>Estimated Gas Saved: <code>5 * 100 = 500</code></p>\n<p><strong>Note: These are instances missed by the Automated Report</strong>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L542-L559\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L542-L559</a></p>\n<h3 id=\"use-already-cached-actionid-to-save-1-sload\" style=\"position:relative;\"><a href=\"#use-already-cached-actionid-to-save-1-sload\" aria-label=\"use already cached actionid to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use already cached <code>actionId</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">542</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">actionId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">actionsCount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">559</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">actionsCount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">actionsCount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// Safety: Can never overflow a uint256 by incrementing. // @audit: 2nd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaCore.sol b/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 89d60de..049f66d 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -556,7 +556,7 @@ contract LlamaCore is Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       newAction.isScript = authorizedScripts[target];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    actionsCount = LlamaUtils.uncheckedIncrement(actionsCount); // Safety: Can never overflow a uint256 by incrementing.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    actionsCount = LlamaUtils.uncheckedIncrement(actionId); // Safety: Can never overflow a uint256 by incrementing.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     emit ActionCreated(actionId, policyholder, role, strategy, target, value, data, description);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L56-L58\">https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L56-L58</a></p>\n<h3 id=\"cache-mindisapprovals-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-mindisapprovals-to-save-1-sload\" aria-label=\"cache mindisapprovals to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>minDisapprovals</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaAbsolutePeerReview</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:      </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">minDisapprovals</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:          &amp;&amp; </span><span class=\"mtk12\">minDisapprovals</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">disapprovalPolicySupply</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">actionCreatorDisapprovalRoleQty</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/strategies/LlamaAbsolutePeerReview.sol b/src/strategies/LlamaAbsolutePeerReview.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 85feb92..c8426aa 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/strategies/LlamaAbsolutePeerReview.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/strategies/LlamaAbsolutePeerReview.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -53,9 +53,10 @@ contract LlamaAbsolutePeerReview is LlamaAbsoluteStrategyBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (minApprovals &gt; approvalPolicySupply - actionCreatorApprovalRoleQty) revert InsufficientApprovalQuantity();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint256 actionCreatorDisapprovalRoleQty = llamaPolicy.getQuantity(actionInfo.creator, disapprovalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      uint128 _minDisapprovals = minDisapprovals;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        minDisapprovals != type(uint128).max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-          &amp;&amp; minDisapprovals &gt; disapprovalPolicySupply - actionCreatorDisapprovalRoleQty</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _minDisapprovals != type(uint128).max</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+          &amp;&amp; _minDisapprovals &gt; disapprovalPolicySupply - actionCreatorDisapprovalRoleQty</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       ) revert InsufficientDisapprovalQuantity();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaRelativeQuorum.sol#L220-L223\">https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaRelativeQuorum.sol#L220-L223</a></p>\n<h3 id=\"cache-forceapprovalrolerole-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-forceapprovalrolerole-to-save-1-sload\" aria-label=\"cache forceapprovalrolerole to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>forceApprovalRole[role]</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaRelativeQuorum</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">220</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getApprovalQuantityAt</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">approvalRole</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">forceApprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPastQuantity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">forceApprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">] ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/strategies/LlamaRelativeQuorum.sol b/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index d796ae9..8d74c92 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -218,9 +218,10 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @inheritdoc ILlamaStrategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function getApprovalQuantityAt(address policyholder, uint8 role, uint256 timestamp) external view returns (uint128) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role != approvalRole &amp;&amp; !forceApprovalRole[role]) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bool _forceApprovalRole = forceApprovalRole[role];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role != approvalRole &amp;&amp; !_forceApprovalRole) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint128 quantity = policy.getPastQuantity(policyholder, role, timestamp);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    return quantity &gt; 0 &amp;&amp; forceApprovalRole[role] ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return quantity &gt; 0 &amp;&amp; _forceApprovalRole ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaRelativeQuorum.sol#L240-L242\">https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaRelativeQuorum.sol#L240-L242</a></p>\n<h3 id=\"cache-forcedisapprovalrolerole-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-forcedisapprovalrolerole-to-save-1-sload\" aria-label=\"cache forcedisapprovalrolerole to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>forceDisapprovalRole[role]</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaRelativeQuorum</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">240</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">forceDisapprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">]) </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPastQuantity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">242</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">forceDisapprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">] ? </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/strategies/LlamaRelativeQuorum.sol b/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index d796ae9..e1c3927 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -237,9 +237,10 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (uint128)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role != disapprovalRole &amp;&amp; !forceDisapprovalRole[role]) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bool _forceDisapprovalRole = forceDisapprovalRole[role];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role != disapprovalRole &amp;&amp; !_forceDisapprovalRole) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint128 quantity = policy.getPastQuantity(policyholder, role, timestamp);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    return quantity &gt; 0 &amp;&amp; forceDisapprovalRole[role] ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return quantity &gt; 0 &amp;&amp; _forceDisapprovalRole ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaFactory.sol#L260-L263\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaFactory.sol#L260-L263</a></p>\n<h3 id=\"cache-llamacount-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-llamacount-to-save-1-sload\" aria-label=\"cache llamacount to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>llamaCount</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaFactory</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LlamaInstanceCreated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:      </span><span class=\"mtk12\">llamaCount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">name</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaCore</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaExecutor</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">policy</span><span class=\"mtk1\">), </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">chainid</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">262</span><span class=\"mtk1\">:    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">263</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">llamaCount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">llamaCount</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaFactory.sol b/src/LlamaFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 0cc4cfd..269e4cb 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaFactory.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -256,11 +256,12 @@ contract LlamaFactory {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     llamaExecutor = llamaCore.executor();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     policy.finalizeInitialization(address(llamaExecutor), bootstrapPermissionId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint256 _llamaCount = llamaCount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     emit LlamaInstanceCreated(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      llamaCount, name, address(llamaCore), address(llamaExecutor), address(policy), block.chainid</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      _llamaCount, name, address(llamaCore), address(llamaExecutor), address(policy), block.chainid</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    llamaCount = LlamaUtils.uncheckedIncrement(llamaCount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    llamaCount = LlamaUtils.uncheckedIncrement(_llamaCount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h2 id=\"g-02-cache-state-variables-outside-of-loop-to-avoid-readingwriting-storage-on-every-iteration\" style=\"position:relative;\"><a href=\"#g-02-cache-state-variables-outside-of-loop-to-avoid-readingwriting-storage-on-every-iteration\" aria-label=\"g 02 cache state variables outside of loop to avoid readingwriting storage on every iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Cache state variables outside of loop to avoid reading/writing storage on every iteration</h2>\n<p>Reading from storage should always try to be avoided within loops. In the following instances, we are able to cache state variables outside of the loop to save a <code>Gwarmaccess (100 gas)</code> per loop iteration. In addition, for some instances we are also able to increment the cached variable in the loop and update the storage variable outside the loop to save 1 <code>SSTORE</code> per loop iteration.</p>\n<p>Total Instances: <code>3</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L227\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L227</a></p>\n<p><em>Gas Savings for <code>LlamaPolicy.revokePolicy</code>, obtained via protocol’s tests: Avg 724 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>69040</td>\n<td>110067</td>\n<td>59837</td>\n<td>11</td>\n</tr>\n<tr>\n<td>Before</td>\n<td>68180</td>\n<td>108992</td>\n<td>59113</td>\n<td>11</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cache-numroles-outside-of-loop-to-save-1-sload-per-iteration\" style=\"position:relative;\"><a href=\"#cache-numroles-outside-of-loop-to-save-1-sload-per-iteration\" aria-label=\"cache numroles outside of loop to save 1 sload per iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>numRoles</code> outside of loop to save 1 SLOAD per iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">227</span><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) { </span><span class=\"mtk3\">// @audit: numRoles read on every iteration</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaPolicy.sol b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3fca63e..7e47189 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -224,7 +224,8 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // We start from i = 1 here because a value of zero is reserved for the &quot;all holders&quot; role, and</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // that will get removed automatically when the token is burned. Similarly, use we `&lt;=` to make sure</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // the last role is also revoked.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    for (uint256 i = 1; i &lt;= numRoles; i = LlamaUtils.uncheckedIncrement(i)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint8 _numRoles = numRoles;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    for (uint256 i = 1; i &lt;= _numRoles; i = LlamaUtils.uncheckedIncrement(i)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (hasRole(policyholder, uint8(i))) _setRoleHolder(uint8(i), policyholder, 0, 0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     _burn(_tokenId(policyholder));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L151-L168\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L151-L168</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L393-L396\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L393-L396</a></p>\n<p><em>Gas Savings for <code>LlamaFactory.deploy</code>, obtained via protocol’s tests: Avg 4468 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>5101157</td>\n<td>5406425</td>\n<td>5015882</td>\n<td>412</td>\n</tr>\n<tr>\n<td>After</td>\n<td>5096893</td>\n<td>5281811</td>\n<td>5011414</td>\n<td>412</td>\n</tr>\n</tbody>\n</table>\n<p><em>To benchmark this instance we will bring the logic from <code>_initializeRole</code> into the construtor in order to refactor the logic. Note that another way of achieving this is by refactoring the logic of the <code>_initializeRole</code> directly and every other function that calls <code>_initializeRole</code>.</em></p>\n<h3 id=\"cache-numroles-outside-loop-increment-cached-variable-in-loop-and-update-storage-outside-loop-to-save-2-sloads--1-sstore-per-iteration\" style=\"position:relative;\"><a href=\"#cache-numroles-outside-loop-increment-cached-variable-in-loop-and-update-storage-outside-loop-to-save-2-sloads--1-sstore-per-iteration\" aria-label=\"cache numroles outside loop increment cached variable in loop and update storage outside loop to save 2 sloads  1 sstore per iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>numRoles</code> outside loop, increment cached variable in loop, and update storage outside loop to save 2 SLOADs + 1 SSTORE per iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">roleDescriptions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">_initializeRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">roleDescriptions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]); </span><span class=\"mtk3\">// @audit: sload &amp; sstore for `numRoles` on every iteration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">168</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk11\">getRoleSupplyAsNumberOfHolders</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ALL_HOLDERS_ROLE</span><span class=\"mtk1\">) == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRoleHolderInput</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: sload for `numRoles`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">393</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_initializeRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">RoleDescription</span><span class=\"mtk1\"> </span><span class=\"mtk12\">description</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">394</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\"> += </span><span class=\"mtk7\">1</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: sload + sstore for `numRoles`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">395</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleInitialized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">, </span><span class=\"mtk12\">description</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 2nd sload </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaPolicy.sol b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3fca63e..af2129b 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -148,9 +148,12 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) external initializer {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     __initializeERC721MinimalProxy(_name, string.concat(&quot;LL-&quot;, LibString.replace(LibString.upper(_name), &quot; &quot;, &quot;-&quot;)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     factory = LlamaFactory(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint8 _numRoles = numRoles;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     for (uint256 i = 0; i &lt; roleDescriptions.length; i = LlamaUtils.uncheckedIncrement(i)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      _initializeRole(roleDescriptions[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _numRoles += 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit RoleInitialized(_numRoles, roleDescriptions[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    numRoles = _numRoles;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     for (uint256 i = 0; i &lt; roleHolders.length; i = LlamaUtils.uncheckedIncrement(i)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _setRoleHolder(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -165,7 +168,7 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Must have assigned roles during initialization, otherwise the system cannot be used. However,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // we do not check that roles were assigned &quot;properly&quot; as there is no single correct way, so</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // this is more of a sanity check, not a guarantee that the system will work after initialization.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (numRoles == 0 || getRoleSupplyAsNumberOfHolders(ALL_HOLDERS_ROLE) == 0) revert InvalidRoleHolderInput();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (_numRoles == 0 || getRoleSupplyAsNumberOfHolders(ALL_HOLDERS_ROLE) == 0) revert InvalidRoleHolderInput();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L161-L163\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L161-L163</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L490-L491\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L490-L491</a></p>\n<p><em>Gas Savings for <code>LlamaFactory.deploy</code>, obtained via protocol’s tests: Avg 677 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>5101157</td>\n<td>5406425</td>\n<td>5015882</td>\n<td>412</td>\n</tr>\n<tr>\n<td>After</td>\n<td>5101175</td>\n<td>5120119</td>\n<td>5015205</td>\n<td>412</td>\n</tr>\n</tbody>\n</table>\n<p><em>To benchmark this instance we will refactor the logic of the <code>_setRolePermission</code> internal function directly and also refactor every other function that calls <code>_setRolePermission</code>. Another way of achieving this would be to move the logic of <code>_setRolePermission</code> into the construtor and refactoring it there.</em></p>\n<h3 id=\"cache-numroles-outside-loop-to-save-1-sload-per-iteration\" style=\"position:relative;\"><a href=\"#cache-numroles-outside-loop-to-save-1-sload-per-iteration\" aria-label=\"cache numroles outside loop to save 1 sload per iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>numRoles</code> outside loop to save 1 SLOAD per iteration</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">_setRolePermission</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">hasPermission</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: sload for `numRoles` on every iteration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">490</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_setRolePermission</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hasPermission</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">491</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleNotInitialized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: sload for `numRoles`</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaPolicy.sol b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3fca63e..8a3273a 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -157,15 +157,16 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         roleHolders[i].role, roleHolders[i].policyholder, roleHolders[i].quantity, roleHolders[i].expiration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint8 _numRoles = numRoles;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     for (uint256 i = 0; i &lt; rolePermissions.length; i = LlamaUtils.uncheckedIncrement(i)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      _setRolePermission(rolePermissions[i].role, rolePermissions[i].permissionId, rolePermissions[i].hasPermission);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      _setRolePermission(_numRoles, rolePermissions[i].role, rolePermissions[i].permissionId, rolePermissions[i].hasPermission);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Must have assigned roles during initialization, otherwise the system cannot be used. However,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // we do not check that roles were assigned &quot;properly&quot; as there is no single correct way, so</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // this is more of a sanity check, not a guarantee that the system will work after initialization.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (numRoles == 0 || getRoleSupplyAsNumberOfHolders(ALL_HOLDERS_ROLE) == 0) revert InvalidRoleHolderInput();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (_numRoles == 0 || getRoleSupplyAsNumberOfHolders(ALL_HOLDERS_ROLE) == 0) revert InvalidRoleHolderInput();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   // ===========================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -181,7 +182,7 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (llamaExecutor != address(0)) revert AlreadyInitialized();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     llamaExecutor = _llamaExecutor;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    _setRolePermission(BOOTSTRAP_ROLE, bootstrapPermissionId, true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    _setRolePermission(numRoles, BOOTSTRAP_ROLE, bootstrapPermissionId, true);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   // -------- Role and Permission Management --------</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -205,7 +206,7 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @param permissionId Permission ID to assign to the role.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @param hasPermission Whether to assign the permission or remove the permission.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function setRolePermission(uint8 role, bytes32 permissionId, bool hasPermission) external onlyLlama {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    _setRolePermission(role, permissionId, hasPermission);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    _setRolePermission(numRoles, role, permissionId, hasPermission);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @notice Revokes a policyholder&#39;s expired role.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -487,8 +488,8 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @dev Sets a role&#39;s permission along with whether that permission is valid or not.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  function _setRolePermission(uint8 role, bytes32 permissionId, bool hasPermission) internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role &gt; numRoles) revert RoleNotInitialized(role);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  function _setRolePermission(uint8 _numRoles, uint8 role, bytes32 permissionId, bool hasPermission) internal {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role &gt; _numRoles) revert RoleNotInitialized(role);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     canCreateAction[role][permissionId] = hasPermission;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     emit RolePermissionAssigned(role, permissionId, hasPermission);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<h2 id=\"g-03-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" style=\"position:relative;\"><a href=\"#g-03-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" aria-label=\"g 03 multiple address mappings can be combined into a single mapping of an address to a struct where appropriate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</h2>\n<p>We can combine multiple mappings below into structs. This will result in cheaper storage reads since multiple mappings are accessed in functions and those values are now occupying the same storage slot, meaning the slot will become warm after the first SLOAD. In addition, when writing to and reading from the struct values we will avoid a <code>Gsset (20000 gas)</code> and <code>Gcoldsload (2100 gas)</code> since multiple struct values are now occupying the same slot.</p>\n<p><strong>Note: This instance was missed by the automated report.</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaRelativeQuorum.sol#L130-L133\">https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaRelativeQuorum.sol#L130-L133</a></p>\n<p><em>Gas Savings for <code>LlamaCore.executeAction</code>, obtained via protocol’s tests: Avg 21838 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>5186172</td>\n<td>23819570</td>\n<td>4807541</td>\n<td>430</td>\n</tr>\n<tr>\n<td>After</td>\n<td>5164334</td>\n<td>32081589</td>\n<td>4803180</td>\n<td>430</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaRelativeQuorum</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">130</span><span class=\"mtk1\">:  </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">forceApprovalRole</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:  </span><span class=\"mtk3\">/// @notice Mapping of roles that can force an action to be disapproved.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:  </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">forceDisapprovalRole</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/strategies/LlamaRelativeQuorum.sol b/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index d796ae9..2cbeb0c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/strategies/LlamaRelativeQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -125,12 +125,13 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @notice The role that can disapprove an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   uint8 public disapprovalRole;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  struct ForceRoles {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bool forceApprovalRole;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    bool forceDisapprovalRole;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  /// @notice Mapping of roles that can force an action to be approved.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  mapping(uint8 =&gt; bool) public forceApprovalRole;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  /// @notice Mapping of roles that can force an action to be disapproved.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-  mapping(uint8 =&gt; bool) public forceDisapprovalRole;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  mapping(uint8 =&gt; ForceRoles) forceRoles;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @notice Mapping of action ID to the supply of the approval role at the time the action was created.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   mapping(uint256 =&gt; uint256) public actionApprovalSupply;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -146,6 +147,15 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     _disableInitializers();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  // @audit: Getters used for benchmarking purposes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  function forceApprovalRole(uint8 role) external view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return forceRoles[role].forceApprovalRole;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  function forceDisapprovalRole(uint8 role) external view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return forceRoles[role].forceDisapprovalRole;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   // ==========================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   // ======== Interface Implementation ========</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   // ==========================================</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -178,7 +188,7 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint8 role = strategyConfig.forceApprovalRoles[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (role == 0) revert InvalidRole(0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _assertValidRole(role, numRoles);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      forceApprovalRole[role] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      forceRoles[role].forceApprovalRole = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       emit ForceApprovalRoleAdded(role);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -186,7 +196,7 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       uint8 role = strategyConfig.forceDisapprovalRoles[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       if (role == 0) revert InvalidRole(0);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _assertValidRole(role, numRoles);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      forceDisapprovalRole[role] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      forceRoles[role].forceDisapprovalRole = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       emit ForceDisapprovalRoleAdded(role);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -213,14 +223,14 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @inheritdoc ILlamaStrategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function isApprovalEnabled(ActionInfo calldata, address, uint8 role) external view {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role != approvalRole &amp;&amp; !forceApprovalRole[role]) revert InvalidRole(approvalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role != approvalRole &amp;&amp; !forceRoles[role].forceApprovalRole) revert InvalidRole(approvalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @inheritdoc ILlamaStrategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function getApprovalQuantityAt(address policyholder, uint8 role, uint256 timestamp) external view returns (uint128) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role != approvalRole &amp;&amp; !forceApprovalRole[role]) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role != approvalRole &amp;&amp; !forceRoles[role].forceApprovalRole) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint128 quantity = policy.getPastQuantity(policyholder, role, timestamp);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    return quantity &gt; 0 &amp;&amp; forceApprovalRole[role] ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return quantity &gt; 0 &amp;&amp; forceRoles[role].forceApprovalRole ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   // -------- When Casting Disapproval --------</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -228,7 +238,7 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @inheritdoc ILlamaStrategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function isDisapprovalEnabled(ActionInfo calldata, address, uint8 role) external view {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (minDisapprovalPct &gt; ONE_HUNDRED_IN_BPS) revert DisapprovalDisabled();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role != disapprovalRole &amp;&amp; !forceDisapprovalRole[role]) revert InvalidRole(disapprovalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role != disapprovalRole &amp;&amp; !forceRoles[role].forceDisapprovalRole) revert InvalidRole(disapprovalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @inheritdoc ILlamaStrategy</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -237,9 +247,9 @@ contract LlamaRelativeQuorum is ILlamaStrategy, Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     returns (uint128)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role != disapprovalRole &amp;&amp; !forceDisapprovalRole[role]) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role != disapprovalRole &amp;&amp; !forceRoles[role].forceDisapprovalRole) return 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint128 quantity = policy.getPastQuantity(policyholder, role, timestamp);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    return quantity &gt; 0 &amp;&amp; forceDisapprovalRole[role] ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    return quantity &gt; 0 &amp;&amp; forceRoles[role].forceDisapprovalRole ? type(uint128).max : quantity;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   // -------- When Queueing --------</span></span></span></code></pre>\n<h2 id=\"g-04-cache-calldatamemory-pointers-for-complex-types-to-avoid-offset-calculations\" style=\"position:relative;\"><a href=\"#g-04-cache-calldatamemory-pointers-for-complex-types-to-avoid-offset-calculations\" aria-label=\"g 04 cache calldatamemory pointers for complex types to avoid offset calculations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Cache calldata/memory pointers for complex types to avoid offset calculations</h2>\n<p>The function parameters in the following instances are complex types (i.e. arrays which contain structs) and thus will result in more complex offset calculations to retrieve specific data from calldata/memory. We can avoid peforming some of these offset calculations by instantiating calldata/memory pointers.</p>\n<p>Total Instances: <code>2</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L155-L159\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L155-L159</a></p>\n<p><em>Gas Savings for <code>LlamaPolicy.deploy</code>, obtained via protocol’s tests: Avg 484 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>5101157</td>\n<td>5406425</td>\n<td>5015882</td>\n<td>412</td>\n</tr>\n<tr>\n<td>After</td>\n<td>5101034</td>\n<td>5256589</td>\n<td>5015398</td>\n<td>412</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">roleHolders</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">_setRoleHolder</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">roleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">roleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">roleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">roleHolders</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">expiration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaPolicy.sol b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3fca63e..b46c68e 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -153,8 +153,9 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     for (uint256 i = 0; i &lt; roleHolders.length; i = LlamaUtils.uncheckedIncrement(i)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      RoleHolderData calldata roleHolder = roleHolders[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       _setRoleHolder(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        roleHolders[i].role, roleHolders[i].policyholder, roleHolders[i].quantity, roleHolders[i].expiration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        roleHolder.role, roleHolder.policyholder, roleHolder.quantity, roleHolder.expiration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L161-L163\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L161-L163</a></p>\n<p><em>Gas Savings for <code>LlamaPolicy.deploy</code>, obtained via protocol’s tests: Avg 708 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>5101157</td>\n<td>5406425</td>\n<td>5015882</td>\n<td>412</td>\n</tr>\n<tr>\n<td>After</td>\n<td>5101157</td>\n<td>5116924</td>\n<td>5015174</td>\n<td>412</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">LlamaUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">uncheckedIncrement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">162</span><span class=\"mtk1\">:      </span><span class=\"mtk11\">_setRolePermission</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">permissionId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rolePermissions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">hasPermission</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">:    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaPolicy.sol b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3fca63e..c6df227 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -159,7 +159,8 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     for (uint256 i = 0; i &lt; rolePermissions.length; i = LlamaUtils.uncheckedIncrement(i)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-      _setRolePermission(rolePermissions[i].role, rolePermissions[i].permissionId, rolePermissions[i].hasPermission);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      RolePermissionData calldata rolePermission = rolePermissions[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+      _setRolePermission(rolePermission.role, rolePermission.permissionId, rolePermission.hasPermission);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-05-forgo-internal-function-to-save-1-staticcall\" style=\"position:relative;\"><a href=\"#g-05-forgo-internal-function-to-save-1-staticcall\" aria-label=\"g 05 forgo internal function to save 1 staticcall permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Forgo internal function to save 1 <code>STATICCALL</code></h2>\n<p>The <code>_context</code> internal function performs two external calls and returns both of the return values from those calls. Certain functions invoke <code>_context</code> but only use the return value from the first external call, thus performing an unnecessary extra external call. We can forgo using the internal function and instead only perform our desired external call to save 1 <code>STATICCALL (100 gas)</code>.</p>\n<p>Total Instances: <code>4</code></p>\n<p>Estimated Gas Saved: <code>4 * 100 = 400</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L111-L115\">https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L111-L115</a></p>\n<h3 id=\"only-perform-addressthisllama_core-to-save-1-staticcall\" style=\"position:relative;\"><a href=\"#only-perform-addressthisllama_core-to-save-1-staticcall\" aria-label=\"only perform addressthisllama_core to save 1 staticcall permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Only perform <code>address(this).LLAMA_CORE()</code> to save 1 <code>STATICCALL</code></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">llama</span><span class=\"mtk1\">-</span><span class=\"mtk12\">scripts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaGovernanceScript</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNewStrategiesAndSetRoleHolders</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">112:    </span><span class=\"mtk10\">CreateStrategies</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_createStrategies</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">113:    </span><span class=\"mtk10\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_setRoleHolders</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:    (</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">core</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: return value from `core.policy()` is not being used</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/llama-scripts/LlamaGovernanceScript.sol b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 820872e..f886bf7 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -112,7 +112,7 @@ contract LlamaGovernanceScript is LlamaBaseScript {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     CreateStrategies calldata _createStrategies,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RoleHolderData[] calldata _setRoleHolders</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) external onlyDelegateCall {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    (LlamaCore core,) = _context();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    LlamaCore core = LlamaCore(LlamaExecutor(address(this)).LLAMA_CORE());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     core.createStrategies(_createStrategies.llamaStrategyLogic, _createStrategies.strategies);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     setRoleHolders(_setRoleHolders);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L120-L125\">https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L120-L125</a></p>\n<h3 id=\"only-perform-addressthisllama_core-to-save-1-staticcall-1\" style=\"position:relative;\"><a href=\"#only-perform-addressthisllama_core-to-save-1-staticcall-1\" aria-label=\"only perform addressthisllama_core to save 1 staticcall 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Only perform <code>address(this).LLAMA_CORE()</code> to save 1 <code>STATICCALL</code></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">llama</span><span class=\"mtk1\">-</span><span class=\"mtk12\">scripts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaGovernanceScript</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNewStrategiesAndInitializeRolesAndSetRoleHolders</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">121:    </span><span class=\"mtk10\">CreateStrategies</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_createStrategies</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">122:    </span><span class=\"mtk10\">RoleDescription</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">description</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">123:    </span><span class=\"mtk10\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_setRoleHolders</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:    (</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">core</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: return value from `core.policy()` is not being used</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/llama-scripts/LlamaGovernanceScript.sol b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 820872e..f886bf7 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -122,7 +122,7 @@ contract LlamaGovernanceScript is LlamaBaseScript {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RoleDescription[] calldata description,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RoleHolderData[] calldata _setRoleHolders</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) external onlyDelegateCall {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    (LlamaCore core,) = _context();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    LlamaCore core = LlamaCore(LlamaExecutor(address(this)).LLAMA_CORE());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     core.createStrategies(_createStrategies.llamaStrategyLogic, _createStrategies.strategies);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     initializeRoles(description);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     setRoleHolders(_setRoleHolders);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L131-L135\">https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L131-L135</a></p>\n<h3 id=\"only-perform-addressthisllama_core-to-save-1-staticcall-2\" style=\"position:relative;\"><a href=\"#only-perform-addressthisllama_core-to-save-1-staticcall-2\" aria-label=\"only perform addressthisllama_core to save 1 staticcall 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Only perform <code>address(this).LLAMA_CORE()</code> to save 1 <code>STATICCALL</code></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">llama</span><span class=\"mtk1\">-</span><span class=\"mtk12\">scripts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaGovernanceScript</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">131</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNewStrategiesAndSetRolePermissions</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">132:    </span><span class=\"mtk10\">CreateStrategies</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_createStrategies</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">133:    </span><span class=\"mtk10\">RolePermissionData</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_setRolePermissions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:    (</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">core</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: return value from `core.policy()` is not being used</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/llama-scripts/LlamaGovernanceScript.sol b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 820872e..f886bf7 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -132,7 +132,7 @@ contract LlamaGovernanceScript is LlamaBaseScript {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     CreateStrategies calldata _createStrategies,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RolePermissionData[] calldata _setRolePermissions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) external onlyDelegateCall {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    (LlamaCore core,) = _context();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    LlamaCore core = LlamaCore(LlamaExecutor(address(this)).LLAMA_CORE());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     core.createStrategies(_createStrategies.llamaStrategyLogic, _createStrategies.strategies);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     setRolePermissions(_setRolePermissions);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L140-L146\">https://github.com/code-423n4/2023-06-llama/blob/main/src/llama-scripts/LlamaGovernanceScript.sol#L140-L146</a></p>\n<h3 id=\"only-perform-addressthisllama_core-to-save-1-staticcall-3\" style=\"position:relative;\"><a href=\"#only-perform-addressthisllama_core-to-save-1-staticcall-3\" aria-label=\"only perform addressthisllama_core to save 1 staticcall 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Only perform <code>address(this).LLAMA_CORE()</code> to save 1 <code>STATICCALL</code></h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">llama</span><span class=\"mtk1\">-</span><span class=\"mtk12\">scripts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaGovernanceScript</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createNewStrategiesAndNewRolesAndSetRoleHoldersAndSetRolePermissions</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">141:    </span><span class=\"mtk10\">CreateStrategies</span><span class=\"mtk1\"> </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_createStrategies</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">142:    </span><span class=\"mtk10\">RoleDescription</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">description</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">143:    </span><span class=\"mtk10\">RoleHolderData</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_setRoleHolders</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">144:    </span><span class=\"mtk10\">RolePermissionData</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_setRolePermissions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:  ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyDelegateCall</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">:    (</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\"> </span><span class=\"mtk12\">core</span><span class=\"mtk1\">,) = </span><span class=\"mtk11\">_context</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: return value from `core.policy()` is not being used</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/llama-scripts/LlamaGovernanceScript.sol b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 820872e..f886bf7 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/llama-scripts/LlamaGovernanceScript.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -143,7 +143,7 @@ contract LlamaGovernanceScript is LlamaBaseScript {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RoleHolderData[] calldata _setRoleHolders,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RolePermissionData[] calldata _setRolePermissions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ) external onlyDelegateCall {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    (LlamaCore core,) = _context();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    LlamaCore core = LlamaCore(LlamaExecutor(address(this)).LLAMA_CORE());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     core.createStrategies(_createStrategies.llamaStrategyLogic, _createStrategies.strategies);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     initializeRoles(description);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     setRoleHolders(_setRoleHolders);</span></span></span></code></pre>\n<h2 id=\"g-06-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" style=\"position:relative;\"><a href=\"#g-06-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" aria-label=\"g 06 multiple accesses of a mappingarray should use a local variable cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Multiple accesses of a mapping/array should use a local variable cache</h2>\n<p>Caching a mapping’s value in a storage pointer when the value is accessed multiple times saves ~40 gas per access due to not having to perform the same offset calculation every time. Help the Optimizer by saving a storage variable’s reference instead of repeatedly fetching it.</p>\n<p>To achieve this, declare a storage pointer for the variable and use it instead of repeatedly fetching the reference in a map or an array. As an example, instead of repeatedly calling <code>stakes[tokenId_]</code>, save its reference via a storage pointer: <code>StakeInfo storage stakeInfo = stakes[tokenId_]</code> and use the pointer instead.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L443-L448\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L443-L448</a></p>\n<p><em>Gas Savings for <code>LlamaPolicy.revokePolicy</code>, obtained via protocol’s tests: Avg 116 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>69040</td>\n<td>110067</td>\n<td>59837</td>\n<td>11</td>\n</tr>\n<tr>\n<td>After</td>\n<td>68916</td>\n<td>109912</td>\n<td>59721</td>\n<td>11</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">443</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialQuantity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">roleBalanceCkpts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">role</span><span class=\"mtk1\">].</span><span class=\"mtk11\">latest</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">444</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">hadRole</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">initialQuantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">445</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">willHaveRole</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">446</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">447</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// Now we update the policyholder&#39;s role balance checkpoint.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">448</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">roleBalanceCkpts</span><span class=\"mtk1\">[</span><span class=\"mtk12\">tokenId</span><span class=\"mtk1\">][</span><span class=\"mtk12\">role</span><span class=\"mtk1\">].</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">willHaveRole</span><span class=\"mtk1\"> ? </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> : </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaPolicy.sol b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3fca63e..7674061 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -440,12 +440,13 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // checking if the quantity is nonzero, and we don&#39;t need to check the expiration when setting</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // the `hadRole` and `willHaveRole` variables.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 tokenId = _tokenId(policyholder);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint128 initialQuantity = roleBalanceCkpts[tokenId][role].latest();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    Checkpoints.History storage _roleBalanceCkpts = roleBalanceCkpts[tokenId][role];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint128 initialQuantity = _roleBalanceCkpts.latest();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bool hadRole = initialQuantity &gt; 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bool willHaveRole = quantity &gt; 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Now we update the policyholder&#39;s role balance checkpoint.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    roleBalanceCkpts[tokenId][role].push(willHaveRole ? quantity : 0, expiration);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    _roleBalanceCkpts.push(willHaveRole ? quantity : 0, expiration);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // If they don&#39;t hold a policy, we mint one for them. This means that even if you use 0 quantity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // and 0 expiration, a policy is still minted even though they hold no roles. This is because</span></span></span></code></pre>\n<h2 id=\"g-07-refactor-ifrequire-statements-to-save-sloads-in-case-of-early-revert\" style=\"position:relative;\"><a href=\"#g-07-refactor-ifrequire-statements-to-save-sloads-in-case-of-early-revert\" aria-label=\"g 07 refactor ifrequire statements to save sloads in case of early revert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Refactor <code>If</code>/<code>require</code> statements to save SLOADs in case of early revert</h2>\n<p>Checks that involve calldata should come before checks that involve state variables, function calls, and calculations. By doing these checks first, the function is able to revert before using excessive gas in a call that may ultimately revert in an unhappy case.</p>\n<p>Total Instances: <code>4</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L27-L35\">https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L27-L35</a></p>\n<p>The check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L35\">line 35</a> performs an SLOAD, while the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L32-L33\">lines 32-33</a> perform an external call and two SLOADs. We can move the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L35\">line 35</a> above <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsoluteQuorum.sol#L32-L33\">lines 32-33</a> to potentially save an SLOAD &#x26; External call in the unhappy path.</p>\n<p><em>Note: This view function is called in the state mutating <code>_createAction</code> function in <code>LlamaCore.sol</code></em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaAbsoluteQuorum</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">validateActionCreation</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk3\">/* actionInfo */</span><span class=\"mtk1\"> ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">28</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">llamaPolicy</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">policy</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Reduce SLOADs.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">29</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">approvalPolicySupply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">llamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getRoleSupplyAsQuantitySum</span><span class=\"mtk1\">(</span><span class=\"mtk12\">approvalRole</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">approvalPolicySupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleHasZeroSupply</span><span class=\"mtk1\">(</span><span class=\"mtk12\">approvalRole</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">disapprovalPolicySupply</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">llamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getRoleSupplyAsQuantitySum</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 1 SLOAD + External call</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">disapprovalPolicySupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleHasZeroSupply</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 1 SLOAD</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">34</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">35</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">minApprovals</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">approvalPolicySupply</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InsufficientApprovalQuantity</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: 1 SLOAD</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/strategies/LlamaAbsoluteQuorum.sol b/src/strategies/LlamaAbsoluteQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 66130c0..aee2ce3 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/strategies/LlamaAbsoluteQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/strategies/LlamaAbsoluteQuorum.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -29,10 +29,11 @@ contract LlamaAbsoluteQuorum is LlamaAbsoluteStrategyBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 approvalPolicySupply = llamaPolicy.getRoleSupplyAsQuantitySum(approvalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (approvalPolicySupply == 0) revert RoleHasZeroSupply(approvalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (minApprovals &gt; approvalPolicySupply) revert InsufficientApprovalQuantity();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 disapprovalPolicySupply = llamaPolicy.getRoleSupplyAsQuantitySum(disapprovalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (disapprovalPolicySupply == 0) revert RoleHasZeroSupply(disapprovalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (minApprovals &gt; approvalPolicySupply) revert InsufficientApprovalQuantity();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (minDisapprovals != type(uint128).max &amp;&amp; minDisapprovals &gt; disapprovalPolicySupply) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       revert InsufficientDisapprovalQuantity();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L74-L82\">https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L74-L82</a></p>\n<p>The check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L79\">line 79</a> accesses storage, while the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L80\">line 80</a> only accesses calldata. Move the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L80\">line 80</a> above <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/strategies/LlamaAbsolutePeerReview.sol#L79\">line 79</a> to potentially save an SLOAD in the unhappy path.</p>\n<p><em>Note: This view function is called in the state mutating <code>_preCastAssertions</code> function in <code>LlamaCore.sol</code></em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">strategies</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaAbsolutePeerReview</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">isDisapprovalEnabled</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">75:    </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">76:    </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">77:    </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">78:  {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">minDisapprovals</span><span class=\"mtk1\"> == </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">DisapprovalDisabled</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: accesses storage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">creator</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">policyholder</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ActionCreatorCannotCast</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: accesses calldata</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\"> &amp;&amp; !</span><span class=\"mtk12\">forceDisapprovalRole</span><span class=\"mtk1\">[</span><span class=\"mtk12\">role</span><span class=\"mtk1\">]) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">disapprovalRole</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:  }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/strategies/LlamaAbsolutePeerReview.sol b/src/strategies/LlamaAbsolutePeerReview.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 85feb92..2df24ec 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/strategies/LlamaAbsolutePeerReview.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/strategies/LlamaAbsolutePeerReview.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -76,8 +76,9 @@ contract LlamaAbsolutePeerReview is LlamaAbsoluteStrategyBase {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (minDisapprovals == type(uint128).max) revert DisapprovalDisabled();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (actionInfo.creator == policyholder) revert ActionCreatorCannotCast();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (minDisapprovals == type(uint128).max) revert DisapprovalDisabled();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (role != disapprovalRole &amp;&amp; !forceDisapprovalRole[role]) revert InvalidRole(disapprovalRole);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L412-L418\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L412-L418</a></p>\n<p>The check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L414\">line 414</a> accesses storage, while the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L418\">line 418</a> only accesses a stack variable. Move the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L418\">line 418</a> above <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaPolicy.sol#L414\">line 414</a> to potentially save 1 SLOAD on the unhappy path.</p>\n<p><em>Note: This view function is called within state mutating functions in <code>LlamaPolicy.sol</code>.</em></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaPolicy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">412</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_assertValidRoleHolderUpdate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint64</span><span class=\"mtk1\"> </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">413</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// Ensure role is initialized.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">414</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">numRoles</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RoleNotInitialized</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: accesses storage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">415</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">416</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// Cannot set the ALL_HOLDERS_ROLE because this is handled in the _mint / _burn methods and can</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">417</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// create duplicate entries if set here.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">418</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">role</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">ALL_HOLDERS_ROLE</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AllHoldersRole</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: accesses stack variable</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaPolicy.sol b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 3fca63e..443e74c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaPolicy.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -410,13 +410,13 @@ contract LlamaPolicy is ERC721NonTransferableMinimalProxy {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @dev Checks if the conditions are met for a `role` to be updated.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function _assertValidRoleHolderUpdate(uint8 role, uint128 quantity, uint64 expiration) internal view {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    // Ensure role is initialized.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (role &gt; numRoles) revert RoleNotInitialized(role);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Cannot set the ALL_HOLDERS_ROLE because this is handled in the _mint / _burn methods and can</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // create duplicate entries if set here.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (role == ALL_HOLDERS_ROLE) revert AllHoldersRole();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    // Ensure role is initialized.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (role &gt; numRoles) revert RoleNotInitialized(role);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // An expiration of zero is only allowed if the role is being removed. Roles are removed when</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // the quantity is zero. In other words, the relationships that are required between the role</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // quantity and expiration fields are:</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L317-L324\">https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L317-L324</a></p>\n<p>The check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L324\">line 324</a> accesses calldata, the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L323\">line 323</a> accesses storage, and the check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L320-L322\">lines 320-322</a> accesses storage at least once and potentially multiple times. To save at least one SLOAD in unhappy path, place the checks in the following order:</p>\n<ol>\n<li>Check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L324\">line 324</a></li>\n<li>Check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L323\">line 323</a></li>\n<li>Check in <a href=\"https://github.com/code-423n4/2023-06-llama/blob/main/src/LlamaCore.sol#L320-L322\">lines 320-322</a></li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">LlamaCore</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">317</span><span class=\"mtk1\">:  </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">executeAction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ActionInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">318</span><span class=\"mtk1\">:    </span><span class=\"mtk3\">// Initial checks that action is ready to execute.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">319</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">Action</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">action</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">actions</span><span class=\"mtk1\">[</span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">id</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">320</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">ActionState</span><span class=\"mtk1\"> </span><span class=\"mtk12\">currentState</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getActionState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: accesses storage (at least 1 SLOAD, potentially more)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">321</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">322</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">currentState</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">ActionState</span><span class=\"mtk1\">.</span><span class=\"mtk12\">Queued</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidActionState</span><span class=\"mtk1\">(</span><span class=\"mtk12\">currentState</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: depends on line 320</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">323</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">action</span><span class=\"mtk1\">.</span><span class=\"mtk12\">minExecutionTime</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MinExecutionTimeNotReached</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: accesses storage (1 SLOAD)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">324</span><span class=\"mtk1\">:    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">actionInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IncorrectMsgValue</span><span class=\"mtk1\">(); </span><span class=\"mtk3\">// @audit: accesses calldata</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/src/LlamaCore.sol b/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 89d60de..594e9f4 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/src/LlamaCore.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -316,12 +316,13 @@ contract LlamaCore is Initializable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   /// @param actionInfo Data required to create an action.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   function executeAction(ActionInfo calldata actionInfo) external payable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // Initial checks that action is ready to execute.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (msg.value != actionInfo.value) revert IncorrectMsgValue();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     Action storage action = actions[actionInfo.id];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    ActionState currentState = getActionState(actionInfo);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    if (block.timestamp &lt; action.minExecutionTime) revert MinExecutionTimeNotReached();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ActionState currentState = getActionState(actionInfo);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     if (currentState != ActionState.Queued) revert InvalidActionState(currentState);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (block.timestamp &lt; action.minExecutionTime) revert MinExecutionTimeNotReached();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    if (msg.value != actionInfo.value) revert IncorrectMsgValue();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     action.executed = true;</span></span></span></code></pre>\n<hr>\n<h1 id=\"audit-analysis\" style=\"position:relative;\"><a href=\"#audit-analysis\" aria-label=\"audit analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Audit Analysis</h1>\n<p>For this audit, 13 analysis reports were submitted by wardens. An analysis report examines the codebase as a whole, providing observations and advice on such topics as architecture, mechanism, or approach. The <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/101\">report highlighted below</a> by <strong>0xnev</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/291\">peanuts</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/279\">dirk_y</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/268\">0xSmartContract</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/251\">joestakey</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/250\">libratus</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/211\">QiuhaoLi</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/192\">K42</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/186\">ktg</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/170\">mahdirostami</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/169\">kutugu</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/167\">xuwinnie</a>,\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/159\">neko_nyaa</a>, and\n<a href=\"https://github.com/code-423n4/2023-06-llama-findings/issues/88\">VictoryGod</a>\n.</em></p>\n<h2 id=\"1-analysis-of-codebase\" style=\"position:relative;\"><a href=\"#1-analysis-of-codebase\" aria-label=\"1 analysis of codebase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Analysis of Codebase</h2>\n<p>The Llama governance system provides a unique way for protocol to leverage policies (represented by a non-transferable NFT) to permission action creation till execution. It primarily focuses on 2 mechanisms, Action creation and policy management. To summarize the protocol, here is a step-by-step flow:</p>\n<ol>\n<li>Protocol owners give policy and set roles (via <code>_setRoleHolder()</code>)</li>\n<li>Protocol owner set permissions (via <code>_setRolePermissions()</code>)</li>\n<li>Permissioned policy holders can create actions (via <code>createAction/createActionBySig</code>)</li>\n<li>Strategy and custom guards validate action creation, if passes action can be queued (via Strategy and Guard function <code>validateActionCreation()</code>)</li>\n<li>Policy holders with approval/disapproval cast votes during approval period (via <code>castApproval()/castDisapproval()</code>)</li>\n<li>Strategies validate approval/disapproval against minimum thresholds <code>via isActionApproved()/isActionDisapproved()</code></li>\n<li>If approved and meets minimum execution time and action is not expired, action can now be executed, if not action is canceled</li>\n</ol>\n<h2 id=\"2-architecture-improvements\" style=\"position:relative;\"><a href=\"#2-architecture-improvements\" aria-label=\"2 architecture improvements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Architecture Improvements</h2>\n<p>The following architecture improvements and feedback could be considered:</p>\n<h3 id=\"21-incorporate-erc20-tokens-for-action-execution-that-requires-value\" style=\"position:relative;\"><a href=\"#21-incorporate-erc20-tokens-for-action-execution-that-requires-value\" aria-label=\"21 incorporate erc20 tokens for action execution that requires value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 Incorporate ERC20 tokens for action execution that requires value</h3>\n<p>Could consider incorporating payment of action execution with common ERC-20 tokens (USDC, USDT, BNB …). The tokens incorporated can be whitelisted to prevent ERC-20 tokens with other caveats from interacting with protocol until support is implemented (e.g. rebasing, fee-on-transfer)</p>\n<h3 id=\"22-create-a-new-type-of-strategy-for-flexibility\" style=\"position:relative;\"><a href=\"#22-create-a-new-type-of-strategy-for-flexibility\" aria-label=\"22 create a new type of strategy for flexibility permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 Create a new type of strategy for flexibility</h3>\n<p>Could consider creating a new type of Llama strategy in which approval/disapproval thresholds are specified as percentages of total supply and action creators are not allowed to cast approvals or disapprovals on their own actions for more flexibility</p>\n<h3 id=\"23-checkpoints-contracts-are-deprecated-by-openzeppelin\" style=\"position:relative;\"><a href=\"#23-checkpoints-contracts-are-deprecated-by-openzeppelin\" aria-label=\"23 checkpoints contracts are deprecated by openzeppelin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3 Checkpoints contracts are deprecated by OpenZeppelin</h3>\n<p>Checkpoint contracts seems to be deprecated by OpenZeppelin, not sure how this affects Llama contracts but since it affects core parts of the contract logic such as retrieving <code>quantity</code> and <code>expiration</code> data of roles, it might be worth noting.</p>\n<h3 id=\"24-consider-changing-quantity-check-logic\" style=\"position:relative;\"><a href=\"#24-consider-changing-quantity-check-logic\" aria-label=\"24 consider changing quantity check logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4 Consider changing <code>quantity</code> check logic</h3>\n<p>Consider changing logic for action creation and checks for role before action creation. Protocol owners cannot set role with 0 quantity coupled with an expiration due to checks in <code>_assertValidRoleHolderUpdate()</code>. </p>\n<p>Only the <code>approvalRole</code> is required to have quantity. All other roles that do not have approval power but have <code>quantity</code> assigned to them will only incur unecessary computation.</p>\n<p>Based on current implementation of <code>_setRoleHolder</code>, protocol owners can never give a policyholder a role with an expiry with no quantity that represents approval/disapproval casting power. In the event where protocol owner wants to give policyholder a role that has 0 <code>quantity</code> of votes, they can never do so. </p>\n<p>Furthermore, <code>hasPermissionId()</code> also checks for quantity  before allowing creation of actions. This means policyholders can only create actions if some <code>quantity</code> of approval/disapproval votes is assigned to them. Sementically, I don’t think the quantity used for voting has relation to action creation.</p>\n<p>Although that particular policy holder cannot vote unless <code>approvalRole /disapprovalRole</code> is assigned to them, it can cause confusion where policy holders might think they can vote since some <code>quantity</code> is assigned to them.</p>\n<p>The following adjustments can be made:</p>\n<ul>\n<li>\n<p>You could consider adding a third case in <code>_assertValidRoleHolderUpdate()</code> such as the following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">case3</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">quantity</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">expiration</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">;</span></span></span></code></pre>\n</li>\n<li>Remove <code>quantity > 0</code> check in <code>LlamaPolicy.hasPermissionId()</code> to allow action creators to create roles even when no quantity is assigned to them, since permissions to create actions are required to be set for policy holders via <code>setRolePermissions()</code> anyway. </li>\n<li><code>hasRole()</code> can simply check for expiration to determine if policy holder has role</li>\n<li>A separate <code>hasCastRole()</code> can be created to specifically check for approval/disapproval Role</li>\n</ul>\n<p>This way, <code>quantity</code> will only ever need to be assigned to policyholders assigned with the approval/disapproval role.</p>\n<h3 id=\"25-no-actual-way-to-access-role-descriptions-via-mapping\" style=\"position:relative;\"><a href=\"#25-no-actual-way-to-access-role-descriptions-via-mapping\" aria-label=\"25 no actual way to access role descriptions via mapping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.5 No actual way to access role descriptions via mapping</h3>\n<p>In the <code>policy-management.md</code> doc it states that:</p>\n<blockquote>\n<p>When roles are created, a description is provided. This description serves as the plaintext mapping from description to role ID, and provides semantic meaning to an otherwise meaningless unsigned integer. </p>\n</blockquote>\n<p>However, there is no actual way to access roleId via role descriptions in contract. Policy holders cannot access role descriptions and roleIds convieniently except via protocol UI.</p>\n<p>Hence, protocol could consider adding a new mapping to map roleIds to description and add logic to return role description and Id in <code>LlamaPolicy.updateRoleDescriptions()</code>. </p>\n<h3 id=\"26-consider-increasing-number-of-unique-roles\" style=\"position:relative;\"><a href=\"#26-consider-increasing-number-of-unique-roles\" aria-label=\"26 consider increasing number of unique roles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.6 Consider increasing number of unique roles</h3>\n<p>Since Id 0 is reserved for the bootstrap <code>ALL_HOLDERS_ROLE</code>, the protocol owner could infact only have 254 unique roles.\nSo it may be good to consider using <code>uint16</code> to allow 65534 unique roles. </p>\n<h2 id=\"3-centralization-risks\" style=\"position:relative;\"><a href=\"#3-centralization-risks\" aria-label=\"3 centralization risks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Centralization risks</h2>\n<h3 id=\"31-policy-holders-with-forceapprovalforcedisapproval-role-can-force-approvals-and-disapproval\" style=\"position:relative;\"><a href=\"#31-policy-holders-with-forceapprovalforcedisapproval-role-can-force-approvals-and-disapproval\" aria-label=\"31 policy holders with forceapprovalforcedisapproval role can force approvals and disapproval permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 Policy holders with forceApproval/forceDisapproval role can force approvals and disapproval</h3>\n<p>Policy holders will approval/disapproval role and quantity of <code>type(uint128).max</code>can force approval/disapproval of actions via <code>forceApprovalRole/forceDisapproval</code> mapping.</p>\n<h3 id=\"32-protocol-owners-can-revoke-roles-of-policyholders-anytime\" style=\"position:relative;\"><a href=\"#32-protocol-owners-can-revoke-roles-of-policyholders-anytime\" aria-label=\"32 protocol owners can revoke roles of policyholders anytime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 Protocol owners can revoke roles of policyholders anytime</h3>\n<p>Protocol owners can revoke policyholders anytime via <code>LlamaPolicy.revokePolicy()</code> and prevent action creation/queuing/execution and approval/disapproval. It should be noted that as long as action is created, that action can be executed regardless policyholder is revoked or not, unless action is explicitly cancelled or disapproved.</p>\n<h3 id=\"33-any-guards-can-be-set-for-actions-before-execution\" style=\"position:relative;\"><a href=\"#33-any-guards-can-be-set-for-actions-before-execution\" aria-label=\"33 any guards can be set for actions before execution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3 Any guards can be set for actions before execution</h3>\n<p>The type of guards can be customized by protocol owners, so at any point of time specific guards can be set for specific action based on data input (selector) and possibly unfairly prevent execution of action via <code>LlamaCore.setGuard()</code>.</p>\n<h2 id=\"4-time-spent\" style=\"position:relative;\"><a href=\"#4-time-spent\" aria-label=\"4 time spent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Time Spent</h2>\n<p>A total of 4 days were spent to cover this audit, broken down into the following:</p>\n<ul>\n<li>1st Day: Understand protocol docs, action creation flow and policy management</li>\n<li>2nd Day: Focus on linking docs logic to <code>LLamaCore.sol</code> and <code>LlamaPolicy.sol</code>, coupled with typing reports for vulnerabilities found</li>\n<li>3rd Day: Focus on different types of strategies contract coupled with typing reports for vulnerabilities found</li>\n<li>4th Day: Sum up audit by completing QA report and Analysis</li>\n</ul>\n<h3 id=\"time-spent\" style=\"position:relative;\"><a href=\"#time-spent\" aria-label=\"time spent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Time spent:</h3>\n<p>96 hours</p>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-2\">High Risk Findings (2)</a></p>\n<ul>\n<li><a href=\"#h-01-in-llamarelativequorum-the-governance-result-might-be-incorrect-as-it-counts-the-wrong-approvaldisapproval\">[H-01] In <code>LlamaRelativeQuorum</code>, the governance result might be incorrect as it counts the wrong approval/disapproval</a></li>\n<li><a href=\"#h-02-anyone-can-change-approvaldisapproval-threshold-for-any-action-using-llamarelativequorum-strategy\">[H-02] Anyone can change approval/disapproval threshold for any action using LlamaRelativeQuorum strategy</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-3\">Medium Risk Findings (3)</a></p>\n<ul>\n<li><a href=\"#m-01-it-is-not-possible-to-execute-actions-that-require-eth-or-other-protocol-token\">[M-01] It is not possible to execute actions that require ETH (or other protocol token)</a></li>\n<li><a href=\"#m-02-user-with-disapproval-role-can-gas-grief-the-action-executor\">[M-02] User with disapproval role can gas grief the action executor</a></li>\n<li><a href=\"#m-03-llamapolicy-could-be-dos-by-creating-large-amount-of-actions\">[M-03] LlamaPolicy could be DOS by creating large amount of actions</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#l-01-external-calls-in-an-un-bounded-for-loop-may-result-in-a-dos\">L-01 External calls in an un-bounded <code>for-</code>loop may result in a DOS</a></li>\n<li><a href=\"#l-02-missing-contract-existence-checks-before-low-level-calls\">L-02 Missing Contract-existence Checks Before Low-level Calls</a></li>\n<li><a href=\"#l-03-protect-llamapolicysol--nft-from-copying-in-pow-forks\">L-03 Protect <code>LlamaPolicy.sol</code>  NFT from copying in POW forks</a></li>\n<li><a href=\"#l-04-unbounded-loop\">L-04 Unbounded loop</a></li>\n<li><a href=\"#l-05-inconsistent-documentation-to-actual-function-logic\">L-05 Inconsistent documentation to actual function logic</a></li>\n<li><a href=\"#n-01-critical-changes-should-use-two-step-procedure\">N-01 Critical Changes Should Use Two-step Procedure</a></li>\n<li><a href=\"#n-02-large-or-complicated-code-bases-should-implement-fuzzing-tests\">N-02 Large or complicated code bases should implement fuzzing tests</a></li>\n<li><a href=\"#n-03-initial-value-check-is-missing-in-set-functions\">N-03 Initial value check is missing in Set Functions</a></li>\n<li><a href=\"#n-04-use-inheritdoc-rather-than-using-a-non-standard-annotation\">N-04 Use @inheritdoc rather than using a non-standard annotation</a></li>\n<li><a href=\"#n-05-function-name-should-contain-initializeroles-instead-of-newroles\">N-05 Function name should contain <code>InitializeRoles</code> instead of <code>NewRoles</code></a></li>\n<li><a href=\"#n-06-add-to-blacklist-function\">N-06 Add to <code>blacklist</code> function</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#summary-2\">Summary</a></li>\n<li><a href=\"#table-of-contents\">Table of Contents</a></li>\n<li><a href=\"#g-01-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\">G-01 State variables can be cached instead of re-reading them from storage</a></li>\n<li><a href=\"#g-02-cache-state-variables-outside-of-loop-to-avoid-readingwriting-storage-on-every-iteration\">G-02 Cache state variables outside of loop to avoid reading/writing storage on every iteration</a></li>\n<li><a href=\"#g-03-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\">G-03 Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</a></li>\n<li><a href=\"#g-04-cache-calldatamemory-pointers-for-complex-types-to-avoid-offset-calculations\">G-04 Cache calldata/memory pointers for complex types to avoid offset calculations</a></li>\n<li><a href=\"#g-05-forgo-internal-function-to-save-1-staticcall\">G-05 Forgo internal function to save 1 <code>STATICCALL</code></a></li>\n<li><a href=\"#g-06-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\">G-06 Multiple accesses of a mapping/array should use a local variable cache</a></li>\n<li><a href=\"#g-07-refactor-ifrequire-statements-to-save-sloads-in-case-of-early-revert\">G-07 Refactor <code>If</code>/<code>require</code> statements to save SLOADs in case of early revert</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#audit-analysis\">Audit Analysis</a></p>\n<ul>\n<li><a href=\"#1-analysis-of-codebase\">1. Analysis of Codebase</a></li>\n<li><a href=\"#2-architecture-improvements\">2. Architecture Improvements</a></li>\n<li><a href=\"#3-centralization-risks\">3. Centralization risks</a></li>\n<li><a href=\"#4-time-spent\">4. Time Spent</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}