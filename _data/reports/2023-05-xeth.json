{
  "circa": {
    "title": "xETH - Versus Contest",
    "sponsor": "xETH",
    "slug": "2023-05-xeth",
    "date": "2023-08-15",
    "findings": "https://github.com/code-423n4/2023-05-xeth-findings/issues",
    "contest": 240
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the xETH smart contract system written in Solidity. The audit took place between May 12—May 15 2023.</p>\n<p>Following the C4 audit, 3 wardens (<a href=\"https://twitter.com/bin2chen\">bin2chen</a>, d3e4 and ronnyx2017) reviewed the mitigations for all identified issues; the mitigation review report is appended below the audit report.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>In Code4rena’s Invitational audits, the competition is limited to a small group of wardens; for this audit, 5 wardens contributed reports:</p>\n<ol>\n<li><a href=\"https://twitter.com/adrianromero\">adriro</a></li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li><a href=\"https://twitter.com/carlitox477\">carlitox477</a></li>\n<li>d3e4</li>\n<li>ronnyx2017</li>\n</ol>\n<p>This audit was judged by <a href=\"https://github.com/kirk-baird\">kirk-baird</a>.</p>\n<p>Final report assembled by thebrittfactor.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 10 unique vulnerabilities. Of these vulnerabilities, 0 received a risk rating in the category of HIGH severity and 10 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 5 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 4 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-05-xeth\">C4 xETH repository</a>, and is composed of 4 smart contracts written in the Solidity programming language and includes 636 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"medium-risk-findings-10\" style=\"position:relative;\"><a href=\"#medium-risk-findings-10\" aria-label=\"medium risk findings 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (10)</h1>\n<h2 id=\"m-01-rebalance-amounts-should-be-checked-so-that-updated-balances-falls-within-thresholds\" style=\"position:relative;\"><a href=\"#m-01-rebalance-amounts-should-be-checked-so-that-updated-balances-falls-within-thresholds\" aria-label=\"m 01 rebalance amounts should be checked so that updated balances falls within thresholds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/35\">[M-01] Rebalance amounts should be checked so that updated balances falls within thresholds</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/35\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/26\">d3e4</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L239\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L239</a> <br><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L286\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L286</a></p>\n<p>Rebalance operations are allowed when the current percentage of xETH in the Curve pool is outside the defined thresholds. However, there is no check to ensure that the amount of xETH added or burned from the pool will update the percentage to be within the limits.</p>\n<p>Rebalance actions in the AMO contract are first validated to ensure that a rebalance is indeed needed in the first place. This is implemented by calculating the percentage of xETH in the pool and comparing the result against two limits that define an acceptable range.</p>\n<p>Rebalance up is allowed when the percentage of xETH in the Curve pool is above the <code>REBALANCE_UP_THRESHOLD</code>, in which case xETH is withdrawn from the pool and burned to lower the percentage. Similarly, rebalance down is allowed when the percentage falls below the <code>REBALANCE_DOWN_THRESHOLD</code> value, in which case xETH is minted and added to the pool, increasing the percentage.</p>\n<p>While care is taken to ensure that these operations are indeed only allowed when the percentages are outside the defined bounds, there is no check to ensure that the amount of xETH burned or minted will update the percentage <strong>to be within the bounds</strong>.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>During a rebalance operation, a malicious or improperly operating defender can exploit the opportunity to modify the pool balance in their favor, potentially exceeding the desired boundaries.</p>\n<p>For example, if <code>xEthPct > REBALANCE_UP_THRESHOLD</code> is true, the <code>preRebalanceCheck()</code> function would allow a <code>rebalanceUp()</code> operation. In such a scenario, the defender could deliberately lower the percentage to below the desired <code>REBALANCE_DOWN_THRESHOLD</code>, potentially gaining an advantage if the account is compromised or if there is a malfunction in the bot operating off-chain.</p>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Add a check to ensure that updated balances comply with the thresholds boundaries. When minting or burning xETH from the pool, the updated balance of xETH should produce a percentage that is within the accepted range.</p>\n<h3 id=\"assessed-type\" style=\"position:relative;\"><a href=\"#assessed-type\" aria-label=\"assessed type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Invalid Validation</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/35#issuecomment-1552994316\">vaporkane (xETH) acknowledged</a></strong></p>\n<hr>\n<h2 id=\"m-02-inconsistent-check-for-lp-balance-in-amo\" style=\"position:relative;\"><a href=\"#m-02-inconsistent-check-for-lp-balance-in-amo\" aria-label=\"m 02 inconsistent check for lp balance in amo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/33\">[M-02] Inconsistent check for LP balance in AMO</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/33\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/17\">ronnyx2017</a> and <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/9\">bin2chen</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L256-L259\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L256-L259</a> <br><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L600-L604\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L600-L604</a> <br><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L632-L636\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L632-L636</a></p>\n<p>While pulling LP tokens from the CVXStaker contract, the AMO queries the current available balance using the staked balance, which is inconsistent with the implementation of the withdraw function.</p>\n<p>Curve LP tokens owned by the AMO contract are staked in a Convex pool that is handled using the CVXStaker contract. When liquidity needs to be removed from the Curve pool, the AMO contract needs to first withdraw the LP tokens from the CVXStaker contract.</p>\n<p>The <code>rebalanceUp()</code>, <code>removeLiquidity()</code> and <code>removeLiquidityOnlyStETH()</code> functions present in the AMO contract deal with removing liquidity from the Curve pool. In their implementations, all of them query the available LP balance using the <code>stakedBalance()</code> function of CVXStaker. Taking the <code>rebalanceUp()</code> function as an example (other cases are similar), we can see the following:</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L256-L261\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L256-L261</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">256</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amoLpBal</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">cvxStaker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stakedBalance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">257</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">258</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// if (amoLpBal == 0 || quote.lpBurn &gt; amoLpBal) revert LpBalanceTooLow();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">259</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quote</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lpBurn</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">amoLpBal</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">LpBalanceTooLow</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">260</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">261</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">cvxStaker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawAndUnwrap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">quote</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lpBurn</span><span class=\"mtk1\">, </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span></code></pre>\n<p>The implementation of <code>stakedBalance()</code> basically delegates the call to fetch the staked balance in the Convex reward pool contract:</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L204-L206\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L204-L206</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">204</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">stakedBalance</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">205</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IBaseRewardPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cvxPoolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">206</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>However, this check is not correct. As we can see in the implementation of <code>withdrawAndUnwrap()</code>, the CVXStaker contract consider not only staked tokens, <strong>but also available balance held in the contract itself</strong>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L142-L161\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L142-L161</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawAndUnwrap</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">143:         </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">144:         </span><span class=\"mtk10\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk10\">claim</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">145:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">to</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOperatorOrOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// Optimistically use CLP balance in this contract, and then try and unstake any remaining</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">clpBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">clpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">toUnstake</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">clpBalance</span><span class=\"mtk1\">) ? </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">clpBalance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">toUnstake</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">IBaseRewardPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cvxPoolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdrawAndUnwrap</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">toUnstake</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">claim</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">to</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:             </span><span class=\"mtk3\">// unwrapped amount is 1 to 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">clpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">to</span><span class=\"mtk1\">, </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">160</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Line 148 considers potentially available LP tokens in the contract and withdraws the remaining amount from Convex.</p>\n<p>This means that checking against <code>stakedBalance()</code> is too restrictive and incorrect, and can potentially lead to situations in which the required LP tokens are enough, but the check in line 259 of the AMO contract will revert the operation.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As an example, let’s take a call to the <code>rebalanceUp()</code> function and assume that the quoted <code>lpBurn</code> amount is 4. The CVXStaker contract has 3 LP tokens staked in Convex and 2 tokens held as balance in the contract.</p>\n<p>In this situation, the condition <code>quote.lpBurn > amoLpBal</code> will be true, as <code>amoLpBal = cvxStaker.stakedBalance() = 3</code>, which evaluates the condition to <code>5 > 3</code>, causing a revert in the transaction.</p>\n<p>However, the operation would succeed if the check weren’t there, as <code>withdrawAndUnwrap()</code> will first consider the 2 tokens already present in the CVXStaker contract and withdraw the remaining 2 from the Convex pool, successfully fulfilling the requested amount.</p>\n<h3 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The validation to ensure available LP tokens in <code>rebalanceUp()</code>, <code>removeLiquidity()</code> and <code>removeLiquidityOnlyStETH()</code> should not only consider <code>stakedBalance()</code>, but also available LP tokens present in the CVXStaker contract. Alternatively, the check can be removed as the call to <code>withdrawAndUnwrap()</code> will eventually fail if the available tokens are not enough.</p>\n<h3 id=\"assessed-type-1\" style=\"position:relative;\"><a href=\"#assessed-type-1\" aria-label=\"assessed type 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Invalid Validation</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/33#issuecomment-1575443597\">vaporkane (xETH) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>This mitigation adds a <code>getTotalBalance</code> function.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/60b9e1e2562d585831e3d8e2a7e345294d9dacbd\">https://github.com/code-423n4/2023-05-xeth/commit/60b9e1e2562d585831e3d8e2a7e345294d9dacbd</a></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed. Full details in reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/19\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/3\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/2\">ronnyx2017</a>.</p>\n<hr>\n<h2 id=\"m-03-zero-token-transfer-can-cause-a-potential-dos-in-cvxstaker\" style=\"position:relative;\"><a href=\"#m-03-zero-token-transfer-can-cause-a-potential-dos-in-cvxstaker\" aria-label=\"m 03 zero token transfer can cause a potential dos in cvxstaker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/30\">[M-03] Zero token transfer can cause a potential DoS in CVXStaker</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/30\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/41\">bin2chen</a></em></p>\n<p>The CVXStaker contract doesn’t check for zero amount while transferring rewards, which can end up blocking the operation.</p>\n<p>The CVXStaker contract is in charge of handling interaction with the Convex pool. The <code>getReward()</code> function is used to claim rewards and transfer them to the rewards recipient:</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L185-L198\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L185-L198</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">185</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimExtras</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">186</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">IBaseRewardPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cvxPoolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">187</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">188</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">claimExtras</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">189</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">191</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">193</span><span class=\"mtk1\">:                     </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">194</span><span class=\"mtk1\">:                 );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">196</span><span class=\"mtk1\">:             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">198</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>As we can see in the previous snippet of code, the implementation will loop all the configured reward tokens and transfer them one by one to the reward recipient.</p>\n<p>This is a bit concerning as some ERC20 implementations revert on zero value transfers (see <a href=\"https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers\">https://github.com/d-xo/weird-erc20#revert-on-zero-value-transfers</a>). If at least one of the reward tokens includes this behavior, then the current implementation may cause a denial of service, as a zero amount transfer in this token will block the whole action and revert the transaction.</p>\n<p>Note that the rewards array is not modifiable, it is defined at construction time, a token cannot be removed.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We reproduce the issue in the following test. <code>token1</code> is a normal ERC20 and <code>token2</code> reverts on zero transfer amounts. Rewards from <code>token1</code> can’t be transferred to the recipient as the zero transfer on <code>token2</code> will revert the operation.</p>\n<p>Note: the snippet shows only the relevant code for the test. Full test file can be found <a href=\"https://gist.github.com/romeroadrian/475d1f809301c5a0ccf2e6e9bec85472\">here</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_CVXStaker_RevertOnZeroTokenTransfer</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">MockErc20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token1</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MockErc20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Token1&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;TOK1&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">MockErc20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token2</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">RevertOnZeroErc20</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Token2&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;TOK2&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">MockCVXRewards</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewards</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">MockCVXRewards</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;operator&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">clpToken</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;clpToken&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">ICVXBooster</span><span class=\"mtk1\"> </span><span class=\"mtk12\">booster</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ICVXBooster</span><span class=\"mtk1\">(</span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;booster&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">address</span><span class=\"mtk1\">[](</span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">] = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">CVXStaker</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staker</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">CVXStaker</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">clpToken</span><span class=\"mtk1\">, </span><span class=\"mtk12\">booster</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">staker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setCvxPoolInfo</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">clpToken</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">makeAddr</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;rewardsRecipient&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">staker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">setRewardsRecipient</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// simulate staker has some token1 but zero token2 after calling getRewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token1</span><span class=\"mtk1\">), </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staker</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The transaction will fail as the implementation will try to transfer zero</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// tokens for token2, blocking the whole operation.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;cannot transfer zero amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">staker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Check for zero amount before executing the transfer:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimExtras</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IBaseRewardPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cvxPoolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">claimExtras</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+           </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+           }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"assessed-type-2\" style=\"position:relative;\"><a href=\"#assessed-type-2\" aria-label=\"assessed type 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>ERC20</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/30#issuecomment-1575444199\">vaporkane (xETH) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>This mitigation adds a balance check.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4\">https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4</a></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed. Full details in reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/5\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/4\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/20\">d3e4</a>.</p>\n<hr>\n<h2 id=\"m-04-unspent-allowance-may-break-functionality-in-amo\" style=\"position:relative;\"><a href=\"#m-04-unspent-allowance-may-break-functionality-in-amo\" aria-label=\"m 04 unspent allowance may break functionality in amo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/29\">[M-04] Unspent allowance may break functionality in AMO</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/29\">adriro</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L545\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L545</a> <br><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L546\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L546</a> <br><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L571\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L571</a></p>\n<p>An unspent allowance may cause a denial of service during the calls to <code>safeApprove()</code> in the AMO contract.</p>\n<p>The AMO contract uses the <code>safeApprove()</code> function to grant the Curve pool permission to spend funds while adding liquidity. When adding liquidity into the Curve pool, the AMO contract needs to approve allowance so the AMM can pull tokens from the caller.</p>\n<p>The <code>safeApprove()</code> function is a wrapper provided by the SafeERC20 library present in the OpenZeppelin contracts package, its implementation is the following:</p>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol#L45-L54\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol#L45-L54</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">safeApprove</span><span class=\"mtk1\">(</span><span class=\"mtk12\">IERC20</span><span class=\"mtk1\"> </span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">value</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// safeApprove should only be called when setting an initial allowance,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// or when resetting it to zero. To increase and decrease it, use</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// &#39;safeIncreaseAllowance&#39; and &#39;safeDecreaseAllowance&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) || (</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk11\">allowance</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">) == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;SafeERC20: approve from non-zero to non-zero allowance&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_callOptionalReturn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">, </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodeWithSelector</span><span class=\"mtk1\">(</span><span class=\"mtk12\">token</span><span class=\"mtk1\">.</span><span class=\"mtk12\">approve</span><span class=\"mtk1\">.</span><span class=\"mtk12\">selector</span><span class=\"mtk1\">, </span><span class=\"mtk12\">spender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">value</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>As the comment warns, this should only be used when setting an initial balance or resetting it to zero. In the AMO contract the use of <code>safeApprove()</code> is included in the functions that are in charge of adding liquidity to the Curve pool (<code>addLiquidity()</code> and <code>addLiquidityOnlyStETH()</code>), implying a repeatedly use whenever the allowance needs to be set so that the pool can pull the funds. As we can see in the implementation, if the current allowance is not zero the function will revert.</p>\n<p>This means that any unspent allowance of xETH or stETH (i.e. <code>allowance(AMO, curvePool) > 0</code>) will cause a denial of service in the <code>addLiquidity()</code> and <code>addLiquidityOnlyStETH()</code> functions, potentially bricking the contract.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Suppose there is an unspent allowance of stETH in the AMO contract, <code>stETH.allowance(AMO, curvePool) > 0</code>.</li>\n<li>Admin calls <code>addLiquidityOnlyStETH(stETHAmount, minLpOut)</code> with <code>stETHAmount > 0</code> to provide liquidity to the pool.</li>\n<li>Transaction will be reverted in the call to <code>safeApprove()</code> as <code>(value == 0) || (token.allowance(address(this), spender) == 0)</code> will be false.</li>\n</ol>\n<h3 id=\"recommendation-3\" style=\"position:relative;\"><a href=\"#recommendation-3\" aria-label=\"recommendation 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Simply use <code>approve()</code>, or first reset the allowance to zero using <code>safeApprove(spender, 0)</code>, or use <code>safeIncreaseAllowance()</code>.</p>\n<h3 id=\"note-from-warden\" style=\"position:relative;\"><a href=\"#note-from-warden\" aria-label=\"note from warden permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Note from warden</h3>\n<p>Even though the deprecated usage of <code>safeApprove()</code> is mentioned in the automated findings, this report demonstrates how this function can cause a serious vulnerability that may end up bricking the contract.</p>\n<h3 id=\"assessed-type-3\" style=\"position:relative;\"><a href=\"#assessed-type-3\" aria-label=\"assessed type 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>DoS</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/29#issuecomment-1575445282\">vaporkane (xETH) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>Change <code>safeApprove</code> to approve.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/793dade5217bd5751856f7cf0bccd4936286aeab\">https://github.com/code-423n4/2023-05-xeth/commit/793dade5217bd5751856f7cf0bccd4936286aeab</a></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed. Full details in reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/12\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/6\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/21\">d3e4</a>.</p>\n<hr>\n<h2 id=\"m-05-virgin-stake-can-claim-all-drops\" style=\"position:relative;\"><a href=\"#m-05-virgin-stake-can-claim-all-drops\" aria-label=\"m 05 virgin stake can claim all drops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/23\">[M-05] Virgin stake can claim all drops</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/23\">d3e4</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/39\">ronnyx2017</a></em></p>\n<p>If wxETH drips when nothing is staked, then the first staker can claim every drop.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Suppose drip is enabled when <code>totalSupply() == 0</code>.\nAt least one block passes and the first staker stakes, just <code>1</code> xETH is enough. This mints her <code>1</code> wxETH. This also calls <code>_accrueDrip()</code> (by the <code>drip</code> modifier) which drips some amount of xETH. Note that <code>_accrueDrip()</code> is independent of <code>totalSupply()</code>, so it doesn’t matter how little she stakes.\n<code>cashMinusLocked</code> is now <code>1</code> plus the amount dripped.\nNaturally, since she owns the entire supply she can immediately unstake the entire <code>cashMinusLocked</code>. Specifically, the <code>exchangeRate()</code> is now <code>(cashMinusLocked * BASE_UNIT) / totalSupply()</code> and she gets <code>(totalSupply() * exchangeRate()) / BASE_UNIT</code> = <code>cashMinusLocked</code>.</p>\n<p>The issue is simply that drip is independent of staked amount; especially since it may drip even when nothing is staked, which enables the above attack.</p>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Note what happens when <code>totalSupply() > 0</code>. Then drops will fall on existing wxETH, and any new staker will trigger a drip before having to pay the new exchange rate which includes the extra drops. So a new staker, in this case, cannot unstake more than they staked; all drops go to previous holders.\nTherefore, do not drip when <code>totalSupply == 0</code>; in <code>_accrueDrip()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-if (!dripEnabled) return;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+if (!dripEnabled || totalSupply() == 0) return;</span></span></span></code></pre>\n<h3 id=\"assessed-type-4\" style=\"position:relative;\"><a href=\"#assessed-type-4\" aria-label=\"assessed type 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>MEV</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/23#issuecomment-1552320229\">vaporkane (xETH) disagreed with severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/23#issuecomment-1565180252\">kirk-baird (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>It is true that the first staker may claim all previous dripped rewards. I consider this a medium severity issue as the likelihood is very low since it only occurs for the first staker and only if the strip was started before any stakers deposited. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/23#issuecomment-1575445932\">vaporkane (xETH) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>Add a <code>totalSupply</code> check.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/aebc3244cbb0deb67f3cdef160b390da27888de7\">https://github.com/code-423n4/2023-05-xeth/commit/aebc3244cbb0deb67f3cdef160b390da27888de7</a></p>\n</blockquote>\n<p><strong>Status:</strong> Not fully mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/13\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/8\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/22\">d3e4</a>, and also included in the Mitigation Review section below.</p>\n<hr>\n<h2 id=\"m-06-inflation-attack-by-token-transfer\" style=\"position:relative;\"><a href=\"#m-06-inflation-attack-by-token-transfer\" aria-label=\"m 06 inflation attack by token transfer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/21\">[M-06] Inflation attack by token transfer</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/21\">d3e4</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/22\">adriro</a> and <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/4\">bin2chen</a></em></p>\n<p>The first staker can inflate the exchange rate by transferring tokens directly to the contract such that subsequent stakers get minted zero wxETH. Their stake can then be unstaked by the first staker, together with their own first stake and inflation investment. Effectively, the first staker can steal the second stake.\nThe attack exploits the rounding error in tokens minted, caused by the inflation. This vulnerability has a more general impact than just described, in that stakes might be partially stolen and that it also affects further stakers down the line, but the below example demonstrates the basic case.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Alice is the first staker, so <code>totalSupply() == 0</code>.\nShe stakes <code>1</code> xETH by calling <code>stake(1)</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">stake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">drip</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev calculate the amount of wxETH to mint</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewStake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev transfer xETH from the user to the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">xETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransferFrom</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">), </span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev emit event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Stake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev mint the wxETH to the user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>and gets minted <code>previewStake(1)</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewStake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev if xETHAmount is 0, revert.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AmountZeroProvided</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev calculate the amount of wxETH to mint before transfer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">BASE_UNIT</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">exchangeRate</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>which thus is <code>1 * BASE_UNIT / exchangeRate()</code>, where</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exchangeRate</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev if there are no tokens minted, return the initial exchange rate</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_totalSupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">INITIAL_EXCHANGE_RATE</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev calculate the cash on hand by removing locked funds from the total xETH balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice this balanceOf call will include any lockedFunds,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice as the locked funds are also in xETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">cashMinusLocked</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">xETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)) - </span><span class=\"mtk12\">lockedFunds</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev return the exchange rate by dividing the cash on hand by the total supply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">cashMinusLocked</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">BASE_UNIT</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">_totalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>so this works out to <code>1 * BASE_UNIT / INITIAL_EXCHANGE_RATE</code>. This is what Alice is minted and also the new <code>totalSupply()</code>.</p>\n<p>Bob is about to stake <code>b</code> xETH (which Alice can frontrun).</p>\n<p>Before Bob’s stake, Alice transfers <code>a</code> xETH directly to the wxETH contract. The xETH balance of wxETH is now <code>1 + a + lockedFunds</code>; <code>1</code> from Alice’s stake, <code>a</code> from her token transfer and whatever <code>lockedFunds</code> may have been added.</p>\n<p>Now Bob stakes his <code>b</code> xETH by calling <code>stake(b)</code>. By reference to the above code, this mints him <code>previewStake(b)</code>, which is <code>n * BASE_UNIT / exchangeRate()</code>.\nThis time <code>totalSupply() > 0</code> so <code>exchangeRate()</code> this time is <code>(1 + a) * BASE_UNIT / (1 * BASE_UNIT / INITIAL_EXCHANGE_RATE)</code>, which simplifies to <code>(1 + a) * INITIAL_EXCHANGE_RATE</code>.\nSo Bob gets minted <code>b * BASE_UNIT / ((1 + a) * INITIAL_EXCHANGE_RATE)</code>. This may clearly be <code>&#x3C; 1</code> which is therefore rounded down to <code>0</code> in Solidity. <code>BASE_UNIT</code> and <code>INITIAL_EXCHANGE_RATE</code> are both set to <code>1e18</code>, so Bob is minted <code>b/(1 + a)</code> tokens. In that case, we simply have that if <code>a >= b</code> then Bob is minted <code>0</code> wxETH.</p>\n<p>Now note in <code>stake()</code> above that whenever a non-zero amount is staked, those funds are transferred to the contract (even if nothing is minted).</p>\n<p>Bob cannot unstake anything with <code>0</code> wxETH, so he has lost his <code>b</code> xETH.</p>\n<p><code>totalSupply()</code> is now <code>1</code> and the xETH balance of wxETH is <code>1 + a + b + lockedFunds</code>. <code>exchangeRate()</code> is therefore <code>(1 + a + b) * BASE_UNIT / 1</code>.</p>\n<p>Alice owns the <code>1</code> wxETH ever minted so if she  unstakes it</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wxETHAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">drip</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev calculate the amount of xETH to return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">returnAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">previewUnstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wxETHAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev emit event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">wxETHAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">returnAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev burn the wxETH from the user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">wxETHAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev return the xETH back to user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">xETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">returnAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev return the amount of xETH sent to user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">returnAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>she gets <code>previewUnstake(1)</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">previewUnstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wxETHAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev if wxETHAmount is 0, revert.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">wxETHAmount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AmountZeroProvided</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev calculate the amount of xETH to return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">wxETHAmount</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">exchangeRate</span><span class=\"mtk1\">()) / </span><span class=\"mtk12\">BASE_UNIT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>which thus is <code>1 * (1 + a + b) * BASE_UNIT / BASE_UNIT == (1 + a + b)</code>.</p>\n<p>That is, Alice gets both hers and Bob’s stakes.</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Do not use <code>xETH.balanceOf(address(this))</code> when calculating the funds staked. Account only for funds transferred through <code>stake()</code> by keeping an internal accounting of the balance. Consider implementing a sweep function to access any unaccounted funds, or use them as locked funds if free (but unlikely) funds would be accepted as such.</p>\n<h3 id=\"assessed-type-5\" style=\"position:relative;\"><a href=\"#assessed-type-5\" aria-label=\"assessed type 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>ERC4626</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/21#issuecomment-1552991702\">vaporkane (xETH) disagreed with severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/21#issuecomment-1565180493\">kirk-baird (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/21#issuecomment-1575446348\">vaporkane (xETH) confirmed</a></strong></p>\n<hr>\n<h2 id=\"m-07-incorrect-slippage-check-in-the-amo2rebalanceup-can-be-attacked-by-mev\" style=\"position:relative;\"><a href=\"#m-07-incorrect-slippage-check-in-the-amo2rebalanceup-can-be-attacked-by-mev\" aria-label=\"m 07 incorrect slippage check in the amo2rebalanceup can be attacked by mev permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14\">[M-07] Incorrect slippage check in the AMO2.rebalanceUp can be attacked by MEV</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14\">ronnyx2017</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L323-L325\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L323-L325</a> <br><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L335-L351\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L335-L351</a></p>\n<p>The <code>AMO2.rebalanceUp</code> uses <code>AMO2.bestRebalanceUpQuote</code> function to avoid MEV attack when removing liquidity with only one coin. But the <code>bestRebalanceUpQuote</code> does not calculate the slippage correctly in this case, which is vulnerable to be attacked by MEV sandwich.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>AMO2.rebalanceUp</code> can be executed successfully only if the <code>preRebalanceCheck</code> returns true.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isRebalanceUp</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">preRebalanceCheck</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">isRebalanceUp</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RebalanceUpNotAllowed</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>So as the logic in the <code>preRebalanceCheck</code>, if <code>isRebalanceUp = ture</code>, the token balances in the curve should satisfy the following condition</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">xETHBal / (stETHBal + xETHBal) &gt; REBALANCE_UP_THRESHOLD </span></span></code></pre>\n<p>The default value of <code>REBALANCE_UP_THRESHOLD</code> is 0.75 :</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 public REBALANCE_UP_THRESHOLD = 0.75E18;</span></span></code></pre>\n<p>It’s always greater than 0.5. So when removing liquidity for only xETH, which is the <code>rebalanceUp</code> function actually doing, the slippage will be positive instead of negative. You will receive more than 1 uint of xETH when you burn the lp token of 1 virtual price.</p>\n<p>But the slippage calculation is incorrect in the <code>bestRebalanceUpQuote</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// min received caculate in bestRebalanceUpQuote</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bestQuote</span><span class=\"mtk1\">.</span><span class=\"mtk12\">min_xETHReceived</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">applySlippage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">vp</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">defenderQuote</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lpBurn</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">BASE_UNIT</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// applySlippage function</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">applySlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> * (</span><span class=\"mtk12\">BASE_UNIT</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippageBPS</span><span class=\"mtk1\">)) / </span><span class=\"mtk12\">BASE_UNIT</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>It uses the target amount subtracted slippage as the min token amount received. It is equivalent to expanding the slippage in the opposite direction. It makes the <code>contractQuote</code> can’t protect the <code>defenderQuote</code>, increasing the risk of a large sandwich.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><code>rebalanceUp</code> and <code>rebalanceDown</code> should use different slippage calculation methods in the <code>applySlippage</code>.</p>\n<h3 id=\"assessed-type-6\" style=\"position:relative;\"><a href=\"#assessed-type-6\" aria-label=\"assessed type 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>MEV</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1551005815\">d3e4 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Whether you will receive more or less xETH per LP token is accounted for in the price <code>vp</code>. <code>(vp * defenderQuote.lpBurn) / BASE_UNIT</code> is the amount of xETH received when burning <code>lpBurn</code> LP tokens. We want to receive as much xETH as possible, but at least <code>applySlippage</code> of that, e.g. 99%.\nIt doesn’t matter what direction we are exchanging; we always want to receive as much as possible for whatever fixed amount we provide. So the slippage should always be calculated as less than 100% of the ideal amount received.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1552318398\">vaporkane (xETH) disputed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1565165519\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I agree with the comments that slippage is calculated as a percentage of the received token. This is the desirable behaviour and therefore this issue is invalid. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1567757874\">ronnyx2017 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@d3e4 - In fact, the price <code>vp</code> only accounts the token amounts when the peg pool is balanced, which means stETH:xEth is 1:1 in the pool. The case in the comment is from the point of a defi user instead of a rebalance mechanism. The <code>REBALANCE_UP_THRESHOLD</code> = 0.75 , and <code>REBALANCE_DOWN_THRESHOLD</code> = 0.68 . So when calling <code>rebalanceUp</code>, there must be more than 75% xETH in the pool and after the rebalance, there should be more than 68% xETH in the pool. Otherwise, the pool is unbalanced again. So use <code>vp</code> minus slippage as the contractQuote, the rebalance up can reduce the xETH proportion to lower than 50%, which makes the pool fall into the rebalance down process. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1567793196\">ronnyx2017 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Aha, I find a similar issue submitted by another warden <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/35\">https://github.com/code-423n4/2023-05-xeth-findings/issues/35</a>.\nThis issue is the root cause and solution for the  <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/35\">https://github.com/code-423n4/2023-05-xeth-findings/issues/35</a>.</p>\n<p>Actually, <code>rebalanceDown</code> can’t leap the boundary about <code>REBALANCE_UP_THRESHOLD</code> if slippage is appropriate. Because the <code>rebalanceDown</code> mints more xETH and adds it to the pool. If it adds too much xETH, the lp minted will lower than the slippage allows.  </p>\n<p>But for the <code>rebalanceUp</code>, the slippage protects nothing because of the incorrect calculation method.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1575833956\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@vaporkane you’re input would be valuable if that’s okay.</p>\n<p>Okay so the first point I am taking out of this is:</p>\n<blockquote>\n<p>In fact, the price vp only accounts the token amounts when the peg pool is balance, which means stETH:xEth is 1:1 in the pool.</p>\n</blockquote>\n<p>Does <code>vp * defenderQuote.lpBurn / BASE_UNIT</code> always give us the correct value of <code>xETH</code> that would be received when burning <code>lpBurn</code> amount of LP tokens?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1576936561\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@ronnyx2017 - I can’t see how this is linked to #35.</p>\n<p>When the pool is unbalanced you won’t get <strong>exactly</strong> the virtual price amount when you redeem it as one coin. This would imply that there’s always 1:1 relation which is not what curve does. But I think it is fair to use it as a slippage check, which is the sponsor’s intention here. </p>\n<p>What the warden is trying to argue is that, let’s say that virtual price is 1.05 so 1 LP should be redeemed as 1.05. Due to imbalance (rebalance up should require 75% of xETH using the default settings), if you redeem it as one coin (xETH) you won’t actually get 1.05, you will get a bit more because you are removing the coin which has more liquidity. Note that we are talking about curve’s stable pool model, where balance differences are eased. </p>\n<p>Note also that this is a safeguard measure against a defender supplied parameter. The calculation is only used if the argument provided by the off chain process ends up being lower than the quote from calculation, which means that the calculation is just a lower bound safety measure.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1577661870\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Thanks for the feedback @adriro. To summarise this issue there is a miscalculation in the slippage protection which could allow for a small sandwich attack. The conditions are that a defender must send a transaction with the minimum xETH received to be significantly lower than the real price in which case the <code>applySlippage()</code> lower bound will be taken rather than the provided minimum. Since there is a bug in the <code>applySlippage()</code> calculations this may result in a sandwich attack.</p>\n<p>I’m going to reinstate this issue as medium severity as there is a small bug in the slippage protection which under niche circumstances could result in a sandwich attack.</p>\n<p>Noting, although related to #35 I do not see this as a direct duplicate since it is a slippage attack rather than over rebalancing.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14#issuecomment-1577687865\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<p> @kirk-baird -\nI’m not sure I would call this a bug, as the intention is not to prevent MEV (which is already mitigated by the min amount) but to prevent a rogue or malfunctioning defender. Just making sure my previous comment intention is fully understood, I’ll leave the final decision (severity) to you.  </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>Partial: add admin controlled slippage values.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/630114ea6a3782f2f539b5936c524f8da62d0179\">https://github.com/code-423n4/2023-05-xeth/commit/630114ea6a3782f2f539b5936c524f8da62d0179</a></p>\n</blockquote>\n<p><strong>Status:</strong> Partially mitigated. Full details in reports from ronnyx2017 (<a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/16\">here</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/17\">here</a>) and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/23\">d3e4</a>, and also included in the Mitigation Review section below.</p>\n<hr>\n<h2 id=\"m-08-cvxstakersol-unable-to-process-newly-add-rewardtokens\" style=\"position:relative;\"><a href=\"#m-08-cvxstakersol-unable-to-process-newly-add-rewardtokens\" aria-label=\"m 08 cvxstakersol unable to process newly add rewardtokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/8\">[M-08] CVXStaker.sol Unable to process newly add rewardTokens</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/8\">bin2chen</a></em></p>\n<p>The lack of a mechanism to modify <code>rewardTokens[]</code><br>\nIf <code>convex</code> adds new <code>extraRewards</code><br>\n<code>CVXStaker.sol</code> cannot transfer the added token<br></p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>CVXStaker.sol</code> will pass in <code>rewardTokens[]</code> in <code>constructor</code>\nand in <code>getReward()</code>, loop this array to transfer <code>rewardTokens</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claimExtras</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IBaseRewardPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cvxPoolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getReward</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">claimExtras</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) { </span><span class=\"mtk3\">//&lt;--------@audit loop, then tranfer out</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rewardsRecipient</span><span class=\"mtk1\">, </span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>The main problem is that this <code>rewardTokens[]</code> does not provide a way to modify it but it is possible to add a new <code>rewardsToken</code> in <code>convex</code>.</p>\n<p>The following code is from <code>BaseRewardPool.sol</code> of <code>convex</code></p>\n<p><a href=\"https://github.com/convex-eth/platform/blob/main/contracts/contracts/BaseRewardPool.sol#L238\">https://github.com/convex-eth/platform/blob/main/contracts/contracts/BaseRewardPool.sol#L238</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addExtraReward</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_reward</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">rewardManager</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;!authorized&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_reward</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">),</span><span class=\"mtk8\">&quot;!reward setting&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">extraRewards</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_reward</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>This will result in a situation : if new <code>extraRewards</code> are added to <code>IBaseRewardPool</code> later on\nBut since the <code>rewardTokens</code> of <code>CVXStaker</code> cannot be modified (e.g. added), then the new <code>extraRewards</code> cannot be transferred out of <code>CVXStaker</code>.\nAfter <code>IBaseRewardPool(cvxPoolInfo.rewards).getReward()</code>, the newly added token can only stay in the <code>CVXStaker</code> contract.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a new method to modify<code>CVXStaker.rewardTokens[]</code></p>\n<h3 id=\"assessed-type-7\" style=\"position:relative;\"><a href=\"#assessed-type-7\" aria-label=\"assessed type 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Context</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/8#issuecomment-1558879509\">vaporkane (xETH) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/8#issuecomment-1559674830\">carlitox477 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Issue in QA #7 titled “CVXStaker::getReward: Possible DOS if rewardTokens is enough large” is a dup of this one</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/8#issuecomment-1565177509\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@carlitox477 -\nThis is not true. The issue in QA#7 is related to a DoS if there are too many rewards in claim rewards. This issue says if new rewards are added to convex they will not be paid out by the contract since the locally stored list is not updated.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/8#issuecomment-1575444345\">vaporkane (xETH) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>Add a <code>setRewardTokens</code> function.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4\">https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4</a></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed with comments. Full details in reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/9\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/24\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/7\">ronnyx2017</a>.</p>\n<hr>\n<h2 id=\"m-09-withdrawallandunwrap-the-clptoken-transfer-to-amosol-may-be-locked-in-the-contract\" style=\"position:relative;\"><a href=\"#m-09-withdrawallandunwrap-the-clptoken-transfer-to-amosol-may-be-locked-in-the-contract\" aria-label=\"m 09 withdrawallandunwrap the clptoken transfer to amosol may be locked in the contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/6\">[M-09] withdrawAllAndUnwrap() the clpToken transfer to AMO.sol may be locked in the contract</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/6\">bin2chen</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/13\">ronnyx2017</a></em></p>\n<p>in <code>withdrawAllAndUnwrap()</code>\nthe clpToken transfer to AMO.sol may be locked in the contract</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>withdrawAllAndUnwrap()</code> You can specify <code>sendToOperator==true</code> to transfer the <code>clpToken</code> to <code>operator</code></p>\n<p>The code is as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawAllAndUnwrap</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claim</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sendToOperator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IBaseRewardPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cvxPoolInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">rewards</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdrawAllAndUnwrap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">claim</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">sendToOperator</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">clpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">clpToken</span><span class=\"mtk1\">.</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalBalance</span><span class=\"mtk1\">); </span><span class=\"mtk3\">//&lt;------@audit transfer to operator (AMO)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>current protocols, <code>operator</code> is currently set to <code>AMO.sol</code> as normal</p>\n<p>But <code>AMO.sol</code> doesn’t have any way to use the transferred <code>clpToken</code>.\nThe reason is that in AMO.sol, the method that transfers the <code>clpToken</code>, the number of transfers is from the newly generated <code>clpToken</code> from <code>curvePool</code></p>\n<p>It doesn’t include <code>clpToken</code> that already exists in <code>AMO.sol</code> contract, for example (rebalanceDown/addLiquidity/addLiquidityOnlyStETH)</p>\n<p>example <code>rebalanceDown</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">rebalanceDown</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RebalanceDownQuote</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quote</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">lpAmountOut</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">curvePool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add_liquidity</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amounts</span><span class=\"mtk1\">, quote.minLpReceived);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">curvePool</span><span class=\"mtk1\">)).</span><span class=\"mtk11\">safeTransfer</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">cvxStaker</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lpAmountOut</span><span class=\"mtk1\"> </span><span class=\"mtk3\">//&lt;---------@audit this clpToken from curvePool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">cvxStaker</span><span class=\"mtk1\">.</span><span class=\"mtk11\">depositAndStake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lpAmountOut</span><span class=\"mtk1\">);    </span></span></span></code></pre>\n<p>So the <code>clpToken</code> transferred to ‘AMO.sol’ by <code>withdrawAllAndUnwrap()</code> will stay in the AMO contract and it is locked.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>modify <code>withdrawAllAndUnwrap()</code> , directly transfer to <code>msg.sender</code>.</p>\n<h3 id=\"assessed-type-8\" style=\"position:relative;\"><a href=\"#assessed-type-8\" aria-label=\"assessed type 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Context</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/6#issuecomment-1558877974\">vaporkane (xETH) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>Change <code>sendToOperator</code> to <code>sendToOwner</code>.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/a840dc0b8a1de59a3ea06e0814ea3ce26707bdae\">https://github.com/code-423n4/2023-05-xeth/commit/a840dc0b8a1de59a3ea06e0814ea3ce26707bdae</a></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed. Full details in reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/14\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/10\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/25\">d3e4</a>.</p>\n<hr>\n<h2 id=\"m-10-first-1-wei-deposit-can-produce-loss-of-user-xeth-funds-in-wxeth\" style=\"position:relative;\"><a href=\"#m-10-first-1-wei-deposit-can-produce-loss-of-user-xeth-funds-in-wxeth\" aria-label=\"m 10 first 1 wei deposit can produce loss of user xeth funds in wxeth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/3\">[M-10] First 1 wei deposit can produce loss of user xETH funds in <code>wxETH</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/3\">carlitox477</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/24\">d3e4</a></em></p>\n<p>The present implementation of the <code>wxETH::stake</code> functions permits the sending of tokens to the contract, even if the quantity of wxETH is zero. This can result in users losing funds, particularly when the initial deposit is only 1 wei, and the extent to which xETH is dripped (alongside its dripping period) is taken into consideration.</p>\n<p>The issue arises when <code>xETHAmount * BASE_UNIT) &#x3C; exchangeRate()</code> during the second deposit.</p>\n<p>There is a potential risk of losing funds in certain feasible scenarios due to the incorrect handling of round-down situations.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><a href=\"https://gist.github.com/carlitox477/a5bd6345b4854da91fe5f80217a18aed\">Here a coded POC</a> that shows what would happen if:</p>\n<ol>\n<li>The protocol wants to drip 70 xETH in its first week as a way of promotion</li>\n<li>Alice realized this and decided to make the first deposit (by frontrunning every other deposits)</li>\n<li>The second deposit of $104166666666666601; wei$ happens 15 minutes after Alice’s deposit</li>\n</ol>\n<p>Here’s the output of the coded POC:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Logs:</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  Min amount to deposit to get a single share: 104166666666666601 wei</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  Bob xETH before staking: 104166666666666600</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  Bob wxETH after staking balance 0</span></span></code></pre>\n<h3 id=\"other-scenarios\" style=\"position:relative;\"><a href=\"#other-scenarios\" aria-label=\"other scenarios permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other scenarios</h3>\n<p>Here are the numbers of other scenario:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\"><strong>1 eth in 1 year</strong></th>\n<th align=\"center\"></th>\n<th align=\"center\"><strong>10 eth in 1 year</strong></th>\n<th align=\"center\"></th>\n<th align=\"center\"><strong>100 eth in 1 year</strong></th>\n<th align=\"center\"></th>\n<th align=\"center\"><strong>1000 eth in 1 year</strong></th>\n<th align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>Time until second deposit</strong></td>\n<td align=\"center\">Min amount to deposit (ETH)</td>\n<td align=\"center\">Value(USD)</td>\n<td align=\"center\">Min amount to deposit</td>\n<td align=\"center\">Value(USD)</td>\n<td align=\"center\">Min amount to deposit</td>\n<td align=\"center\">Value(USD)</td>\n<td align=\"center\">Min amount to deposit</td>\n<td align=\"center\">Value(USD)</td>\n</tr>\n<tr>\n<td align=\"center\">1 minute</td>\n<td align=\"center\">0,000001902587519</td>\n<td align=\"center\">0,003424657534</td>\n<td align=\"center\">0,00001902587519</td>\n<td align=\"center\">0,03424657534</td>\n<td align=\"center\">0,0001902587519</td>\n<td align=\"center\">0,3424657534</td>\n<td align=\"center\">0,001902587519</td>\n<td align=\"center\">3,424657534</td>\n</tr>\n<tr>\n<td align=\"center\">15 minutes</td>\n<td align=\"center\">0,00002853881279</td>\n<td align=\"center\">0,05136986301</td>\n<td align=\"center\">0,0002853881279</td>\n<td align=\"center\">0,5136986301</td>\n<td align=\"center\">0,002853881279</td>\n<td align=\"center\">5,136986301</td>\n<td align=\"center\">0,02853881279</td>\n<td align=\"center\">51,36986301</td>\n</tr>\n<tr>\n<td align=\"center\">1 hour</td>\n<td align=\"center\">0,0001141552511</td>\n<td align=\"center\">0,2054794521</td>\n<td align=\"center\">0,001141552511</td>\n<td align=\"center\">2,054794521</td>\n<td align=\"center\">0,01141552511</td>\n<td align=\"center\">20,54794521</td>\n<td align=\"center\">0,1141552511</td>\n<td align=\"center\">205,4794521</td>\n</tr>\n<tr>\n<td align=\"center\">24 hours</td>\n<td align=\"center\">0,002739726027</td>\n<td align=\"center\">4,931506849</td>\n<td align=\"center\">0,02739726027</td>\n<td align=\"center\">49,31506849</td>\n<td align=\"center\">0,2739726027</td>\n<td align=\"center\">493,1506849</td>\n<td align=\"center\">2,739726027</td>\n<td align=\"center\">4931,506849</td>\n</tr>\n<tr>\n<td align=\"center\">1 week</td>\n<td align=\"center\">0,01917808219</td>\n<td align=\"center\">34,52054795</td>\n<td align=\"center\">0,1917808219</td>\n<td align=\"center\">345,2054795</td>\n<td align=\"center\">1,917808219</td>\n<td align=\"center\">3452,054795</td>\n<td align=\"center\">19,17808219</td>\n<td align=\"center\">34520,54795</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\"><strong>70 eth in 1 week</strong></th>\n<th align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>Time until second deposit</strong></td>\n<td align=\"center\">Min amount to deposit (ETH)</td>\n<td align=\"center\">Value(USD)</td>\n</tr>\n<tr>\n<td align=\"center\">1 minute</td>\n<td align=\"center\">0,006944444444</td>\n<td align=\"center\">12,5</td>\n</tr>\n<tr>\n<td align=\"center\">15 minutes</td>\n<td align=\"center\">0,1041666667</td>\n<td align=\"center\">187,5</td>\n</tr>\n<tr>\n<td align=\"center\">1 hour</td>\n<td align=\"center\">0,4166666667</td>\n<td align=\"center\">750</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"mitigation-steps\" style=\"position:relative;\"><a href=\"#mitigation-steps\" aria-label=\"mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation steps</h3>\n<p>Check <code>mintAmount > 0</code> in function <code>wxETH::stake</code>. This means:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function stake(uint256 xETHAmount) external drip returns (uint256) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        /// @dev calculate the amount of wxETH to mint</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        uint256 mintAmount = previewStake(xETHAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       if (mintAmount == 0){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+           revert ERROR_MINTING_0_SHARES();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        /// @dev transfer xETH from the user to the contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        xETH.safeTransferFrom(msg.sender, address(this), xETHAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        /// @dev emit event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        emit Stake(msg.sender, xETHAmount, mintAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        /// @dev mint the wxETH to the user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _mint(msg.sender, mintAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        return mintAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/3#issuecomment-1549992046\">d3e4 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I don’t think this and it’s duplicates are all one issue, but two different issues. One issue is the standard inflation attack by transferring tokens directly to the contract. This is described by #4, #21 and #22.\nThe other issue is the one described in #3 and #24. There the inflation is instead caused by the contract itself, by dripping, which is another loophole that may be exploited even if the vulnerability causing the inflation attack is patched.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/3#issuecomment-1552318659\">vaporkane (xETH) acknowledged, but disagreed with severity</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/3#issuecomment-1565182655\">kirk-baird (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>@d3e4 -\nI agree with this comment that these attacks are different enough to warrant separate issues.</p>\n<p>Further, since these attacks can only be executed by the very first staker and there is only a single exchange rate the likelihood of attack is very low. I’m therefore downgrading the severity to medium.</p>\n<p>Additionally, the chance of the drip attack is extremely low since the user would need to be the only staker for an extended period of time. This borders between a low and medium severity but I will generously consider it medium in this case.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#mitigations-to-be-reviewed\">xETH mitigated</a>:</strong></p>\n<blockquote>\n<p>Don’t allow minting of 0 shares.</p>\n<p>PR: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/fbb29727ce21857f60c1c94fff43c73b4124a4b4\">https://github.com/code-423n4/2023-05-xeth/commit/fbb29727ce21857f60c1c94fff43c73b4124a4b4</a></p>\n</blockquote>\n<p><strong>Status:</strong> Not fully mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/15\">ronnyx2017</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/26\">d3e4</a>, and also included in the Mitigation Review section below.</p>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 5 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/20\">report highlighted below</a> by <strong>adriro</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/36\">d3e4</a>,\n<a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/19\">ronnyx2017</a>,\n<a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/11\">bin2chen</a> and\n<a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/7\">carlitox477</a>.</em></p>\n<h2 id=\"low-issue-summary\" style=\"position:relative;\"><a href=\"#low-issue-summary\" aria-label=\"low issue summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Issue Summary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[L-01]</td>\n<td align=\"left\">Wrong function declaration in IBaseRewardPool interface</td>\n</tr>\n<tr>\n<td>[L-02]</td>\n<td align=\"left\">Incorrect function declaration in ICurveFactory interface</td>\n</tr>\n<tr>\n<td>[L-03]</td>\n<td align=\"left\"><code>grantRole</code> operation in <code>setAMO</code> function may incorrectly check role access</td>\n</tr>\n<tr>\n<td>[L-04]</td>\n<td align=\"left\">Potential accidental inclusion of ERC20Burnable in xETH token</td>\n</tr>\n<tr>\n<td>[L-05]</td>\n<td align=\"left\"><code>addLockedFunds</code> should check <code>dripRatePerBlock</code> is not zero</td>\n</tr>\n<tr>\n<td>[L-06]</td>\n<td align=\"left\">Use Ownable2Step instead of Ownable for access control</td>\n</tr>\n<tr>\n<td>[L-07]</td>\n<td align=\"left\"><code>recoverToken</code> function should restrict which tokens are allowed to be recovered</td>\n</tr>\n<tr>\n<td>[L-08]</td>\n<td align=\"left\"><code>setOperator</code> and <code>setRewardsRecipient</code> don’t check for <code>address(0)</code></td>\n</tr>\n<tr>\n<td>[L-09]</td>\n<td align=\"left\">Initialize <code>rebalanceUpCap</code> and <code>rebalanceDownCap</code> in AMO constructor</td>\n</tr>\n<tr>\n<td>[L-10]</td>\n<td align=\"left\">Validate argument in <code>setRebalanceUpThreshold</code> and <code>setRebalanceDownThreshold</code></td>\n</tr>\n<tr>\n<td>[L-11]</td>\n<td align=\"left\"><code>rebalanceUpCap</code> and <code>rebalanceDownCap</code> operate on different types of value</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"l-01-wrong-function-declaration-in-ibaserewardpool-interface\" style=\"position:relative;\"><a href=\"#l-01-wrong-function-declaration-in-ibaserewardpool-interface\" aria-label=\"l 01 wrong function declaration in ibaserewardpool interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-01] Wrong function declaration in IBaseRewardPool interface</h2>\n<p>The <code>withdraw</code> function declaration is missing the <code>bool</code> return value.</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/interfaces/IBaseRewardPool.sol#L14\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/interfaces/IBaseRewardPool.sol#L14</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">claim</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"l-02-incorrect-function-declaration-in-icurvefactory-interface\" style=\"position:relative;\"><a href=\"#l-02-incorrect-function-declaration-in-icurvefactory-interface\" aria-label=\"l 02 incorrect function declaration in icurvefactory interface permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-02] Incorrect function declaration in ICurveFactory interface</h2>\n<p>The <code>deploy_pool</code> function doesn’t exist in the Curve Factory contract (see <a href=\"https://github.com/curvefi/curve-factory/blob/master/contracts/Factory.vy\">https://github.com/curvefi/curve-factory/blob/master/contracts/Factory.vy</a>).</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/interfaces/ICurveFactory.sol#L5-L18\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/interfaces/ICurveFactory.sol#L5-L18</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deploy_pool</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">name</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">symbol</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">coins</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">A</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mid_fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">out_fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowed_extra_profit</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">fee_gamma</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">adjustment_step</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">admin_fee</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ma_half_time</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initial_price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"l-03-grantrole-operation-in-setamo-function-may-incorrectly-check-role-access\" style=\"position:relative;\"><a href=\"#l-03-grantrole-operation-in-setamo-function-may-incorrectly-check-role-access\" aria-label=\"l 03 grantrole operation in setamo function may incorrectly check role access permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-03] <code>grantRole</code> operation in <code>setAMO</code> function may incorrectly check role access</h2>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L54\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L54</a></p>\n<p>Instead of using the internal <code>_grantRole</code> function, the <code>setAMO</code> function present in the xETH is using the <code>grantRole</code> function of the OpenZeppelin AccessControl library, which includes a validation that the caller has the admin role for the role being granted (<code>MINTER_ROLE</code> in this case):</p>\n<p><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol#L145-L147\">https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/AccessControl.sol#L145-L147</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">grantRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">account</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">getRoleAdmin</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_grantRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">role</span><span class=\"mtk1\">, </span><span class=\"mtk12\">account</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This should be ok as long as the admin role for <code>MINTER_ROLE</code> is not defined. Currently, the <code>setAMO</code> function will be called by the <code>DEFAULT_ADMIN_ROLE</code> which is the default admin role for the <code>MINTER_ROLE</code> role. But if the role admin for the <code>MINTER_ROLE</code> is defined, then the default admin role will not be the admin role for the <code>MINTER_ROLE</code> and the operation will be reverted.</p>\n<p>The recommendation is to change <code>grantRole</code> for the internal variant <code>_grantRole</code>.</p>\n<h2 id=\"l-04-potential-accidental-inclusion-of-erc20burnable-in-xeth-token\" style=\"position:relative;\"><a href=\"#l-04-potential-accidental-inclusion-of-erc20burnable-in-xeth-token\" aria-label=\"l 04 potential accidental inclusion of erc20burnable in xeth token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-04] Potential accidental inclusion of ERC20Burnable in xETH token</h2>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L9\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L9</a></p>\n<p>The xETH token inherits from ERC20Burnable, which defines public methods to allow burning of tokens.</p>\n<p>Presumably, this was added accidentally as a mistake in order to implement the <code>burnShares()</code> function in xETH. The internal function <code>_burn</code> is already provided in the base implementation of ERC20 (OpenZepplin library), and doesn’t need any extra implementation, which may increase the attack surface of the protocol.</p>\n<p>The recommendation is to remove ERC20Burnable from the inheritance list of xETH.</p>\n<h2 id=\"l-05-addlockedfunds-should-check-driprateperblock-is-not-zero\" style=\"position:relative;\"><a href=\"#l-05-addlockedfunds-should-check-driprateperblock-is-not-zero\" aria-label=\"l 05 addlockedfunds should check driprateperblock is not zero permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-05] <code>addLockedFunds</code> should check <code>dripRatePerBlock</code> is not zero</h2>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L146-L148\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L146-L148</a></p>\n<p>The <code>addLockedFunds</code> function present in the wxETH contract should check that <code>dripRatePerBlock > 0</code>.</p>\n<h2 id=\"l-06-use-ownable2step-instead-of-ownable-for-access-control\" style=\"position:relative;\"><a href=\"#l-06-use-ownable2step-instead-of-ownable-for-access-control\" aria-label=\"l 06 use ownable2step instead of ownable for access control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-06] Use Ownable2Step instead of Ownable for access control</h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L9\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L9</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L11\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L11</a></li>\n</ul>\n<p>Use the <a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable2Step.sol\">Ownable2Step</a> variant of the Ownable contract to better safeguard against accidental transfers of access control.</p>\n<h2 id=\"l-07-recovertoken-function-should-restrict-which-tokens-are-allowed-to-be-recovered\" style=\"position:relative;\"><a href=\"#l-07-recovertoken-function-should-restrict-which-tokens-are-allowed-to-be-recovered\" aria-label=\"l 07 recovertoken function should restrict which tokens are allowed to be recovered permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-07] <code>recoverToken</code> function should restrict which tokens are allowed to be recovered</h2>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L101-L109\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L101-L109</a></p>\n<p>The CVXStaker contract manages different tokens as part of its natural intended behavior. Notably, these are the Curve LP tokens, Convex tokens, and the different reward tokens associated with the Convex staking pool.</p>\n<p>The <code>recoverToken</code> implementation can arbitrarily transfer any ERC20 token, which may also be used to transfer these tokens.</p>\n<p>The recommendation is to restrict these tokens, which are an important part of the process around the contract and should not be “recovered” as part of an accidental side effect.</p>\n<h2 id=\"l-08-setoperator-and-setrewardsrecipient-dont-check-for-address0\" style=\"position:relative;\"><a href=\"#l-08-setoperator-and-setrewardsrecipient-dont-check-for-address0\" aria-label=\"l 08 setoperator and setrewardsrecipient dont check for address0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-08] <code>setOperator</code> and <code>setRewardsRecipient</code> don’t check for <code>address(0)</code></h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L78\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L78</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L89\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L89</a></li>\n</ul>\n<p>Check that the arguments are not <code>address(0)</code>.</p>\n<h2 id=\"l-09-initialize-rebalanceupcap-and-rebalancedowncap-in-amo-constructor\" style=\"position:relative;\"><a href=\"#l-09-initialize-rebalanceupcap-and-rebalancedowncap-in-amo-constructor\" aria-label=\"l 09 initialize rebalanceupcap and rebalancedowncap in amo constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-09] Initialize <code>rebalanceUpCap</code> and <code>rebalanceDownCap</code> in AMO constructor</h2>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L175\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L175</a></p>\n<p>Initialize these two variables to comply with the invariant of these values being different from zero, which is checked in their respective setters.</p>\n<h2 id=\"l-10-validate-argument-in-setrebalanceupthreshold-and-setrebalancedownthreshold\" style=\"position:relative;\"><a href=\"#l-10-validate-argument-in-setrebalanceupthreshold-and-setrebalancedownthreshold\" aria-label=\"l 10 validate argument in setrebalanceupthreshold and setrebalancedownthreshold permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-10] Validate argument in <code>setRebalanceUpThreshold</code> and <code>setRebalanceDownThreshold</code></h2>\n<ul>\n<li><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L495\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L495</a></li>\n<li><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L512\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L512</a></li>\n</ul>\n<p>Validate that the thresholds are within the 0-1e18 range in <code>setRebalanceUpThreshold</code> and <code>setRebalanceDownThreshold</code> function of the AMO contract.</p>\n<h2 id=\"l-11-rebalanceupcap-and-rebalancedowncap-operate-on-different-types-of-value\" style=\"position:relative;\"><a href=\"#l-11-rebalanceupcap-and-rebalancedowncap-operate-on-different-types-of-value\" aria-label=\"l 11 rebalanceupcap and rebalancedowncap operate on different types of value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[L-11] <code>rebalanceUpCap</code> and <code>rebalanceDownCap</code> operate on different types of value</h2>\n<p>Caps operate on different types of value. <code>rebalanceUpCap</code> is checked against LP tokens:</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L252\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L252</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quote</span><span class=\"mtk1\">.</span><span class=\"mtk12\">lpBurn</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">rebalanceUpCap</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RebalanceUpCapExceeded</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>While <code>rebalanceDownCap</code> is checked against xETH tokens:</p>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L299\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L299</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">quote</span><span class=\"mtk1\">.</span><span class=\"mtk12\">xETHAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">rebalanceDownCap</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RebalanceDownCapExceeded</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<h2 id=\"informational-issue-summary\" style=\"position:relative;\"><a href=\"#informational-issue-summary\" aria-label=\"informational issue summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Informational Issue Summary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[INFO-01]</td>\n<td align=\"left\">Type of Curve pool is an important and sensible parameter</td>\n</tr>\n<tr>\n<td>[INFO-02]</td>\n<td align=\"left\">Several centralization risks introduce multiple points of failure</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"info-01-type-of-curve-pool-is-an-important-and-sensible-parameter\" style=\"position:relative;\"><a href=\"#info-01-type-of-curve-pool-is-an-important-and-sensible-parameter\" aria-label=\"info 01 type of curve pool is an important and sensible parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[INFO-01] Type of Curve pool is an important and sensible parameter</h2>\n<p>Protocol owners will deploy a Curve pool as an essential piece of the protocol. The current intention is to use a Curve for the pair xETH/stETH.</p>\n<p>The protocol team has asserted that they will be using a plain pool, “balances” type, in which none of the coins are native ETH.</p>\n<p>There are two issues that shouldn’t be a problem, as long as these conditions are maintained:</p>\n<ol>\n<li>stETH being a rebasing token needs the Curve pool to be of “balances” type. Metapools are not supported either.</li>\n<li>As the protocol uses Curve’s <code>get_virtual_price()</code> (in the AMO contract) it can potentially be vulnerable to the read-only reentrancy attack described in the <a href=\"https://chainsecurity.com/curve-lp-oracle-manipulation-post-mortem/\">following article</a>. This attack is not possible as long as none of the coins is ETH, which is the main driver to trigger the reentrancy.</li>\n</ol>\n<p>If conditions are changed, and the type of Curve pool is changed, these two potential issues could be manifested as vulnerabilities in the protocol. </p>\n<h2 id=\"info-02-several-centralization-risks-introduce-multiple-points-of-failure\" style=\"position:relative;\"><a href=\"#info-02-several-centralization-risks-introduce-multiple-points-of-failure\" aria-label=\"info 02 several centralization risks introduce multiple points of failure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[INFO-02] Several centralization risks introduce multiple points of failure</h2>\n<p>Although much care has been taken to contain and bound the accessible functionality of the defender role, there are multiple centralization risks around the protocol that imply a lot of trust in owners or controllers of the protocol.</p>\n<p>Here is a non-exhaustive list of the different places that may introduce potential failures due to centralization:</p>\n<ul>\n<li>xETH can be paused, freezing all operations.</li>\n<li>AMO can be changed in xETH, which grants arbitrary minting capabilities to the new account.</li>\n<li>Minting and burning is also accessible to the <code>DEFAULT_ADMIN_ROLE</code>.</li>\n<li>Configuration for wxETH rewards can be arbitrarily changed.</li>\n<li>Rewards for wxETH are handled manually via off-chain processes (claim revenue and call to add locked funds).</li>\n<li>Rebalance operations have cooldown, but cooldown can be changed to zero.</li>\n<li>Rebalance can be neutralized by setting zero caps.</li>\n<li>Rebalance thresholds can be arbitrarily changed to any amount.</li>\n<li>Remove liquidity functions in AMO contract can be used to empty the Curve pool.</li>\n<li>CXVStaker can be changed in AMO contract (sensible because this contract controls Curve LPs).</li>\n<li>LP tokens in CVXStaker can be withdrawn and sent to an arbitrary account (<code>withdrawAndUnwrap</code>).</li>\n</ul>\n<h2 id=\"non-critical-issue-summary\" style=\"position:relative;\"><a href=\"#non-critical-issue-summary\" aria-label=\"non critical issue summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Non Critical Issue Summary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[N-01]</td>\n<td align=\"left\">Import declarations should import specific symbols</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td>[N-02]</td>\n<td align=\"left\">Use <code>uint256</code> instead of the <code>uint</code> alias</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>[N-03]</td>\n<td align=\"left\">The <code>accrueDrip()</code> function can use <code>_accrueDrip()</code> to avoid the empty block implementation</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"n-01-import-declarations-should-import-specific-symbols\" style=\"position:relative;\"><a href=\"#n-01-import-declarations-should-import-specific-symbols\" aria-label=\"n 01 import declarations should import specific symbols permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-01] Import declarations should import specific symbols</h2>\n<p>Prefer import declarations that specify the symbol(s) using the form <code>import {SYMBOL} from \"SomeContract.sol\"</code> rather than importing the whole file</p>\n<p><em>Instances (20)</em>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">AMO2</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/IERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/utils/SafeERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/access/AccessControl.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./interfaces/ICurvePool.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CVXStaker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/IERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/utils/SafeERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/access/Ownable.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./interfaces/ICurvePool.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./interfaces/ICVXBooster.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./interfaces/IBaseRewardPool.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">interfaces</span><span class=\"mtk1\">/</span><span class=\"mtk12\">IXETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/IERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">wxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">3</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/ERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/IERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/utils/SafeERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/access/Ownable.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;solmate/utils/FixedPointMathLib.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">xETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/ERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/token/ERC20/extensions/ERC20Burnable.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/security/Pausable.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin-contracts/access/AccessControl.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"n-02-use-uint256-instead-of-the-uint-alias\" style=\"position:relative;\"><a href=\"#n-02-use-uint256-instead-of-the-uint-alias\" aria-label=\"n 02 use uint256 instead of the uint alias permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-02] Use <code>uint256</code> instead of the <code>uint</code> alias</h2>\n<p>Prefer using the <code>uint256</code> type definition over its <code>uint</code> alias.</p>\n<p><em>Instances (2)</em>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">CVXStaker</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">195</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">rewardTokens</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">src</span><span class=\"mtk1\">/</span><span class=\"mtk12\">wxETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">16</span><span class=\"mtk1\">:     </span><span class=\"mtk12\">event</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UpdateDripRate</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">oldDripRatePerBlock</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">newDripRatePerBlock</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"n-03-the-accruedrip-function-can-use-_accruedrip-to-avoid-the-empty-block-implementation\" style=\"position:relative;\"><a href=\"#n-03-the-accruedrip-function-can-use-_accruedrip-to-avoid-the-empty-block-implementation\" aria-label=\"n 03 the accruedrip function can use _accruedrip to avoid the empty block implementation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[N-03] The <code>accrueDrip()</code> function can use <code>_accrueDrip()</code> to avoid the empty block implementation</h2>\n<p>The implementation of the <code>accrueDrip()</code> function can be changed to use <code>_accrueDrip()</code> instead of the <code>drip</code> modifier to avoid the empty block implementation.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">accrueDrip</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">_accrueDrip</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/20#issuecomment-1558869429\">vaporkane (xETH) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/20#issuecomment-1578036753\">kirk-baird (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is a high quality report, where all issues have the correct security rating and are valid.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 4 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/34\">report highlighted below</a> by <strong>adriro</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/37\">d3e4</a>,\n<a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/18\">ronnyx2017</a> and\n<a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/12\">carlitox477</a>.</em></p>\n<h2 id=\"xethsol-contract\" style=\"position:relative;\"><a href=\"#xethsol-contract\" aria-label=\"xethsol contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>xETH.sol contract</h2>\n<ul>\n<li><code>grantRole</code> call in <code>setAMO</code> function can be changed to use the internal variant <code>_grantRole</code> to avoid re-checking for access control, saving gas.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L54\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L54</a></li>\n<li>The <code>curveAMO</code> storage variable is read 3 times from storage in <code>setAMO</code>. Consider using a local variable to save gas.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L44\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L44</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L45\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L45</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L54\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L54</a></li>\n<li><code>mintShares</code> function visibility can be changed to external as it isn’t used internally in the contract.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L63\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L63</a></li>\n<li><code>burnShares</code> function visibility can be changed to external as it isn’t used internally in the contract.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L75\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L75</a></li>\n<li><code>whenNotPaused</code> modifier can be removed from the <code>mintShares</code> function as this check is already provided by the internal <code>_beforeTokenTransfer</code> callback.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L63\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L63</a></li>\n<li><code>whenNotPaused</code> modifier can be removed from the <code>burnShares</code> function as this check is already provided by the internal <code>_beforeTokenTransfer</code> callback.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L75\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L75</a></li>\n<li><code>whenNotPaused</code> modifier can be removed from the <code>pause</code> function as this check is already included in the internal <code>_pause</code> function.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L86\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L86</a></li>\n<li><code>whenNotPaused</code> modifier can be removed from the <code>unpause</code> function as this check is already included in the internal <code>_unpause</code> function.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L93\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/xETH.sol#L93</a></li>\n</ul>\n<h2 id=\"wxethsol-contract\" style=\"position:relative;\"><a href=\"#wxethsol-contract\" aria-label=\"wxethsol contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>wxETH.sol contract</h2>\n<ul>\n<li>The SafeERC20 library can be safely removed as the contract will only deal with the xETH token, which is a known implementation that adheres correctly to the ERC20 standard.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L10\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L10</a></li>\n<li><code>lastReport</code> and <code>dripEnabled</code> storage variables can be combined to use a single slot and save gas by decreasing the precision of <code>lastReport</code> to <code>uint248</code>, which should still be plenty enough as this represents a block number.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L60-L62\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L60-L62</a></li>\n<li><code>lastReport</code> variable initialization can be safely skipped in the constructor, as it will be eventually initialized by the call to <code>startDrip()</code> (dripping is disabled at start).<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L73\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L73</a></li>\n<li><code>lockedFunds</code> storage variable is re-read from storage while emitting the event in the <code>addLockedFunds()</code> function. Consider using a local variable cache.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L156\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L156</a></li>\n<li><code>drip</code> is unneeded in the function <code>startDrip()</code> as it is presumed that currently dripping is disabled, making <code>_accrueDrip</code> have no effect.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L170\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L170</a></li>\n<li>Updating <code>lastReport</code> in the <code>stopDrip()</code> is not needed as it is already updated during the call to the <code>drip</code> modifier.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L191\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L191</a></li>\n<li><code>lockedFunds</code> storage variable is read from storage 5 times during the course of the <code>_accrueDrip()</code> function. Consider using local variable variants.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L236\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L236</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L241\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L241</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L248\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L248</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L254\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L254</a></li>\n<li>Calculation to update <code>lockedFunds</code> can be done using unchecked math since <code>dripAmount</code> is guaranteed to be not greater than <code>lockedFunds</code>.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L241\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/wxETH.sol#L241</a></li>\n</ul>\n<h2 id=\"cvxstakersol-contract\" style=\"position:relative;\"><a href=\"#cvxstakersol-contract\" aria-label=\"cvxstakersol contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CVXStaker.sol contract</h2>\n<ul>\n<li><code>rewardsRecipient</code> is re-read multiple times from storage (once per each iteration of the loop) in the <code>getRewards()</code> function. Consider reading it once and using a local variable after.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L190\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L190</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L195\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L195</a></li>\n<li><code>rewardTokens[i]</code> is read twice in each iteration of the loop in the <code>getRewards()</code> function. Consider reading it once and using a local variable after.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L192\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L192</a>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L195\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/CVXStaker.sol#L195</a></li>\n</ul>\n<h2 id=\"amo2sol-contract\" style=\"position:relative;\"><a href=\"#amo2sol-contract\" aria-label=\"amo2sol contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMO2.sol contract</h2>\n<ul>\n<li>The SafeERC20 library can be safely removed as the contract will only deal with xETH and stETH tokens, which are known implementations that adhere correctly to the ERC20 standard.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L12\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L12</a></li>\n<li>Infinite token approval can be granted to the curve pool for the xETH and stETH tokens at contract construction time. This will save the approval calls present in each of the functions that deal with adding liquidity to the pool.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L309\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L309</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L545\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L545</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L546\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L546</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L571\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L571</a></li>\n<li><code>rebalanceUp</code> function can take struct parameter from <code>calldata</code> instead of <code>memory</code>, saving a copy operation.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L240\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L240</a></li>\n<li><code>rebalanceDown</code> function can take struct parameter from <code>calldata</code> instead of <code>memory</code>, saving a copy operation.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L287\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L287</a></li>\n<li><code>bestRebalanceUpQuote</code> function can take struct parameter from <code>calldata</code> instead of <code>memory</code>, saving a copy operation.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L336\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L336</a></li>\n<li><code>bestRebalanceDownQuote</code> function can take struct parameter from <code>calldata</code> instead of <code>memory</code>, saving a copy operation.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L361\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L361</a></li>\n<li><code>rebalanceUp</code> function reads the <code>cvxStaker</code> twice from storage. Consider reading it once and using a local variable after.\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L256\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L256</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L261\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L261</a></li>\n<li><code>rebalanceDown</code> function reads the <code>cvxStaker</code> twice from storage. Consider reading it once and using a local variable after.\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L314\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L314</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L317\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L317</a></li>\n<li><code>bestRebalanceUpQuote</code> and <code>bestRebalanceDownQuote</code> can return a single result (<code>min_xETHReceived</code> and <code>minLpReceived</code> respectively) instead of returning a whole new struct in memory.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L337\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L337</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L362\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L362</a></li>\n<li><code>defender</code> storage variable is read 3 times from storage in the implementation of <code>setRebalanceDefender</code>. Consider using a local variable variant.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L391\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L391</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L392\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L392</a><br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L395\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L395</a></li>\n<li><code>minAmounts</code> array is not needed in the <code>removeLiquidityOnlyStETH()</code> function and can be safely removed.<br>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L640-L642\">https://github.com/code-423n4/2023-05-xeth/blob/main/src/AMO2.sol#L640-L642</a></li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/34#issuecomment-1575447810\">vaporkane (xETH) confirmed</a></strong></p>\n<hr>\n<h1 id=\"mitigation-review\" style=\"position:relative;\"><a href=\"#mitigation-review\" aria-label=\"mitigation review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation Review</h1>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>Following the C4 audit, 3 wardens (<a href=\"https://twitter.com/bin2chen\">bin2chen</a>, d3e4 and ronnyx2017) reviewed the mitigations for all identified issues. Additional details can be found within the <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation\">C4 xETH Mitigation Review repository</a>.</p>\n<h2 id=\"overview-of-changes\" style=\"position:relative;\"><a href=\"#overview-of-changes\" aria-label=\"overview of changes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview of Changes</h2>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation#overview-of-changes\">Summary from the Sponsor</a>:</strong></p>\n<ul>\n<li>Many issues assume a rogue defender as a starting point of attack, so we have chosen to add more granularity of parameters and checks to reduce risks there.</li>\n<li>Most mitigations would either be checks, or smaller changes of function parameters and calls</li>\n<li>In production we have planned to use MEV Protection services such as flashbots rpc</li>\n</ul>\n<h2 id=\"mitigation-review-scope\" style=\"position:relative;\"><a href=\"#mitigation-review-scope\" aria-label=\"mitigation review scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation Review Scope</h2>\n<table>\n<thead>\n<tr>\n<th>URL</th>\n<th>Mitigation of</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/60b9e1e2562d585831e3d8e2a7e345294d9dacbd\">https://github.com/code-423n4/2023-05-xeth/commit/60b9e1e2562d585831e3d8e2a7e345294d9dacbd</a></td>\n<td>M-02</td>\n<td>This mitigation adds a getTotalBalance function</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4\">https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4</a></td>\n<td>M-03</td>\n<td>This mitigation adds a balance check</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/793dade5217bd5751856f7cf0bccd4936286aeab\">https://github.com/code-423n4/2023-05-xeth/commit/793dade5217bd5751856f7cf0bccd4936286aeab</a></td>\n<td>M-04</td>\n<td>change safeApprove to approve</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/aebc3244cbb0deb67f3cdef160b390da27888de7\">https://github.com/code-423n4/2023-05-xeth/commit/aebc3244cbb0deb67f3cdef160b390da27888de7</a></td>\n<td>M-05</td>\n<td>add a totalSupply check</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/630114ea6a3782f2f539b5936c524f8da62d0179\">https://github.com/code-423n4/2023-05-xeth/commit/630114ea6a3782f2f539b5936c524f8da62d0179</a></td>\n<td>M-07</td>\n<td>Partial: add admin controlled slippage values</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4\">https://github.com/code-423n4/2023-05-xeth/commit/1f714868f193cdeb472ec097110901a997d87ec4</a></td>\n<td>M-08</td>\n<td>Add a setRewardTokens function</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/a840dc0b8a1de59a3ea06e0814ea3ce26707bdae\">https://github.com/code-423n4/2023-05-xeth/commit/a840dc0b8a1de59a3ea06e0814ea3ce26707bdae</a></td>\n<td>M-09</td>\n<td>change sendToOperator to sendToOwner</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth/commit/fbb29727ce21857f60c1c94fff43c73b4124a4b4\">https://github.com/code-423n4/2023-05-xeth/commit/fbb29727ce21857f60c1c94fff43c73b4124a4b4</a></td>\n<td>M-10</td>\n<td>Don’t allow minting of 0 shares.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mitigation-review-summary\" style=\"position:relative;\"><a href=\"#mitigation-review-summary\" aria-label=\"mitigation review summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation Review Summary</h2>\n<table>\n<thead>\n<tr>\n<th>Original Issue</th>\n<th>Status</th>\n<th>Full Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/33\">M-02</a></td>\n<td>Mitigation confirmed</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/19\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/3\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/2\">ronnyx2017</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/30\">M-03</a></td>\n<td>Mitigation confirmed</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/5\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/4\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/20\">d3e4</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/29\">M-04</a></td>\n<td>Mitigation confirmed</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/12\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/6\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/21\">d3e4</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/23\">M-05</a></td>\n<td>Not fully mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/13\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/8\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/22\">d3e4</a>, and also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14\">M-07</a></td>\n<td>Partially mitigated</td>\n<td>Reports from ronnyx2017 (<a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/16\">here</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/17\">here</a>) and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/23\">d3e4</a>, and also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/8\">M-08</a></td>\n<td>Mitigation confirmed with comments</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/9\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/24\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/7\">ronnyx2017</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/6\">M-09</a></td>\n<td>Mitigation confirmed</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/14\">ronnyx2017</a>, <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/10\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/25\">d3e4</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/3\">M-10</a></td>\n<td>Not fully mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/15\">ronnyx2017</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/26\">d3e4</a>, and also shared below</td>\n</tr>\n</tbody>\n</table>\n<p><strong>See below for details regarding the three issues that were not fully mitigated.</strong></p>\n<h2 id=\"mitigation-of-m-05-issue-not-fully-mitigated\" style=\"position:relative;\"><a href=\"#mitigation-of-m-05-issue-not-fully-mitigated\" aria-label=\"mitigation of m 05 issue not fully mitigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/22\">Mitigation of M-05: Issue not fully mitigated</a></h2>\n<p><em>Submitted by d3e4, also found by <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/8\">bin2chen</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/13\">ronnyx2017</a></em></p>\n<h3 id=\"original-issue\" style=\"position:relative;\"><a href=\"#original-issue\" aria-label=\"original issue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Original issue</h3>\n<p>M-05: <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/23\">Virgin stake can claim all drops</a></p>\n<p>Fix: <a href=\"https://github.com/code-423n4/2023-05-xeth/commit/aebc3244cbb0deb67f3cdef160b390da27888de7\">https://github.com/code-423n4/2023-05-xeth/commit/aebc3244cbb0deb67f3cdef160b390da27888de7</a></p>\n<p>The issue is, if dripping is enabled when <code>totalSupply() == 0</code>, the entire amount dripped will immediately accrue to the first stake.</p>\n<h3 id=\"mitigation-review---dripping-is-still-implicit-when-totalsupply--0\" style=\"position:relative;\"><a href=\"#mitigation-review---dripping-is-still-implicit-when-totalsupply--0\" aria-label=\"mitigation review   dripping is still implicit when totalsupply  0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation review - dripping is still implicit when <code>totalSupply() == 0</code></h3>\n<p>The drip accrual is now skipped, i.e. <code>_accrueDrip()</code> simply returns when <code>totalSupply() == 0</code>. However, the drip is implicitly accrued at a constant rate per time by actually adding the dripped amount only at discrete points in time. The last point in time of which is <code>lastReport</code>, which is what happens in <code>_accrueDrip()</code>. This means, simply skipping this drip accrual when <code>totalSupply() == 0</code> only defers explicit drip accrual to the next time, but will still drip the same amount because it is calculated from the same <code>lastReport</code>.\nThat is, the drip is not truly suspended until the first stake. The attack will still work because the drip will just accrue on the unstake instead, even when it is unstaked immediately after the first stake.</p>\n<p><strong>Example:</strong></p>\n<ol>\n<li>Start drip at t = 0. <code>lastReport = 0</code> and <code>totalSupply() == 0</code>.</li>\n<li>First stake at t = T. <code>totalSupply() == 0</code> so <code>_accrueDrip()</code> immediately returns, which means that nothing is dripped and that <code>lastReport</code> remains <code>0</code>.</li>\n<li>Unstake at t = T. <code>totalSupply() > 0</code> so <code>T * dripRatePerBlock</code> is dripped, which goes to the unstaker.</li>\n</ol>\n<p>The issue is in step 2, the <code>lastReport</code> remains <code>0</code>. In order to truly not drip, <code>lastReport</code> must be reset without adding any dripped amount. Then the drip is neither implicitly nor explicitly happening unless something has been staked, i.e. <code>totalSupply() > 0</code>.</p>\n<h3 id=\"suggested-mitigation\" style=\"position:relative;\"><a href=\"#suggested-mitigation\" aria-label=\"suggested mitigation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Suggested mitigation</h3>\n<p>This can be achieved by, in <code>_accrueDrip()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">dripEnabled</span><span class=\"mtk1\">) </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">() == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lastReport</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Now, <code>startDrip()</code> enables drip, but the drip only truly starts after the first stake. It also automatically stops when everything is unstaked, i.e. the drip only kicks in when something is staked.</p>\n<hr>\n<h2 id=\"mitigation-of-m-10-issue-not-fully-mitigated\" style=\"position:relative;\"><a href=\"#mitigation-of-m-10-issue-not-fully-mitigated\" aria-label=\"mitigation of m 10 issue not fully mitigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/15\">Mitigation of M-10: Issue not fully mitigated</a></h2>\n<p><em>Submitted by ronnyx2017, also found by <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/26\">d3e4</a></em></p>\n<h3 id=\"original-issue-1\" style=\"position:relative;\"><a href=\"#original-issue-1\" aria-label=\"original issue 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Original issue</h3>\n<p>M-10: <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/3\">First 1 wei deposit can produce lose of user xETH funds in <code>wxETH</code></a></p>\n<h3 id=\"comments\" style=\"position:relative;\"><a href=\"#comments\" aria-label=\"comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comments</h3>\n<p>The issue is a typical inflation attack, that the first staker adds the huge amount of the underlayer tokens after minting shares, and the following stakers can only mint zero share because of division precision error.</p>\n<p>The mitigation uses a regular schedule that check if the minting shares is zero to protect the following staker from losing all their staking tokens. But it doesn’t work on edge condition:</p>\n<ol>\n<li>The initial process is as same as the original issue. The first staker mints only 1 wei share and drip accrued.</li>\n<li>After the mitigation, the second staker can’t deposit any amount less than <code>dripAmount + 1</code>, which will revert with CantMintZeroShares error. But if the second staker deposits <code>2 * (dripAmount + 1) - 1</code> xETH, the staker will only receive 1 wei wxETH because of round-down error. After the second deposit, <code>1 wei wxETH = (3 * (dripAmount + 1) - 1) / 2</code> . And the second staker losses <code>0.5 * (dripAmount + 1) - 0.5</code> xETH.</li>\n</ol>\n<h3 id=\"suggestion\" style=\"position:relative;\"><a href=\"#suggestion\" aria-label=\"suggestion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Suggestion</h3>\n<p>First I need to clarify that I think it’s a low/NC risk issue because it only can loss some dusts. </p>\n<p>If the team really wants to fully fix it as inflation attack, please refer to <a href=\"https://ethereum-magicians.org/t/address-eip-4626-inflation-attacks-with-virtual-shares-and-assets/12677\">https://ethereum-magicians.org/t/address-eip-4626-inflation-attacks-with-virtual-shares-and-assets/12677</a> .</p>\n<p>But I strongly do not recommend such mitigation for this issue because it adds too many entities only for insignificant loss.</p>\n<hr>\n<h2 id=\"lack-of-initialization-and-scope-check-for-slippage\" style=\"position:relative;\"><a href=\"#lack-of-initialization-and-scope-check-for-slippage\" aria-label=\"lack of initialization and scope check for slippage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/16\">Lack of Initialization and scope check for slippage</a></h2>\n<p><em>Submitted by ronnyx2017, also found by <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/23\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/17\">ronnyx2017</a></em></p>\n<p><strong>Severity: QA</strong></p>\n<p><em>Note: related to mitigation for <a href=\"https://github.com/code-423n4/2023-05-xeth-findings/issues/14\">M-07</a>.</em></p>\n<h3 id=\"lines-of-code\" style=\"position:relative;\"><a href=\"#lines-of-code\" aria-label=\"lines of code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lines of code</h3>\n<p><a href=\"https://github.com/code-423n4/2023-05-xeth/blob/add-xeth/src/AMO2.sol#L145\">https://github.com/code-423n4/2023-05-xeth/blob/add-xeth/src/AMO2.sol#L145</a>\n<a href=\"https://github.com/code-423n4/2023-05-xeth/blob/add-xeth/src/AMO2.sol#L430-L442\">https://github.com/code-423n4/2023-05-xeth/blob/add-xeth/src/AMO2.sol#L430-L442</a></p>\n<h3 id=\"vulnerability-details\" style=\"position:relative;\"><a href=\"#vulnerability-details\" aria-label=\"vulnerability details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vulnerability details</h3>\n<ol>\n<li>The <code>upSlippage</code> doesn’t have a default value. So if rebalance is called before the admin <code>setSlippage</code>, the <code>upSlippage</code> is always zero.</li>\n<li>The <code>AMO2.setSlippage</code> function does not implement the scope check in the comments:</li>\n</ol>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">@notice The new maximum slippage must be between 0.06% and 15% (in basis points).</span></span></code></pre>\n<p>It only limits the slippages are not > 100%:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if (newUpSlippage &gt;= BASE_UNIT || newDownSlippage &gt;= BASE_UNIT)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">          revert InvalidSetSlippage();</span></span></code></pre>\n<h3 id=\"assessed-type-9\" style=\"position:relative;\"><a href=\"#assessed-type-9\" aria-label=\"assessed type 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Invalid Validation</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/17#issuecomment-1609093234\">kirk-baird (judge) commented via issue #17</a>:</strong></p>\n<blockquote>\n<p>The development team have scoped M-07 as a partial fix, leaving part of the issue as won’t-fix. This is decided based on the low likelihood of attack and small gains by an attacker exploiting this issue.</p>\n<p>This issue, as well as <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/23\">#23</a> and <a href=\"https://github.com/code-423n4/2023-06-xeth-mitigation-findings/issues/18\">#18</a>, are tagged as unmitigated. This is not strictly accurate as the initial issue is only intended to be partially mitigated. However, there are some worthwhile comments from the wardens explaining the partial fix and some additional details. Thus, I’m going to leave the tag as <code>unmitigated</code> rather than <code>mitigated</code>.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#medium-risk-findings-10\">Medium Risk Findings (10)</a></p>\n<ul>\n<li><a href=\"#m-01-rebalance-amounts-should-be-checked-so-that-updated-balances-falls-within-thresholds\">[M-01] Rebalance amounts should be checked so that updated balances falls within thresholds</a></li>\n<li><a href=\"#m-02-inconsistent-check-for-lp-balance-in-amo\">[M-02] Inconsistent check for LP balance in AMO</a></li>\n<li><a href=\"#m-03-zero-token-transfer-can-cause-a-potential-dos-in-cvxstaker\">[M-03] Zero token transfer can cause a potential DoS in CVXStaker</a></li>\n<li><a href=\"#m-04-unspent-allowance-may-break-functionality-in-amo\">[M-04] Unspent allowance may break functionality in AMO</a></li>\n<li><a href=\"#m-05-virgin-stake-can-claim-all-drops\">[M-05] Virgin stake can claim all drops</a></li>\n<li><a href=\"#m-06-inflation-attack-by-token-transfer\">[M-06] Inflation attack by token transfer</a></li>\n<li><a href=\"#m-07-incorrect-slippage-check-in-the-amo2rebalanceup-can-be-attacked-by-mev\">[M-07] Incorrect slippage check in the AMO2.rebalanceUp can be attacked by MEV</a></li>\n<li><a href=\"#m-08-cvxstakersol-unable-to-process-newly-add-rewardtokens\">[M-08] CVXStaker.sol Unable to process newly add rewardTokens</a></li>\n<li><a href=\"#m-09-withdrawallandunwrap-the-clptoken-transfer-to-amosol-may-be-locked-in-the-contract\">[M-09] withdrawAllAndUnwrap() the clpToken transfer to AMO.sol may be locked in the contract</a></li>\n<li><a href=\"#m-10-first-1-wei-deposit-can-produce-loss-of-user-xeth-funds-in-wxeth\">[M-10] First 1 wei deposit can produce loss of user xETH funds in <code>wxETH</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#low-issue-summary\">Low Issue Summary</a></li>\n<li><a href=\"#l-01-wrong-function-declaration-in-ibaserewardpool-interface\">L-01 Wrong function declaration in IBaseRewardPool interface</a></li>\n<li><a href=\"#l-02-incorrect-function-declaration-in-icurvefactory-interface\">L-02 Incorrect function declaration in ICurveFactory interface</a></li>\n<li><a href=\"#l-03-grantrole-operation-in-setamo-function-may-incorrectly-check-role-access\">L-03 <code>grantRole</code> operation in <code>setAMO</code> function may incorrectly check role access</a></li>\n<li><a href=\"#l-04-potential-accidental-inclusion-of-erc20burnable-in-xeth-token\">L-04 Potential accidental inclusion of ERC20Burnable in xETH token</a></li>\n<li><a href=\"#l-05-addlockedfunds-should-check-driprateperblock-is-not-zero\">L-05 <code>addLockedFunds</code> should check <code>dripRatePerBlock</code> is not zero</a></li>\n<li><a href=\"#l-06-use-ownable2step-instead-of-ownable-for-access-control\">L-06 Use Ownable2Step instead of Ownable for access control</a></li>\n<li><a href=\"#l-07-recovertoken-function-should-restrict-which-tokens-are-allowed-to-be-recovered\">L-07 <code>recoverToken</code> function should restrict which tokens are allowed to be recovered</a></li>\n<li><a href=\"#l-08-setoperator-and-setrewardsrecipient-dont-check-for-address0\">L-08 <code>setOperator</code> and <code>setRewardsRecipient</code> don’t check for <code>address(0)</code></a></li>\n<li><a href=\"#l-09-initialize-rebalanceupcap-and-rebalancedowncap-in-amo-constructor\">L-09 Initialize <code>rebalanceUpCap</code> and <code>rebalanceDownCap</code> in AMO constructor</a></li>\n<li><a href=\"#l-10-validate-argument-in-setrebalanceupthreshold-and-setrebalancedownthreshold\">L-10 Validate argument in <code>setRebalanceUpThreshold</code> and <code>setRebalanceDownThreshold</code></a></li>\n<li><a href=\"#l-11-rebalanceupcap-and-rebalancedowncap-operate-on-different-types-of-value\">L-11 <code>rebalanceUpCap</code> and <code>rebalanceDownCap</code> operate on different types of value</a></li>\n<li><a href=\"#informational-issue-summary\">Informational Issue Summary</a></li>\n<li><a href=\"#info-01-type-of-curve-pool-is-an-important-and-sensible-parameter\">INFO-01 Type of Curve pool is an important and sensible parameter</a></li>\n<li><a href=\"#info-02-several-centralization-risks-introduce-multiple-points-of-failure\">INFO-02 Several centralization risks introduce multiple points of failure</a></li>\n<li><a href=\"#non-critical-issue-summary\">Non Critical Issue Summary</a></li>\n<li><a href=\"#n-01-import-declarations-should-import-specific-symbols\">N-01 Import declarations should import specific symbols</a></li>\n<li><a href=\"#n-02-use-uint256-instead-of-the-uint-alias\">N-02 Use <code>uint256</code> instead of the <code>uint</code> alias</a></li>\n<li><a href=\"#n-03-the-accruedrip-function-can-use-_accruedrip-to-avoid-the-empty-block-implementation\">N-03 The <code>accrueDrip()</code> function can use <code>_accrueDrip()</code> to avoid the empty block implementation</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#xethsol-contract\">xETH.sol contract</a></li>\n<li><a href=\"#wxethsol-contract\">wxETH.sol contract</a></li>\n<li><a href=\"#cvxstakersol-contract\">CVXStaker.sol contract</a></li>\n<li><a href=\"#amo2sol-contract\">AMO2.sol contract</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mitigation-review\">Mitigation Review</a></p>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li><a href=\"#overview-of-changes\">Overview of Changes</a></li>\n<li><a href=\"#mitigation-review-scope\">Mitigation Review Scope</a></li>\n<li><a href=\"#mitigation-review-summary\">Mitigation Review Summary</a></li>\n<li><a href=\"#mitigation-of-m-05-issue-not-fully-mitigated\">Mitigation of M-05: Issue not fully mitigated</a></li>\n<li><a href=\"#mitigation-of-m-10-issue-not-fully-mitigated\">Mitigation of M-10: Issue not fully mitigated</a></li>\n<li><a href=\"#lack-of-initialization-and-scope-check-for-slippage\">Lack of Initialization and scope check for slippage</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}