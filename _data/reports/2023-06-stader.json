{
  "circa": {
    "title": "Stader Labs",
    "sponsor": "Stader Labs",
    "slug": "2023-06-stader",
    "date": "2023-07-19",
    "findings": "https://github.com/code-423n4/2023-06-stader-findings/issues",
    "contest": 249
  },
  "html": "<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<h2 id=\"about-c4\" style=\"position:relative;\"><a href=\"#about-c4\" aria-label=\"about c4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About C4</h2>\n<p>Code4rena (C4) is an open organization consisting of security researchers, auditors, developers, and individuals with domain expertise in smart contracts.</p>\n<p>A C4 audit is an event in which community participants, referred to as Wardens, review, audit, or analyze smart contract logic in exchange for a bounty provided by sponsoring projects.</p>\n<p>During the audit outlined in this document, C4 conducted an analysis of the Stader Labs smart contract system written in Solidity. The audit took place between June 2 - June 9 2023.</p>\n<h2 id=\"wardens\" style=\"position:relative;\"><a href=\"#wardens\" aria-label=\"wardens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wardens</h2>\n<p>77 Wardens contributed reports to the Stader Labs:</p>\n<ol>\n<li>0x70C9</li>\n<li><a href=\"https://twitter.com/0xSmartContract\">0xSmartContract</a></li>\n<li>0xWaitress</li>\n<li>0xackermann</li>\n<li>0xhacksmithh</li>\n<li><a href=\"https://github.com/Aymen1001\">Aymen0909</a></li>\n<li><a href=\"https://twitter.com/bauchibred?s=21&#x26;t=7sv-1qcnwtkdTA81Iog0yQ\">Bauchibred</a></li>\n<li>Breeje</li>\n<li>ChrisTina</li>\n<li><a href=\"https://twitter.com/Conan0x3\">Co0nan</a></li>\n<li><a href=\"https://twitter.com/DadeKuma\">DadeKuma</a></li>\n<li>DavidGiladi</li>\n<li>Deps</li>\n<li>Hama</li>\n<li><a href=\"https://twitter.com/0xJCN\">JCN</a></li>\n<li>JGcarv</li>\n<li>Josiah</li>\n<li><a href=\"https://twitter.com/CrystAlline_K42\">K42</a></li>\n<li>LaScaloneta (<a href=\"https://github.com/nicobevilacqua\">nicobevi</a>, <a href=\"https://twitter.com/0xJuancito\">juancito</a> and 0x4non)</li>\n<li>Madalad</li>\n<li>MohammedRizwan</li>\n<li>NoamYakov</li>\n<li>Rageur</li>\n<li>Raihan</li>\n<li>RaymondFam</li>\n<li><a href=\"https://twitter.com/Rolezn\">Rolezn</a></li>\n<li>SAAJ</li>\n<li>SAQ</li>\n<li>SM3_SS</li>\n<li><a href=\"https://www.linkedin.com/in/sathishkumar-p-26069915a\">Sathish9098</a></li>\n<li>SovaSlava</li>\n<li>T1MOH</li>\n<li><a href=\"https://twitter.com/meidhiwirara\">Tomio</a></li>\n<li>bigtone</li>\n<li><a href=\"https://twitter.com/bin2chen\">bin2chen</a></li>\n<li><a href=\"https://twitter.com/0xbroccolirob\">broccolirob</a></li>\n<li>btk</li>\n<li><a href=\"https://twitter.com/c3ph_\">c3phas</a></li>\n<li><a href=\"https://twitter.com/CatellaTech\">catellatech</a></li>\n<li>djxploit</li>\n<li>dontonka</li>\n<li>dwward3n</li>\n<li>erictee</li>\n<li>ernestognw</li>\n<li>etherhood</li>\n<li><a href=\"https://twitter.com/father0fBl0cks\">fatherOfBlocks</a></li>\n<li>hake</li>\n<li>hals</li>\n<li><a href=\"https://twitter.com/hunt3r_w3b\">hunter_w3b</a></li>\n<li>jaraxxus</li>\n<li><a href=\"twitter.com/josephdara\">josephdara</a></li>\n<li>koxuan</li>\n<li>ksk2345</li>\n<li>kutugu</li>\n<li><a href=\"https://github.com/martin-petrov03\">martin</a></li>\n<li>matrix_0wl</li>\n<li>mgf15</li>\n<li><a href=\"https://www.linkedin.com/in/naman-agrawal1778/\">naman1778</a></li>\n<li>niser93</li>\n<li>peanuts</li>\n<li>petrichor</li>\n<li><a href=\"https://www.linkedin.com/in/piyush-shukla-44b7a11b1/\">piyushshukla</a></li>\n<li>ravikiranweb3</li>\n<li>rvierdiiev</li>\n<li><a href=\"https://medium.com/@saneryee-studio\">saneryee</a></li>\n<li>sces60107</li>\n<li>sebghatullah</li>\n<li>shamsulhaq123</li>\n<li>silviaxyz</li>\n<li>solsaver</li>\n<li>tallo</li>\n<li>trustOne</li>\n<li><a href=\"https://twitter.com/cvetanovv0\">tsvetanovv</a></li>\n<li><a href=\"https://www.linkedin.com/in/victor-okafor-blockchaindev/\">turvy_fuzz</a></li>\n<li>whimints</li>\n</ol>\n<p>This audit was judged by Picodes.</p>\n<p>Final report assembled by thebrittfactor.</p>\n<h1 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>The C4 analysis yielded an aggregated total of 15 unique vulnerabilities. Of these vulnerabilities, 1 received a risk rating in the category of HIGH severity and 14 received a risk rating in the category of MEDIUM severity.</p>\n<p>Additionally, C4 analysis included 24 reports detailing issues with a risk rating of LOW severity or non-critical. There were also 28 reports recommending gas optimizations.</p>\n<p>All of the issues presented here are linked back to their original finding.</p>\n<h1 id=\"scope\" style=\"position:relative;\"><a href=\"#scope\" aria-label=\"scope permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope</h1>\n<p>The code under review can be found within the <a href=\"https://github.com/code-423n4/2023-06-stader\">C4 Stader Labs repository</a>, and is composed of 23 smart contracts written in the Solidity programming language and includes 4343 lines of Solidity code.</p>\n<h1 id=\"severity-criteria\" style=\"position:relative;\"><a href=\"#severity-criteria\" aria-label=\"severity criteria permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Severity Criteria</h1>\n<p>C4 assesses the severity of disclosed vulnerabilities based on three primary risk categories: high, medium, and low/non-critical.</p>\n<p>High-level considerations for vulnerabilities span the following key areas when conducting assessments:</p>\n<ul>\n<li>Malicious Input Handling</li>\n<li>Escalation of privileges</li>\n<li>Arithmetic</li>\n<li>Gas use</li>\n</ul>\n<p>For more information regarding the severity criteria referenced throughout the submission review process, please refer to the documentation provided on <a href=\"https://code4rena.com\">the C4 website</a>, specifically our section on <a href=\"https://docs.code4rena.com/awarding/judging-criteria/severity-categorization\">Severity Categorization</a>.</p>\n<h1 id=\"high-risk-findings-1\" style=\"position:relative;\"><a href=\"#high-risk-findings-1\" aria-label=\"high risk findings 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>High Risk Findings (1)</h1>\n<h2 id=\"h-01-vaultproxy-implementation-can-be-initialized-by-anyone-and-self-destructed\" style=\"position:relative;\"><a href=\"#h-01-vaultproxy-implementation-can-be-initialized-by-anyone-and-self-destructed\" aria-label=\"h 01 vaultproxy implementation can be initialized by anyone and self destructed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/418\">[H-01] <code>VaultProxy</code> implementation can be initialized by anyone and self-destructed</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/418\">broccolirob</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/349\">dwward3n</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/308\">hals</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/167\">bin2chen</a>, and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/66\">0x70C9</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/VaultProxy.sol#L20-L36\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/VaultProxy.sol#L20-L36</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/VaultProxy.sol#L41-L50\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/VaultProxy.sol#L41-L50</a></p>\n<p>When the <code>VaultFactory</code> contract is deployed and initialized, the <code>initialise</code> method on the newly created <code>VaultProxy</code> implementation contract is never called. As such, anyone can call that method and pass in whatever values they want as arguments. One important argument is the <code>_staderConfig</code> address, which controls where the <code>fallback</code> function will direct <code>delegatecall</code> operations. If an attacker passes in a contract that calls <code>selfdestruct</code>, it will be run in the context of the <code>VaultProxy</code> implementation contract and will erase all code from that address. Since the clones from the <code>VaultProxy</code> contract merely delegate calls to the implementation address, all subsequent calls for all created vaults from that implementation will be treated like an EOA and return <code>true</code>, even though calls to functions on that proxy were never executed.</p>\n<h3 id=\"proof-of-concept\" style=\"position:relative;\"><a href=\"#proof-of-concept\" aria-label=\"proof of concept permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ul>\n<li>First, an attacker deploys a contract called <code>AttackContract</code> that calls <code>selfdestruct</code> in its <code>fallback</code> function.</li>\n</ul>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">contract AttackContract {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function getValidatorWithdrawalVaultImplementation() public view returns(address) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        return address(this);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function getNodeELRewardVaultImplementation() public view returns(address) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\treturn address(this);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    fallback(bytes calldata _input) external payable returns(bytes memory _output) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\tselfdestruct(address(0));</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<ul>\n<li>The attacker calls the <code>initialise</code> method on the <code>VaultProxy</code> implementation contract. That address is stored in the <code>vaultProxyImplementation</code> variable on the <code>VaultFactory</code> contract. The attacker passes in the address of <code>AttackContract</code> as the <code>_staderConfig</code> argument for the <code>initialise</code> function.</li>\n<li>The attacker then calls a non-existent function on the <code>VaultProxy</code> implementation contract, which triggers it’s <code>fallback</code> function. The <code>fallback</code> function calls <code>staderConfig.getNodeELRewardVaultImplementation()</code>, and since <code>staderConfig</code> is set the <code>AttackContract</code> address, it returns the address of the <code>AttackContract</code>. <code>delegatecall</code> runs the fallback function of <code>AttackContract</code> in its own execution environment. <code>selfdestruct</code> is called in the execution environment of the <code>VaultProxy</code> implementation, which erases the code at that address.</li>\n<li>All cloned copies of the <code>VaultProxy</code> implementation contract are now forwarding calls to an implementation address that has no code stored at it. These calls will be treated like calls to an EOA and return <code>true</code> for <code>success</code>.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps\" aria-label=\"recommended mitigation steps permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Prevent the <code>initialise</code> function from being called on the <code>VaultProxy</code> implementation contract by inheriting from OpenZeppelin’s <code>Initializable</code> contract, like the system is doing in other contracts. Call the <code>_disableInitializers</code> function in the constructor and protect <code>initialise</code> with the <code>initializer</code> modifier. Alternatively, the <code>initialise</code> function can be called from the <code>initialize</code> function of the <code>VaultFactory</code> contract when the <code>VaultProxy</code> contract is instantiated.</p>\n<h3 id=\"assessed-type\" style=\"position:relative;\"><a href=\"#assessed-type\" aria-label=\"assessed type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Access Control</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/418#issuecomment-1618129945\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping High severity. This seems exploitable to lock funds with no cost, as the fallback function is payable.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/418#issuecomment-1619515745\">sanjay-staderlabs (Stader) confirmed</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/418#issuecomment-1633520116\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed in the code.</p>\n</blockquote>\n<hr>\n<h1 id=\"medium-risk-findings-14\" style=\"position:relative;\"><a href=\"#medium-risk-findings-14\" aria-label=\"medium risk findings 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Medium Risk Findings (14)</h1>\n<h2 id=\"m-01-risk-of-losing-admin-access-if-updateadmin-set-with-same-current-admin-address\" style=\"position:relative;\"><a href=\"#m-01-risk-of-losing-admin-access-if-updateadmin-set-with-same-current-admin-address\" aria-label=\"m 01 risk of losing admin access if updateadmin set with same current admin address permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390\">[M-01] Risk of losing admin access if `updateAdmin<code></code> set with same current admin address</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390\">ksk2345</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/252\">ChrisTina</a> and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/11\">NoamYakov</a></em></p>\n<p>Current admin will lose <code>DEFAULT_ADMIN_ROLE</code> role if <code>updateAdmin</code> issued with same address.</p>\n<p>There is a possibility of loss of protocol admin access to the critical <code>StaderConfig.sol</code> contract, if <code>updateAdmin()</code> is set with same current admin address by mistake.</p>\n<h3 id=\"proof-of-concept-1\" style=\"position:relative;\"><a href=\"#proof-of-concept-1\" aria-label=\"proof of concept 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Contract : StaderConfig.sol.<br>\nFunction : function <code>updateAdmin(address _admin)</code>.</p>\n<p>Using Brownie python automation framework commands in below examples:</p>\n<ul>\n<li>Step #1 After initialization, admin-A is the admin which has the <code>DEFAULT_ADMIN_ROLE</code>.</li>\n<li>Step #2 update new Admin:<br>\n<code>StaderConfig.updateAdmin(admin-B, {'from':admin-A})</code>.<br>\nThe value of <code>StaderConfig.getAdmin()</code> is admin-B.<br></li>\n<li>Step #3 admin-B updates admin to itself again:<br>\n<code>StaderConfig.updateAdmin(admin-B, {'from':admin-B})</code>.<br>\nThe value of <code>StaderConfig.getAdmin()</code> is admin-B, but the <code>DEFAULT_ADMIN_ROLE</code> is revoked due to <code>_revokeRole(DEFAULT_ADMIN_ROLE, oldAdmin)</code>.<br>\nNow the protocol admin control is lost for StaderConfig contract.</li>\n</ul>\n<h3 id=\"recommended-mitigation-steps-1\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-1\" aria-label=\"recommended mitigation steps 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Reference: <a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L177\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L177</a><br>\nIn the <code>updateAdmin()</code> function, add a check for <code>oldAdmin != _admin</code>, like below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">    address oldAdmin = accountsMap[ADMIN];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">+   require(oldAdmin != _admin, &quot;Already set to admin&quot;);</span></span></code></pre>\n<h3 id=\"assessed-type-1\" style=\"position:relative;\"><a href=\"#assessed-type-1\" aria-label=\"assessed type 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Access Control</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390#issuecomment-1585665576\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390#issuecomment-1600790493\">manoj9april (Stader) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Sure,\nwe will fix this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390#issuecomment-1619667404\">rvierdiyev (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Isn’t this same as just transferring roles to the <code>address 0</code> or any other address? Why would the protocol need to change roles to same address? Isn’t this an informative issue?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390#issuecomment-1620201044\">Co0nan (warden) commented</a>:</strong></p>\n<blockquote>\n<p>I believe this falls under the “Admin Privilege” <a href=\"https://github.com/code-423n4/2023-01-drips-findings/discussions/327#discussioncomment-5099558\">category</a>, as such an issue should be marked as QA based on C4 docs and how similar issues got judged.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390#issuecomment-1620824488\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@rvierdiyev and @Co0nan - I respectfully disagree:</p>\n<ul>\n<li>This is not an occurrence of “Admin Privilege”, which are issues where a privileged role uses their position to grief the protocol. Here, there is clearly a slight bug in the code.</li>\n<li>We could argue that transferring the role to the same address is very unlikely but it is not an error in itself. The function clearly does not behave as intended in this case.</li>\n<li>If you combine this with the fact that in <code>initialize</code> there is no call to <code>setAccount(ADMIN, _admin);</code> see <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/133\">here</a>. It becomes actually likely that the admin calls this function for themselves.</li>\n</ul>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390#issuecomment-1620825512\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>@Co0nan - for information, “Admin Privilege” aren’t always QA, it depends on the context and is up to the judge. See <a href=\"https://github.com/code-423n4/org/issues/54\">here</a> and <a href=\"https://github.com/code-423n4/org/issues/59\">here</a> for the ongoing discussion about this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390#issuecomment-1620833254\">Co0nan (warden) commented</a>:</strong></p>\n<blockquote>\n<blockquote>\n<p>Here there is clearly a slight bug in the code.</p>\n</blockquote>\n<p>@Picodes - This bug occurs from <code>Admin</code> as they pass an address twice. I have to stand with @rvierdiyev. This is likely due to missing <code>Zero address Check</code> on <code>onlyOwner</code> functions.</p>\n<p>However, it’s up to you as the Judge and I respect your final conclusion.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/390#issuecomment-1633520349\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed in the code.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-02-pauseunpause-functionalities-not-implemented-in-many-pausable-contracts\" style=\"position:relative;\"><a href=\"#m-02-pauseunpause-functionalities-not-implemented-in-many-pausable-contracts\" aria-label=\"m 02 pauseunpause functionalities not implemented in many pausable contracts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/383\">[M-02] <code>pause/unpause</code> functionalities not implemented in many pausable contracts</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/383\">Aymen0909</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/315\">LaScaloneta</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/227\">tallo</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/205\">martin</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/168\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/159\">jaraxxus</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/145\">josephdara</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/62\">djxploit</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/55\">SovaSlava</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/54\">SovaSlava</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/53\">SovaSlava</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/40\">ChrisTina</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/18\">T1MOH</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/13\">NoamYakov</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/12\">NoamYakov</a>, and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/4\">Deps</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L21\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L21</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L14\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L14</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L17\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L17</a><br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/OperatorRewardsCollector.sol#L16\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/OperatorRewardsCollector.sol#L16</a></p>\n<p>The following contracts: <code>SocializingPool</code>, <code>StaderOracle</code>, <code>OperatorRewardsCollector</code> and <code>Auction</code> are supposed to be pausable (as they all inherit from <code>PausableUpgradeable</code>), but they don’t implement the external <code>pause/unpause</code> functionalities which means it will never be possible to pause them.</p>\n<h3 id=\"proof-of-concept-2\" style=\"position:relative;\"><a href=\"#proof-of-concept-2\" aria-label=\"proof of concept 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>All the following contracts <code>SocializingPool</code>, <code>StaderOracle</code>, <code>OperatorRewardsCollector</code> and <code>Auction</code> inherit from the openzeppelin <code>PausableUpgradeable</code> extension which means that they contain internal functions <code>_pause</code> and <code>_unpause</code>.</p>\n<p>Because those functions are internal, the contract must implement two other public/external <code>pause</code> and <code>unpause</code> functions to allow the manager to pause and unpause the contracts when necessary. None of the aforementioned contracts implement those functions, which means even if those contracts are supposed to be pausable (and have the <code>pause/unpause</code> functionalities), none of them can be paused.</p>\n<h3 id=\"recommended-mitigation-steps-2\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-2\" aria-label=\"recommended mitigation steps 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add public/external <code>pause</code> and <code>unpause</code> functions in the aforementioned contracts to allow them to be pausable, this can be done as in the <code>UserWithdrawalManager</code> contract. For example:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Triggers stopped state.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * Contract must not be paused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">pause</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">onlyManagerRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_pause</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">/**</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * </span><span class=\"mtk4\">@dev</span><span class=\"mtk3\"> Returns to normal state.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> * Contract must be paused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"> */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">unpause</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DEFAULT_ADMIN_ROLE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">_unpause</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/383#issuecomment-1591842271\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/383#issuecomment-1598354461\">manoj9april (Stader) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Thanks!\nWe will fix this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/383#issuecomment-1633520592\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-03-stader-operator-is-a-single-point-of-failure\" style=\"position:relative;\"><a href=\"#m-03-stader-operator-is-a-single-point-of-failure\" aria-label=\"m 03 stader operator is a single point of failure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/344\">[M-03] Stader OPERATOR is a single point of failure</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/344\">JGcarv</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L183\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L183</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L254\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L254</a></p>\n<p>The OPERATOR role holds a lot of power within the system, which can compromise both the system integrity and it’s permission-less nature.</p>\n<h3 id=\"proof-of-concept-3\" style=\"position:relative;\"><a href=\"#proof-of-concept-3\" aria-label=\"proof of concept 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The OPERATOR key is responsible for confirming the marking of each validator submitted key as either valid or invalid, without any assurance to validators.</p>\n<ol>\n<li>Arbitrary negation of participation makes permissionless pool permissioned.</li>\n</ol>\n<p>The documentation states:</p>\n<blockquote>\n<p>Any validator in permissionless pool can run a node with 4 ETH + 0.4 ETH worth of SD token.</p>\n</blockquote>\n<p>Which is not strictly true, since any participant in the system must be vetted by the OPERATOR, which can arbitrarily mark as invalid or frontrun the key without the need to provide justification or having an appeal system. Alternatively, the OPERATOR can simply ignore the added key and never mark it as <code>ready to deposit</code>.</p>\n<p>Therefore, the pool can’t be considered permissionless, since participants must rely on the benevolence of the OPERATOR to participate.</p>\n<ol start=\"2\">\n<li>Authorization of invalid keys</li>\n</ol>\n<p>There is no way for the smart contract system to check or confirm that a given public key is really legit. This could generate income to ETHx holders, so the system relies solely on the OPERATOR to make that distinction, rendering the system vulnerable in case of a comprised wallet.</p>\n<h3 id=\"recommended-mitigation-steps-3\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-3\" aria-label=\"recommended mitigation steps 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>There is no simple fix for the issue, but at minimum, the protocol shouldn’t be advertised as permissionless.</p>\n<h3 id=\"assessed-type-2\" style=\"position:relative;\"><a href=\"#assessed-type-2\" aria-label=\"assessed type 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Rug-Pull</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/344#issuecomment-1591845515\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/344#issuecomment-1598329047\">manoj9april (Stader) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Thank you for pointing it out.\nWe will move this logic to oracle.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/344#issuecomment-1616567202\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping Medium severity considering this could be an instance of “function of the protocol or its availability could be impacted”.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/344#issuecomment-1633520716\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-04-updatepooladdress-functions-always-revert-when-updating-existing-poolid\" style=\"position:relative;\"><a href=\"#m-04-updatepooladdress-functions-always-revert-when-updating-existing-poolid\" aria-label=\"m 04 updatepooladdress functions always revert when updating existing poolid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/341\">[M-04] <code>updatePoolAddress</code> functions always revert when updating existing <code>poolId</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/341\">Aymen0909</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/290\">trustOne</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/169\">bin2chen</a>, and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/80\">T1MOH</a></em></p>\n<p>The purpose of the <code>updatePoolAddress</code> function is to update the pool address associated with an existing <code>poolId</code>. However, due to its internal invocation of the <code>verifyNewPool</code> function, the <code>updatePoolAddress</code> function always reverts. This occurs because the <code>verifyNewPool</code> function itself reverts when the specified <code>poolId</code> already exists. Consequently, it is not possible to update the pool address for an existing <code>poolId</code>.</p>\n<h3 id=\"proof-of-concept-4\" style=\"position:relative;\"><a href=\"#proof-of-concept-4\" aria-label=\"proof of concept 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The issue occurs in the <code>updatePoolAddress</code> function below :</p>\n<p>File: PoolUtils.sol <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PoolUtils.sol#L55-L65\">Line 55-65</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updatePoolAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newPoolAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyExistingPoolId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DEFAULT_ADMIN_ROLE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">checkNonZeroAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newPoolAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit always revert on exsiting poolId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">verifyNewPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_newPoolAddress</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">poolAddressById</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_newPoolAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PoolAddressUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_newPoolAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>As it can be seen from the code above, the <code>updatePoolAddress</code> function contains the <code>onlyExistingPoolId</code> modifier which means it can only be called for updating the pool address of an already exiting <code>poolId</code>.</p>\n<p>Before updating the pool address, the <code>updatePoolAddress</code> function calls the <code>verifyNewPool</code> function below:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyNewPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">INodeRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IStaderPoolBase</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getNodeRegistry</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">POOL_ID</span><span class=\"mtk1\">() != </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\"> ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">isExistingPoolId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ExistingOrMismatchingPoolId</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>It’s clear that the function reverts when the <code>poolId</code> already exists meaning <code>isExistingPoolId(_poolId) == true</code>.</p>\n<p>To summarize, the <code>updatePoolAddress</code> function reverts when the <code>poolId</code> does not exist and the <code>verifyNewPool</code> function reverts when the <code>poolId</code> exists. These two functions work on opposite conditions, which means when the <code>verifyNewPool</code> function is called inside the <code>updatePoolAddress</code> function it will automatically revert and the pool address of already existing <code>poolId</code> can never be updated.</p>\n<h3 id=\"recommended-mitigation-steps-4\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-4\" aria-label=\"recommended mitigation steps 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Remove the <code>verifyNewPool</code> call inside the <code>updatePoolAddress</code> function and replace it with the following:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updatePoolAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_newPoolAddress</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyExistingPoolId</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">onlyRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">DEFAULT_ADMIN_ROLE</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">checkNonZeroAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_newPoolAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// @audit revert only when mismatch in poolId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">INodeRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk11\">IStaderPoolBase</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolAddress</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getNodeRegistry</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">POOL_ID</span><span class=\"mtk1\">() != </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MismatchingPoolId</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">poolAddressById</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">_newPoolAddress</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">PoolAddressUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_newPoolAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"assessed-type-3\" style=\"position:relative;\"><a href=\"#assessed-type-3\" aria-label=\"assessed type 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Error</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/341#issuecomment-1585685615\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/341#issuecomment-1598325548\">manoj9april (Stader) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Thanks!\nWe will fix this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/341#issuecomment-1633520863\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-05-staderoracle---strict-equal-can-cause-no-consensus-if-trusted-nodes-are-removed-before-consensus\" style=\"position:relative;\"><a href=\"#m-05-staderoracle---strict-equal-can-cause-no-consensus-if-trusted-nodes-are-removed-before-consensus\" aria-label=\"m 05 staderoracle   strict equal can cause no consensus if trusted nodes are removed before consensus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/321\">[M-05] <code>StaderOracle</code> - Strict equal can cause no consensus if trusted nodes are removed before consensus</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/321\">dwward3n</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L148\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L148</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L290\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L290</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            submissionCount == trustedNodesCount / 2 + 1 &amp;&amp;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            _exchangeRate.reportingBlockNumber &gt; exchangeRate.reportingBlockNumber</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        ) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            updateWithInLimitER(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                _exchangeRate.totalETHBalance,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                _exchangeRate.totalETHXSupply,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">                _exchangeRate.reportingBlockNumber</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span></code></pre>\n<p>In <code>submitExchangeRateData</code>, consensus is reached if <code>submissionCount</code> is strictly equal to desired number. However, <code>trustNodesCount</code> can be decreased and this condition can be never met.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">        if ((submissionCount == (2 * trustedNodesCount) / 3 + 1)) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            lastReportedSDPriceData = _sdPriceData;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            lastReportedSDPriceData.sdPriceInETH = getMedianValue(sdPrices);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            delete sdPrices;</span></span></code></pre>\n<p>In <code>submitSDPrice</code>, if this case happens, <code>sdPrices</code> doesn’t get deleted and it will affect the next submission batch’s price.</p>\n<h3 id=\"proof-of-concept-5\" style=\"position:relative;\"><a href=\"#proof-of-concept-5\" aria-label=\"proof of concept 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the above snippet, let’s assume <code>trustedNodesCount</code> = 10, <code>submissionCount</code> = 5.<br>\nThe condition doesn’t meet for now (5 != 10/2+1). Then <code>trustedNodesCount</code> decreases to 9.<br>\nNext time when a node submits, <code>trustedNodesCount</code> = 9, <code>submissionCount</code> = 6.<br>\nThen the condition cannot be met since (6 != 9/2+1).</p>\n<h3 id=\"recommended-mitigation-steps-5\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-5\" aria-label=\"recommended mitigation steps 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Replace strict equal with equal or greater than. Or replace it with greater than and decrease the right side.</p>\n<p>Not sure about adding cooldown for add/remove trusted nodes.</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/321#issuecomment-1598308197\">manoj9april (Stader) confirmed and commented:</a></strong></p>\n<blockquote>\n<p>Thanks, we will fix this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/321#issuecomment-1616579131\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping medium severity because of the sponsor’s label, but the justification of why it qualifies for Med and what the impacts of the bug are is insufficient.</p>\n<p>For most functions, it seems the <code>submissionCount</code> depends on the <code>reportingBlockNumber</code> so the impact would only be one period where the oracle couldn’t be updated, which doesn’t qualify without additional justification. For example, for <code>submitSocializingRewardsMerkleRoot</code> and <code>submitMissedAttestationPenalties</code>, the impact may be more important.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/321#issuecomment-1633521001\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-06-protocol-will-not-benefit-from-slashing-mechanism-when-remaining-penalty-bigger-than-minthreshold\" style=\"position:relative;\"><a href=\"#m-06-protocol-will-not-benefit-from-slashing-mechanism-when-remaining-penalty-bigger-than-minthreshold\" aria-label=\"m 06 protocol will not benefit from slashing mechanism when remaining penalty bigger than minthreshold permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/292\">[M-06] Protocol will not benefit from slashing mechanism when remaining penalty bigger than <code>minThreshold</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/292\">Co0nan</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/165\">Co0nan</a> and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/68\">0xWaitress</a></em></p>\n<p>During the withdraw process, the function <code>settleFunds()</code> get called. This function first calculates the <code>operatorShare</code> and the <code>penaltyAmount</code>. If the <code>operatorShare</code> &#x3C; <code>penaltyAmount</code>, the function calls <code>slashValidatorSD</code> in order to slash the operator and start new auction to cover the loss.</p>\n<p>The issue here, is <code>slashValidatorSD</code> determines the amount to be reduced based on the smallest value between operators current SD balance and the <code>poolThreshold.minThreshold</code>. In this case, where the <code>operatorShare</code>(1ETH) is too small than the <code>penaltyAmount</code>(10ETH) the system should reduce an equivalent amount to cover the remaining ETH (<code>9ETH_</code>). However, the function choose the smallest value which could end up being 4e17. In such cases, the protocol will not favor because starting a new auction with SD amount = 4e17 will not end up with a 9ETH in exchange.</p>\n<h3 id=\"proof-of-concept-6\" style=\"position:relative;\"><a href=\"#proof-of-concept-6\" aria-label=\"proof of concept 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<ol>\n<li>Implementation of <code>settleFunds</code>:</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L54\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L54</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function settleFunds() external override {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint8 poolId = VaultProxy(payable(address(this))).poolId();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 validatorId = VaultProxy(payable(address(this))).id();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IStaderConfig staderConfig = VaultProxy(payable(address(this))).staderConfig();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address nodeRegistry = IPoolUtils(staderConfig.getPoolUtils()).getNodeRegistry(poolId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (msg.sender != nodeRegistry) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            revert CallerNotNodeRegistryContract();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        (uint256 userSharePrelim, uint256 operatorShare, uint256 protocolShare) = calculateValidatorWithdrawalShare();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 penaltyAmount = getUpdatedPenaltyAmount(poolId, validatorId, staderConfig);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (operatorShare &lt; penaltyAmount) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            ISDCollateral(staderConfig.getSDCollateral()).slashValidatorSD(validatorId, poolId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            penaltyAmount = operatorShare;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 userShare = userSharePrelim + penaltyAmount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        operatorShare = operatorShare - penaltyAmount;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        // Final settlement</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        vaultSettleStatus = true;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IPenalty(staderConfig.getPenaltyContract()).markValidatorSettled(poolId, validatorId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IStaderStakePoolManager(staderConfig.getStakePoolManager()).receiveWithdrawVaultUserShare{value: userShare}();</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        UtilLib.sendValue(payable(staderConfig.getStaderTreasury()), protocolShare);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IOperatorRewardsCollector(staderConfig.getOperatorRewardsCollector()).depositFor{value: operatorShare}(</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            getOperatorAddress(poolId, validatorId, staderConfig)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        );</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit SettledFunds(userShare, operatorShare, protocolShare);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<ol start=\"2\">\n<li>Let’s suppose <code>operatorShare</code> is 1 ETH, <code>penaltyAmount</code> is 5ETH. In this case, the function will enter the <code>If</code> condition on L67.</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L67\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L67</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"> ISDCollateral(staderConfig.getSDCollateral()).slashValidatorSD(validatorId, poolId);</span></span></code></pre>\n<ol start=\"3\">\n<li>Implementation of <code>slashValidatorSD</code> and <code>slashSD</code>.</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SDCollateral.sol#L78\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SDCollateral.sol#L78</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">function slashValidatorSD(uint256 _validatorId, uint8 _poolId) external override nonReentrant {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        address operator = UtilLib.getOperatorForValidSender(_poolId, _validatorId, msg.sender, staderConfig);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        isPoolThresholdValid(_poolId);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        PoolThresholdInfo storage poolThreshold = poolThresholdbyPoolId[_poolId];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 sdToSlash = convertETHToSD(poolThreshold.minThreshold);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        slashSD(operator, sdToSlash);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    /// @notice used to slash operator SD, incase of operator default</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    /// @dev do provide SD approval to auction contract using `maxApproveSD()`</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    /// @param _operator which operator SD collateral to slash</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    /// @param _sdToSlash amount of SD to slash</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    function slashSD(address _operator, uint256 _sdToSlash) internal {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 sdBalance = operatorSDBalance[_operator];</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        uint256 sdSlashed = Math.min(_sdToSlash, sdBalance);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        if (sdSlashed == 0) {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">            return;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        operatorSDBalance[_operator] -= sdSlashed;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IAuction(staderConfig.getAuctionContract()).createLot(sdSlashed);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        emit SDSlashed(_operator, staderConfig.getAuctionContract(), sdSlashed);</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    }</span></span></code></pre>\n<ol start=\"4\">\n<li>As you can see, on line 82, the function gets the <code>minThreshold</code> and passes it to <code>slashSD</code>.</li>\n<li>On line 92, it selects the smallest value between the current balance of the operator and the <code>minThreshold</code>:</li>\n</ol>\n<!---->\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">uint256 sdSlashed = Math.min(_sdToSlash, sdBalance);</span></span></code></pre>\n<ol start=\"6\">\n<li>If the <code>minThreshold</code> &#x3C; remaining penalty, which is 4 ETH in this case, the function simply ignores that and reduces the operator amount with ”<code>minThreshold</code>” instead. In this case, it’s &#x3C; current SD balance.</li>\n<li>The function then starts new auction with the smallest value.</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SDCollateral.sol#L97\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SDCollateral.sol#L97</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">operatorSDBalance[_operator] -= sdSlashed;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">        IAuction(staderConfig.getAuctionContract()).createLot(sdSlashed);</span></span></code></pre>\n<p>Despite how much the user should pay, the auction will start with the min value and the <code>penaltyAmount</code> will not be paid in full.</p>\n<h3 id=\"recommended-mitigation-steps-6\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-6\" aria-label=\"recommended mitigation steps 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>The function shouldn’t use <code>minThreshold</code>. It should catch the remaining penalty (difference between <code>operatorShare</code> and <code>penaltyAmount</code>) and use it to calculate the required SD amount to be slashed.</p>\n<h3 id=\"assessed-type-4\" style=\"position:relative;\"><a href=\"#assessed-type-4\" aria-label=\"assessed type 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Context</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/292#issuecomment-1598299058\">manoj9april (Stader) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>This update is slated for a future release. </p>\n</blockquote>\n<hr>\n<h2 id=\"m-07-mev-bots-can-win-all-the-auctions-when-auction-is-paused-\" style=\"position:relative;\"><a href=\"#m-07-mev-bots-can-win-all-the-auctions-when-auction-is-paused-\" aria-label=\"m 07 mev bots can win all the auctions when auction is paused  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/226\">[M-07] MEV bots can win all the auctions when <code>Auction</code> is paused </a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/226\">DadeKuma</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/57\">SovaSlava</a></em></p>\n<p>MEV bots may bid on all the ongoing auctions before <code>Auction</code> is paused by frontrunning it with the <code>addBid</code> function.</p>\n<p>This can lead to bots winning all the <code>auctions</code> for a fraction of their price. Especially <code>auctions</code> that are almost ended, as no one is able to bid until the contract is unpaused.</p>\n<h3 id=\"proof-of-concept-7\" style=\"position:relative;\"><a href=\"#proof-of-concept-7\" aria-label=\"proof of concept 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>No one will be able to bid when the contract is paused, but bots can simply front-run the <code>pause</code> by looking at the mempool:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addBid</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lotId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk3\">// reject payments of 0 ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InSufficientETH</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk12\">LotItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lotId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endBlock</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AuctionEnded</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bids</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] + </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">bidIncrement</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InSufficientBid</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bids</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BidPlaced</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lotId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t}</span></span></span></code></pre>\n<p><strong>A word about severity</strong>; the contract extends <code>PausableUpgradeable</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Auction</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">IAuction</span><span class=\"mtk1\">, </span><span class=\"mtk12\">Initializable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">AccessControlUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">PausableUpgradeable</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ReentrancyGuardUpgradeable</span></span></span></code></pre>\n<p>Also, it has several functions that have the <code>whenNotPaused</code> modifier:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createLot</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sdAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addBid</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lotId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span></span></span></code></pre>\n<p>However, it doesn’t have any <code>pause</code>/<code>unpause</code> functions that are <code>external</code>/<code>public</code>, as they have <code>internal</code> visibility by default in <code>PausableUpgradeable</code>; as such, the contract can’t be paused with the current implementation.</p>\n<p>However, this may change in the future as the contract is upgradeable, so I still consider this issue valid.</p>\n<h3 id=\"recommended-mitigation-steps-7\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-7\" aria-label=\"recommended mitigation steps 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Consider removing the <code>whenNotPaused</code> modifier from <code>addBid</code>, so ongoing auctions may be ended even when the contract is paused.</p>\n<h3 id=\"assessed-type-5\" style=\"position:relative;\"><a href=\"#assessed-type-5\" aria-label=\"assessed type 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>MEV</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/226#issuecomment-1598256301\">manoj9april (Stader) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>Bots can win the auction by frontrunning if that ensures a better price than the current bid (which it does)\nAlso this is an duplicate issue of #70 </p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/226#issuecomment-1616970652\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>I don’t think this is a duplicate of #70. This issue is specifically about the fact that pausing an auction decreases its time and that MEV bots/the admin could benefit from this. It is a valid issue,  in the sense that nothing is done to prevent <code>auctions</code> from being closed by a call to <code>pause</code>, which would break the system.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/226#issuecomment-1621392677\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>Hi @Picodes -  thanks for pointing it out. It turns out for the mitigation of issue <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/383\">383</a>, we have removed <code>PausableUpgradeable</code> from the <code>Auction</code> contract; hence, removing the <code>whenNotPaused</code> modifier from <code>addBid</code> function. This issue is no longer relevant. Please see if we can close this or let me know what you think.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-08-corruption-of-oracle-data\" style=\"position:relative;\"><a href=\"#m-08-corruption-of-oracle-data\" aria-label=\"m 08 corruption of oracle data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/202\">[M-08] Corruption of oracle data</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/202\">etherhood</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L270\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L270</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L285\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L285</a></p>\n<h3 id=\"proof-of-concept-8\" style=\"position:relative;\"><a href=\"#proof-of-concept-8\" aria-label=\"proof of concept 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>Block for <code>lastReportedSDPriceData</code> = 7200<br>\nLet’s make the current block = 21601<br>\nNow <code>StaderOracle</code> will have data for 14400 and 21600, both blocks are being pushed by nodes and in the prices array.<br>\nIt will be all mixed up. Also, As soon as the 14400 block is finalised, the data for block 21600 is all lost as well.<br></p>\n<h3 id=\"recommended-mitigation-steps-8\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-8\" aria-label=\"recommended mitigation steps 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add <code>if (_sdPriceData.reportingBlockNumber == getSDPriceReportableBlock())</code> to ensure it is always the latest reportable block data.<br>\nAdd <code>mapping(uint256 => uint256[]) blockPrices</code> to store the prices array separately for each block being reported, to avoid mixing and corruption of data. Or have <code>uint256 currentEpochBlock</code>,\nso  when a new block of data is pushed, previous data is deleted before pushing the new data.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">if(_sdPriceData.reportingBlockNumber!=currentEpochBlock){</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">   delete prices;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n<h2 id=\"assessed-type-6\" style=\"position:relative;\"><a href=\"#assessed-type-6\" aria-label=\"assessed type 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h2>\n<p>Oracle</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/202#issuecomment-1598218914\">manoj9april (Stader) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Sure we will fix this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/202#issuecomment-1633521872\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-09-depositethovertargetweight-malicious-modifications-poolidarrayindexforexcessdeposit\" style=\"position:relative;\"><a href=\"#m-09-depositethovertargetweight-malicious-modifications-poolidarrayindexforexcessdeposit\" aria-label=\"m 09 depositethovertargetweight malicious modifications poolidarrayindexforexcessdeposit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175\">[M-09] <code>depositETHOverTargetWeight()</code> malicious modifications <code>poolIdArrayIndexForExcessDeposit</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175\">bin2chen</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/297\">sces60107</a></em></p>\n<p>Malicious modification in favor of your own funds’ allocation rounds.</p>\n<h3 id=\"proof-of-concept-9\" style=\"position:relative;\"><a href=\"#proof-of-concept-9\" aria-label=\"proof of concept 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>poolIdArrayIndexForExcessDeposit</code> is used to save <code>depositETHOverTargetWeight()</code>, which <code>Pool</code> is given priority for allocation in the next round.</p>\n<p>The current implementation rolls over to the next <code>pool</code>, regardless of whether the current balance is sufficient or not.</p>\n<p><code>poolAllocationForExcessETHDeposit</code>:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">poolAllocationForExcessETHDeposit</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_excessETHAmount</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">selectedPoolCapacity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\">[] </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolIdArray</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">..</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">j</span><span class=\"mtk1\">; </span><span class=\"mtk12\">j</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">poolCount</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolCapacity</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">poolUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getQueuedValidatorCountByPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolIdArray</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolDepositSize</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ETH_PER_NODE</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">poolUtils</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getCollateralETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolIdArray</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">remainingValidatorsToDeposit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ethToDeposit</span><span class=\"mtk1\"> / </span><span class=\"mtk12\">poolDepositSize</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">selectedPoolCapacity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] = </span><span class=\"mtk10\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">min</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">poolAllocationMaxSize</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">selectedValidatorCount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk10\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">min</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolCapacity</span><span class=\"mtk1\">, </span><span class=\"mtk12\">remainingValidatorsToDeposit</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">selectedValidatorCount</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">selectedPoolCapacity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">ethToDeposit</span><span class=\"mtk1\"> -= </span><span class=\"mtk12\">selectedPoolCapacity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] * </span><span class=\"mtk12\">poolDepositSize</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@&gt;          </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = (</span><span class=\"mtk12\">i</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">) % </span><span class=\"mtk12\">poolCount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">//For ethToDeposit &lt; ETH_PER_NODE, we will be able to at best deposit one more validator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">//but that will introduce complex logic, hence we are not solving that</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@&gt;          </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">ethToDeposit</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">ETH_PER_NODE</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">selectedValidatorCount</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">poolAllocationMaxSize</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@&gt;              </span><span class=\"mtk12\">poolIdArrayIndexForExcessDeposit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">break</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }    </span></span></span></code></pre>\n<p>Suppose now, the balance of <code>StaderStakePoolsManager</code> is 0 and <code>poolIdArrayIndexForExcessDeposit</code> = 1</p>\n<p>If I have a <code>Validator</code> with funds to be allocated at <code>pool</code> = 2, I can maliciously transfer 1 wei and let <code>poolIdArrayIndexForExcessDeposit</code> roll over to 2.</p>\n<p>This way, the next round of funding will be allocated in favor of my <code>Validator</code>.</p>\n<p>Normally, if the current funds are not enough to allocate one <code>Validator</code>, then <code>poolIdArrayIndexForExcessDeposit</code> should not be rolled over. This is fairer.</p>\n<p>Suggested: If <code>poolAllocationForExcessETHDeposit()</code> returns all 0’s, revert to avoid rolling <code>poolIdArrayIndexForExcessDeposit</code>.</p>\n<h3 id=\"recommended-mitigation-steps-9\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-9\" aria-label=\"recommended mitigation steps 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"18\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">depositETHOverTargetWeight</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">..</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">findValidator</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">poolCount</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">validatorToDeposit</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">selectedPoolCapacity</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">validatorToDeposit</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk15\">continue</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+           </span><span class=\"mtk12\">findValidator</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolAddress</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPoolUtils</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolUtils</span><span class=\"mtk1\">).</span><span class=\"mtk11\">poolAddressById</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolIdArray</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolDepositSize</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getStakedEthPerNode</span><span class=\"mtk1\">() -</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">IPoolUtils</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolUtils</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getCollateralETH</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolIdArray</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lastExcessETHDepositBlock</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">//slither-disable-next-line arbitrary-send-eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">IStaderPoolBase</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolAddress</span><span class=\"mtk1\">).</span><span class=\"mtk12\">stakeUserETHToBeaconChain</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">validatorToDeposit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">poolDepositSize</span><span class=\"mtk1\">}();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ETHTransferredToPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">i</span><span class=\"mtk1\">, </span><span class=\"mtk12\">poolAddress</span><span class=\"mtk1\">, </span><span class=\"mtk12\">validatorToDeposit</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">poolDepositSize</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        } </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">+       </span><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span><span class=\"mtk12\">findValidator</span><span class=\"mtk1\">,</span><span class=\"mtk8\">&quot;not valid validator&quot;</span><span class=\"mtk1\">);     </span></span></span></code></pre>\n<h3 id=\"assessed-type-7\" style=\"position:relative;\"><a href=\"#assessed-type-7\" aria-label=\"assessed type 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Context</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175#issuecomment-1598199888\">manoj9april (Stader) confirmed and commented</a>:</strong></p>\n<blockquote>\n<p>Sure, we will fix this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175#issuecomment-1598202090\">manoj9april (Stader) disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>We expect this issue to be in QA. As in, <code>Cooldown</code> eventually evens out every pool.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175#issuecomment-1616940895\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Technically valid, although the impact should remain small. Especially as the <code>cooldown</code> prevents it from using this frequently and really imbalancing among validators. Keeping Medium severity as funds are at stake and it wasn’t the intended design.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175#issuecomment-1619626947\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>@Picodes - can you please elaborate how funds are at stake? I think funds will never be at stake, as funds might go to a different <code>pool</code>, and there is no risk of funds being at stake in this case.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175#issuecomment-1623804094\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>My reasoning was although the impact is very limited, as the system can be gamed to send funds to the incorrect validator, which then could behave incorrectly, this report qualifies for Med severity under “leak value with a hypothetical attack path with stated assumptions, but external requirements”.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175#issuecomment-1623832109\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>@Picodes - just to clarify, there is no incorrect validator. All validators work as expected. We have penalty mechanics in place to penalize and exit validators if they behave incorrectly, so the question of sending ETH to the incorrect validator or fund loss does not exist.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/175#issuecomment-1623842427\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Yes, it is not an incorrect validator in the sense of a malicious one as safeguards exist, just compared to what it would have been without this bug. Unless I am missing something, you still could slightly game the system; in favor of, for example, your own validators, less performing ones, or validators starting to behave incorrectly.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2023-06-stader-findings/issues/175#issuecomment-1633523149\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>This is fixed.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-10-owner-in-vaultproxysol-is-address0\" style=\"position:relative;\"><a href=\"#m-10-owner-in-vaultproxysol-is-address0\" aria-label=\"m 10 owner in vaultproxysol is address0 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/133\">[M-10] Owner in <code>VaultProxy.sol</code> is <code>address(0)</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/133\">josephdara</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/386\">ksk2345</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/347\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/171\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/77\">ChrisTina</a>, and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/10\">NoamYakov</a></em></p>\n<p>The owner variable in the <code>VaultProxy.sol</code> is going to be zero because of a bug in <code>staderConfig</code>.\nThe <code>intialize</code> function in <code>staderConfig</code> grants the admin role to an admin passed in the native <code>_grantRole()</code>, but does not update the mapping that <code>getAdmin</code> reads from.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"19\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">initialise</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_isValidatorWithdrawalVault</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_staderConfig</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">isInitialized</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AlreadyInitialized</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">checkNonZeroAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_staderConfig</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">isValidatorWithdrawalVault</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_isValidatorWithdrawalVault</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">isInitialized</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">id</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_id</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IStaderConfig</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_staderConfig</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//@audit-issue Admin is zero on initialize</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//address(0) is going to  be returned, wrt stader.initialize</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">owner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAdmin</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L85-L103\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L85-L103</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L361-L363\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L361-L363</a></p>\n<p>The intialization of the vaults would not revert and all functions restricted to the owner would be inaccessible, unless function <code>updateAdmin</code> is called.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L176-L183\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/StaderConfig.sol#L176-L183</a></p>\n<p>The update admin does not revoke functions for the current admin in the <code>AccessControl</code> contract either, because the address returned is address zero.</p>\n<h3 id=\"proof-of-concept-10\" style=\"position:relative;\"><a href=\"#proof-of-concept-10\" aria-label=\"proof of concept 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"20\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">pragma</span><span class=\"mtk1\"> </span><span class=\"mtk12\">solidity</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">.</span><span class=\"mtk7\">16</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;../../contracts/library/UtilLib.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;../../contracts/StaderConfig.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;../../contracts/VaultProxy.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;../../contracts/ValidatorWithdrawalVault.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;../../contracts/OperatorRewardsCollector.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;./mocks/PoolUtilsMock.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;./mocks/PenaltyMockForVault.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;./mocks/SDCollateralMock.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;./mocks/StakePoolManagerMock.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;forge-std/Test.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">import</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">contract</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ValidatorWithdrawalVaultTest</span><span class=\"mtk1\"> </span><span class=\"mtk12\">is</span><span class=\"mtk1\"> </span><span class=\"mtk12\">Test</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staderAdmin</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staderManager</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staderTreasury</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">PoolUtilsMock</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolUtils</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">validatorId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">StaderConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">VaultProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawVault</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">OperatorRewardsCollector</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorRC</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">setUp</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">validatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">1</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderAdmin</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk7\">100</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderManager</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk7\">101</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">ethDepositAddr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">addr</span><span class=\"mtk1\">(</span><span class=\"mtk7\">102</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ProxyAdmin</span><span class=\"mtk1\"> </span><span class=\"mtk12\">proxyAdmin</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ProxyAdmin</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">StaderConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">configImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">StaderConfig</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TransparentUpgradeableProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">configProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TransparentUpgradeableProxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">configImpl</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proxyAdmin</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">StaderConfig</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">configProxy</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderAdmin</span><span class=\"mtk1\">, </span><span class=\"mtk12\">ethDepositAddr</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">OperatorRewardsCollector</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorRCImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">OperatorRewardsCollector</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">TransparentUpgradeableProxy</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorRCProxy</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">TransparentUpgradeableProxy</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operatorRCImpl</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">proxyAdmin</span><span class=\"mtk1\">),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk8\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">operatorRC</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">OperatorRewardsCollector</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operatorRCProxy</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">operatorRC</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialize</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderAdmin</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">poolUtils</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PoolUtilsMock</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">PenaltyMockForVault</span><span class=\"mtk1\"> </span><span class=\"mtk12\">penaltyContract</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">PenaltyMockForVault</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">SDCollateralMock</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sdCollateral</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">SDCollateralMock</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">ValidatorWithdrawalVault</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawVaultImpl</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ValidatorWithdrawalVault</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderAdmin</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">updatePoolUtils</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">poolUtils</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">updatePenaltyContract</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">penaltyContract</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">updateSDCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sdCollateral</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">updateOperatorRewardsCollector</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operatorRC</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">updateValidatorWithdrawalVaultImplementation</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawVaultImpl</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">withdrawVault</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">new</span><span class=\"mtk1\"> </span><span class=\"mtk10\">VaultProxy</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">withdrawVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">initialise</span><span class=\"mtk1\">(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">, </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">validatorId</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testAdminRights</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">       </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">startPrank</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderAdmin</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">grantRole</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">MANAGER</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">staderManager</span><span class=\"mtk1\">); </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk12\">vm</span><span class=\"mtk1\">.</span><span class=\"mtk11\">stopPrank</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">testFetchAdminAndVaultOwner</span><span class=\"mtk1\">() </span><span class=\"mtk11\">public</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_admin</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAdmin</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_admin</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_owner</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">withdrawVault</span><span class=\"mtk1\">.</span><span class=\"mtk11\">owner</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">assertEq</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_owner</span><span class=\"mtk1\">, </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h3 id=\"tools-used\" style=\"position:relative;\"><a href=\"#tools-used\" aria-label=\"tools used permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>Foundry</p>\n<h3 id=\"recommended-mitigation-steps-10\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-10\" aria-label=\"recommended mitigation steps 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p><code>StaderConfig.initialize</code> should add <code>setAccount(ADMIN, _admin);</code> at the last line.</p>\n<h3 id=\"assessed-type-8\" style=\"position:relative;\"><a href=\"#assessed-type-8\" aria-label=\"assessed type 8 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Access Control</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/133#issuecomment-1618123059\">Picodes (judge) decreased severity to Medium</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/133#issuecomment-1619520724\">sanjay-staderlabs (Stader) disagreed with severity, acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>We are handling it as a part of the deployment process; <code>updateAdmin(address _admin)</code> is called during deployment process.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/133#issuecomment-1622917002\">sanjay-staderlabs (Stader) commented</a>:</strong></p>\n<blockquote>\n<p>@Picodes - can you please check this? It think it should be part for QA.\nThanks</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/133#issuecomment-1623790281\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Considering the audited version of the code, especially in combination with <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/390\">issue 390</a>, I still think this qualifies for Medium severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-11-validatorwithdrawalvaultdistributerewards-can-be-called-to-make-operator-slashable\" style=\"position:relative;\"><a href=\"#m-11-validatorwithdrawalvaultdistributerewards-can-be-called-to-make-operator-slashable\" aria-label=\"m 11 validatorwithdrawalvaultdistributerewards can be called to make operator slashable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/86\">[M-11] <code>ValidatorWithdrawalVault.distributeRewards</code> can be called to make operator slashable</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/86\">rvierdiiev</a></em></p>\n<p>An attacker can call <code>distributeRewards</code> right before <code>settleFunds</code> to make <code>operatorShare &#x3C; penaltyAmount</code>. As a result, the validator will face loses.</p>\n<h3 id=\"proof-of-concept-11\" style=\"position:relative;\"><a href=\"#proof-of-concept-11\" aria-label=\"proof of concept 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p><code>ValidatorWithdrawalVault.distributeRewards</code> can be called by anyone. It’s purpose is to distribute validators rewards among the stakers protocol and the operator. After the call, the balance of <code>ValidatorWithdrawalVault</code> becomes 0.</p>\n<p><code>ValidatorWithdrawalVault.settle</code> is called when a validator is withdrawn from beacon chain. In this case, the balance of the contract is used to <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L62\">find operatorShare</a>. If it’s less than the accrued penalty by the validator, then operator is slashed.</p>\n<p>Because <code>distributeRewards</code> is permissionless, then next situation is possible:</p>\n<ol>\n<li>Operator decided to withdraw a validator. At the moment of that call, the balance of <code>ValidatorWithdrawalVault</code> is not 0 and <code>operatorShare</code> is 1 eth. Also the validator accrued 4.5 eth of penalty.</li>\n<li>A malicious user sees when 32 eth of a validator’s deposit is sent to the <code>ValidatorWithdrawalVault</code> and frontruns it with <code>distributeRewards</code> call. This makes balance to be 32 eth.</li>\n<li><code>operatorShare</code> will be 4 eth this time (permisssionless) and the penalty is 4.5, so the user is slashed.</li>\n<li>In this case, if a malicious user didn’t call <code>distributeRewards</code>, then the slash would not occur.</li>\n</ol>\n<p>Also in same way, a permissioned operator can call <code>distributeRewards</code> to get their rewards when they are going to be slashed. As permissioned validators are not forced to have collateral to be slashed, they rescued their earnings; otherwise, they would have been sent to the <code>pool</code>.</p>\n<h3 id=\"tools-used-1\" style=\"position:relative;\"><a href=\"#tools-used-1\" aria-label=\"tools used 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VsCode</p>\n<h3 id=\"recommended-mitigation-steps-11\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-11\" aria-label=\"recommended mitigation steps 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Maybe think about restricting access to the <code>distributeRewards</code> function.</p>\n<h3 id=\"assessed-type-9\" style=\"position:relative;\"><a href=\"#assessed-type-9\" aria-label=\"assessed type 9 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Access Control</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/86#issuecomment-1596586514\">manoj9april (Stader) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>This is intended, as we want to <code>slash SD</code> for an operator if the penalty is greater than operator share.<br>\nRewards share of vaults is going to be distributed by Stader every so often to enforce this.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/86#issuecomment-1616848505\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This report shows how an operator can be slashed depending on the order of actions. It seems a valid Medium severity issue to me, as front-running/changing a sequence of action could lead to a loss of funds compared to what the <code>operator</code> and <code>users</code> thought they should get.</p>\n<p>Wouldn’t it solve this to also fetch and solve <code>penaltyAmount</code> during <code>distributeRewards</code>?</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/86#issuecomment-1620878405\">Co0nan (warden) commented</a>:</strong></p>\n<blockquote>\n<p>Not sure if I’m following the impact here. </p>\n<blockquote>\n<p>At the moment of that call, balance of <code>ValidatorWithdrawalVault</code> is not 0 and <code>operatorShare</code> is 1 eth. Also validator accrued 4.5 eth of penalty.</p>\n</blockquote>\n<p>This case means the validator has to be slashed. In both cases, the user must be slashed according to the design. I can’t see the exact root cause. Also, <code>distributeRewards</code> can be called at any time; no need to make a front-run, so the system behaves as intended.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/86#issuecomment-1625422196\">rvierdiyev (warden) commented</a>:</strong></p>\n<blockquote>\n<p>@Co0nan - the problem here is that once <code>distributeRewards</code> is called, then all balances of the vault becomes 0. As I described in the example, the user had 1 eth inside the vault before the <code>distributeRewards</code> call and he has 4.5 eth of penalty.</p>\n<p>When withdrawals of 32 eth should come, the user’s balance will be 1 + 4 eth, which is more than penalty. But because a malicious user calls <code>distributeRewards</code> before 32 eth will come, then the user in the end has only 4 eth, which is less than penalty.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-12-validatorwithdrawalvaultsettlefunds-doesnt-check-amount-that-user-has-inside-nodeelrewardvault-to-pay-for-penalty\" style=\"position:relative;\"><a href=\"#m-12-validatorwithdrawalvaultsettlefunds-doesnt-check-amount-that-user-has-inside-nodeelrewardvault-to-pay-for-penalty\" aria-label=\"m 12 validatorwithdrawalvaultsettlefunds doesnt check amount that user has inside nodeelrewardvault to pay for penalty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/84\">[M-12] <code>ValidatorWithdrawalVault.settleFunds</code> doesn’t check amount that user has inside <code>NodeELRewardVault</code> to pay for penalty</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/84\">rvierdiiev</a></em></p>\n<p><code>ValidatorWithdrawalVault.settleFunds</code> doesn’t check amount that user has inside <code>NodeELRewardVault</code> to pay for penalty. That value can increase operator’s earned amount, which can avoid slashing.</p>\n<h3 id=\"proof-of-concept-12\" style=\"position:relative;\"><a href=\"#proof-of-concept-12\" aria-label=\"proof of concept 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>When a validator withdraws from beacon chain the <code>ValidatorWithdrawalVault.settleFunds</code> function is called. This function calculates amount that a validator <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L62\">has earned</a> for attestations as a validator. So only the balance of this contract <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L99\">is considered</a>.</p>\n<p>The function <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L64\">fetches penalty amount</a>. This penalty amount contains <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Penalty.sol#L111\">of 3 points</a>: <code>_mevTheftPenalty</code>, <code>_missedAttestationPenalty</code> and <code>_missedAttestationPenalty</code>.</p>\n<p>In this case, if the penalty amount is bigger than the validator’s earning on <code>ValidatorWithdrawalVault</code>, the <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L66-L69\">SD collateral is slashed</a>.</p>\n<p>Now, we need to understand how validator receives funds in this system. All attestation payments come to <code>ValidatorWithdrawalVault</code>, while <code>mev</code>/<code>block</code> proposal funds are coming to <code>SocializingPool</code> or <code>NodeELRewardVault</code> (depends on user’s choice). So actually, <code>_missedAttestationPenalty</code> is responding to <code>ValidatorWithdrawalVault</code> earning, while <code>_mevTheftPenalty</code> is responding to <code>NodeELRewardVault</code> earnings.</p>\n<p>That means, <code>NodeELRewardVault</code> balance should also be checked in order to find out how many earnings a validator has and they should be also counted when applying the penalty.</p>\n<p>Simple example:</p>\n<ol>\n<li>A validator wants to exit.</li>\n<li>An operator earning is 0.1 eth inside <code>ValidatorWithdrawalVault</code>.</li>\n<li>The accrued penalty is 0.11, which means the user will be slashed.</li>\n<li>The operator also has <code>NodeELRewardVault</code> where their operator’s reward is 0.05 eth.</li>\n<li>As result, the user has enough balance to cover penalty, but they were still penalized.</li>\n</ol>\n<h3 id=\"tools-used-2\" style=\"position:relative;\"><a href=\"#tools-used-2\" aria-label=\"tools used 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools Used</h3>\n<p>VsCode</p>\n<h3 id=\"recommended-mitigation-steps-12\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-12\" aria-label=\"recommended mitigation steps 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>As you accrue <code>_mevTheftPenalty</code> inside <code>ValidatorWithdrawalVault</code>, you also should calculate the operator’s rewards inside <code>NodeELRewardVault</code>.</p>\n<h3 id=\"assessed-type-10\" style=\"position:relative;\"><a href=\"#assessed-type-10\" aria-label=\"assessed type 10 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Error</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/84#issuecomment-1596567203\">manoj9april (Stader) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Rewards are treated separately between CL and EL. We will take this suggestion into account for next upgrades.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/84#issuecomment-1616855027\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Keeping medium severity as this report shows how an operator could be slashed, despite having earned more than the penalty if we combine EL and CL rewards, which could lead to a loss of funds.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-13-no-bidder-has-incentive-to-bid-in-the-auction-except-doing-last-minute-mev-due-to-fixed-endblock\" style=\"position:relative;\"><a href=\"#m-13-no-bidder-has-incentive-to-bid-in-the-auction-except-doing-last-minute-mev-due-to-fixed-endblock\" aria-label=\"m 13 no bidder has incentive to bid in the auction except doing last minute mev due to fixed endblock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/70\">[M-13] No bidder has incentive to bid in the Auction except doing last-minute <code>MEV</code> due to fixed <code>endBlock</code></a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/70\">0xWaitress</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/426\">LaScaloneta</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/414\">Josiah</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/150\">peanuts</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/110\">RaymondFam</a>, and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/83\">T1MOH</a></em></p>\n<h3 id=\"proof-of-concept-13\" style=\"position:relative;\"><a href=\"#proof-of-concept-13\" aria-label=\"proof of concept 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The auction of <code>SD Token</code> has a fixed <code>endBlock</code>. Bidder(s) would like to get SD Token with the least amount of ETH and they are all incentivized to just bid at the last block, leading to loss of protocol principle during the auction.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"21\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createLot</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sdAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">nextLot</span><span class=\"mtk1\">].</span><span class=\"mtk12\">startBlock</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">nextLot</span><span class=\"mtk1\">].</span><span class=\"mtk12\">endBlock</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">duration</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">lots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">nextLot</span><span class=\"mtk1\">].</span><span class=\"mtk12\">sdAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sdAmount</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<p>Genearally, auctions with a fixed endtime has the known vulnerability of being bid on at the last block. Essentially, the validator/MEVer who has the ability to slip in transaction at the last block has the highest likelihood to get the bid. This basically gives them an advantage and would lead to the auction to end at lower price.</p>\n<h3 id=\"recommended-mitigation-steps-13\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-13\" aria-label=\"recommended mitigation steps 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Extend the final <code>endBlock</code> at each bid. This can be activated at the end of 1h, for example, to ensure the highest bidder can take the auction on in a fair manner.</p>\n<h3 id=\"assessed-type-11\" style=\"position:relative;\"><a href=\"#assessed-type-11\" aria-label=\"assessed type 11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>MEV</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/70#issuecomment-1596166241\">manoj9april (Stader) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>MEV bots are welcome to be bidders.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/70#issuecomment-1616600287\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>This is a valid vulnerability in my opinion. MEV are, of course welcome to bid, but the problem is the current auction system doesn’t allow for a proper price discovery. From a game theory standpoint, no one has any interest in revealing their bid before the end of the auction; and when bidding, you tend to not reveal your max bid but try to guess the “second-highest bid”. Therefore, the current design can quickly lead to a suboptimal final price as someone may have increased their bid, given more time.</p>\n<p>Note as well, that it is currently relatively cheap to censor a transaction for a few blocks by bribing block builders. So with the current design, value may easily be lost trying to censor other bidders or bribing miners to be included.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/70#issuecomment-1621372665\">manoj9april (Stader) acknowledged, disagreed with severity and commented</a>:</strong></p>\n<blockquote>\n<p>Yes, We agree with your point. But for now, we would prefer to go with a current simpler approach and improve later phases, based your recommendation.</p>\n<p>I think this should be considered as low severity.</p>\n</blockquote>\n<hr>\n<h2 id=\"m-14-chainlinks-latestrounddata-may-return-a-stale-or-incorrect-result\" style=\"position:relative;\"><a href=\"#m-14-chainlinks-latestrounddata-may-return-a-stale-or-incorrect-result\" aria-label=\"m 14 chainlinks latestrounddata may return a stale or incorrect result permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/15\">[M-14] Chainlink’s <code>latestRoundData</code> may return a stale or incorrect result</a></h2>\n<p><em>Submitted by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/15\">Madalad</a>, also found by <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/416\">MohammedRizwan</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/369\">turvy_fuzz</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/366\">Breeje</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/363\">etherhood</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/328\">dwward3n</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/316\">Aymen0909</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/312\">LaScaloneta</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/298\">erictee</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/291\">tallo</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/225\">DadeKuma</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/176\">bin2chen</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/153\">peanuts</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/118\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/117\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/116\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/115\">Bauchibred</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/105\">whimints</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/104\">whimints</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/65\">piyushshukla</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/45\">rvierdiiev</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/34\">saneryee</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/29\">Hama</a>, <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/16\">Madalad</a>, and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/14\">kutugu</a></em></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L646\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L646</a> <br><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L648\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L648</a></p>\n<p>Chainlink’s <code>latestRoundData</code> is used here to retrieve price feed data; however, there is insufficient protection against price staleness.</p>\n<p>Return arguments other than <code>int256 answer</code> are necessary to determine the validity of the returned price, as it is possible for an outdated price to be received. See <a href=\"https://ethereum.stackexchange.com/questions/133242/how-future-resilient-is-a-chainlink-price-feed/133843#133843\">here</a> for reasons why a price feed might stop updating.</p>\n<p>The return value <code>updatedAt</code> contains the timestamp at which the received price was last updated, and can be used to ensure that the price is not outdated. See more information about <code>latestRoundID</code> in the <a href=\"https://docs.chain.link/data-feeds/api-reference#latestrounddata\">Chainlink docs</a>. Inaccurate price data can lead to functions not working as expected and/or loss of funds.</p>\n<h3 id=\"proof-of-concept-14\" style=\"position:relative;\"><a href=\"#proof-of-concept-14\" aria-label=\"proof of concept 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"22\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getPORFeedData</span><span class=\"mtk1\">()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (, </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalETHBalanceInInt</span><span class=\"mtk1\">, , , ) = </span><span class=\"mtk11\">AggregatorV3Interface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getETHBalancePORFeedProxy</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">latestRoundData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        (, </span><span class=\"mtk12\">int256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalETHXSupplyInInt</span><span class=\"mtk1\">, , , ) = </span><span class=\"mtk11\">AggregatorV3Interface</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getETHXSupplyPORFeedProxy</span><span class=\"mtk1\">())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .</span><span class=\"mtk11\">latestRoundData</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalETHBalanceInInt</span><span class=\"mtk1\">), </span><span class=\"mtk11\">uint256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">totalETHXSupplyInInt</span><span class=\"mtk1\">), </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"recommended-mitigation-steps-14\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-14\" aria-label=\"recommended mitigation steps 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>Add a check for the <code>updatedAt</code> returned value from <code>latestRoundData</code>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"23\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function getPORFeedData()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        internal</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        view</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        returns (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            uint256,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            uint256,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            uint256</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       (, int256 totalETHBalanceInInt, , , ) = AggregatorV3Interface(staderConfig.getETHBalancePORFeedProxy())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       (, int256 totalETHBalanceInInt, , uint256 balanceUpdatedAt, ) = AggregatorV3Interface(staderConfig.getETHBalancePORFeedProxy())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .latestRoundData();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       require(block.timestamp - balanceUpdatedAt &lt;= MAX_DELAY, &quot;stale price&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-       (, int256 totalETHXSupplyInInt, , , ) = AggregatorV3Interface(staderConfig.getETHXSupplyPORFeedProxy())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       (, int256 totalETHXSupplyInInt, , uint256 supplyUpdatedAt, ) = AggregatorV3Interface(staderConfig.getETHXSupplyPORFeedProxy())</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            .latestRoundData();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+       require(block.timestamp - supplyUpdatedAt &lt;= MAX_DELAY, &quot;stale price&quot;);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        return (uint256(totalETHBalanceInInt), uint256(totalETHXSupplyInInt), block.number);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h3 id=\"assessed-type-12\" style=\"position:relative;\"><a href=\"#assessed-type-12\" aria-label=\"assessed type 12 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Oracle</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/15#issuecomment-1596573683\">manoj9april (Stader) acknowledged and commented</a>:</strong></p>\n<blockquote>\n<p>Solution with chainlink is not finalized.</p>\n</blockquote>\n<hr>\n<h1 id=\"low-risk-and-non-critical-issues\" style=\"position:relative;\"><a href=\"#low-risk-and-non-critical-issues\" aria-label=\"low risk and non critical issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Low Risk and Non-Critical Issues</h1>\n<p>For this audit, 24 reports were submitted by wardens detailing low risk and non-critical issues. The <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/114\">report highlighted below</a> by <strong>RaymondFam</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/405\">niser93</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/389\">turvy_fuzz</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/384\">0xhacksmithh</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/379\">ernestognw</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/373\">naman1778</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/354\">SAAJ</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/342\">catellatech</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/335\">btk</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/327\">LaScaloneta</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/310\">hals</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/307\">hunter_w3b</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/282\">mgf15</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/271\">DadeKuma</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/267\">ChrisTina</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/264\">jaraxxus</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/249\">Rolezn</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/231\">matrix_0wl</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/177\">bin2chen</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/130\">solsaver</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/127\">T1MOH</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/108\">fatherOfBlocks</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/79\">Sathish9098</a> and\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/37\">0xWaitress</a>.</em></p>\n<h2 id=\"bid-withdrawal-mechanism-in-auction-contract\" style=\"position:relative;\"><a href=\"#bid-withdrawal-mechanism-in-auction-contract\" aria-label=\"bid withdrawal mechanism in auction contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bid Withdrawal Mechanism in <code>Auction</code> Contract</h2>\n<p>The current design of the <code>Auction</code> contract includes the <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L120-L135\"><code>withdrawUnselectedBid</code></a> function, which allows a withdrawal of funds only after the auction ends. While this safeguards the auction process from disruptions, it locks up participants’ funds for a prolonged period.</p>\n<p>To enhance the fluidity of the auction, it is proposed to refactor the <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#LL62C1-L78C6\"><code>addBid</code></a> function, thereby eliminating the need for <code>withdrawUnselectedBid</code>. In the refactored <code>addBid</code>, the previous highest bidder’s bid will be deleted from <code>lotItem.bids[lotItem.highestBidder]</code>, and the bidder’s funds will be refunded before updating <code>lotItem.highestBidder</code>, <code>lotItem.highestBidAmount</code>, and <code>lotItem.bids[msg.sender]</code>.</p>\n<p>The refactored <code>addBid</code> function could look like this:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"24\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">addBid</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lotId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// reject payments of 0 ETH</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InSufficientETH</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">LotItem</span><span class=\"mtk1\"> </span><span class=\"mtk12\">storage</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lots</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lotId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">endBlock</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">AuctionEnded</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bids</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] + </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">value</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidAmount</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">bidIncrement</span><span class=\"mtk1\">) </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InSufficientBid</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// Refund previous highest bidder and delete their bid before updating</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">if</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidder</span><span class=\"mtk1\"> != </span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidder</span><span class=\"mtk1\">).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidAmount</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bids</span><span class=\"mtk1\">[</span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidder</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidder</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">highestBidAmount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">lotItem</span><span class=\"mtk1\">.</span><span class=\"mtk12\">bids</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">] = </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">BidPlaced</span><span class=\"mtk1\">(</span><span class=\"mtk12\">lotId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">, </span><span class=\"mtk12\">totalUserBid</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>This refactor makes sure that before a new highest bid is accepted, the previous highest bid is refunded and removed from <code>lotItem.bids</code>. It’s important to note this design would need a proper audit and testing to make sure it behaves as expected in all scenarios. Additionally, take into account that the refund operation could fail due to gas constraints, so a more robust mechanism to handle such scenarios might be needed.</p>\n<h2 id=\"streamlining-the-addbid-function-in-auction-contract-removal-of-redundant-code\" style=\"position:relative;\"><a href=\"#streamlining-the-addbid-function-in-auction-contract-removal-of-redundant-code\" aria-label=\"streamlining the addbid function in auction contract removal of redundant code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Streamlining the <code>addBid</code> function in <code>Auction</code> Contract: Removal of Redundant Code</h2>\n<p>The current implementation of the <code>addBid</code> function in the <code>Auction</code> contract contains a line of code that checks whether the sent ETH amount (<code>msg.value</code>) is zero. Specifically, the line <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L64\"><code>if (msg.value == 0) revert InSufficientETH();</code></a> appears to be redundant, due to the subsequent condition that checks if the total bid is less than the highest current bid, plus the bid increment.</p>\n<p>In the event <code>msg.value</code> is zero, the latter condition <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L71\"><code>if (totalUserBid &#x3C; lotItem.highestBidAmount + bidIncrement) revert InSufficientBid();</code></a> would effectively handle the scenario, as it encompasses the case where no new ETH is added to the bid.</p>\n<p>While separate error messages could aid in user experience by precisely pointing out the mistake, in this context, it seems superfluous; a user not sending any ETH with the bid and a user not meeting the minimum bid increment inherently suggest the same issue - the bid is insufficient.</p>\n<p>Therefore, it is recommended to remove the line <code>if (msg.value == 0) revert InSufficientETH();</code> from the <code>addBid</code> function to simplify the code and remove redundancy, without compromising the function’s integrity or user experience.</p>\n<h2 id=\"initiating-role-management-in-vaultfactory-contract-initialization-and-subsequent-function-call-permissions\" style=\"position:relative;\"><a href=\"#initiating-role-management-in-vaultfactory-contract-initialization-and-subsequent-function-call-permissions\" aria-label=\"initiating role management in vaultfactory contract initialization and subsequent function call permissions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Initiating Role Management in <code>VaultFactory</code> Contract Initialization and Subsequent Function Call Permissions</h2>\n<p>The <code>VaultFactory</code> contract could greatly benefit from incorporating a role management function for the <code>NODE_REGISTRY_CONTRACT</code> role within the <code>initialize</code> function. This initial role assignment is key to ensuring secure and authorized contract functionality from the onset.</p>\n<p>Upon contract deployment, it’s crucial that functions <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/factory/VaultFactory.sol#L39\"><code>deployWithdrawVault</code></a> and <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/factory/VaultFactory.sol#L51\"><code>deployNodeELRewardVault</code></a> are callable, particularly considering their <code>onlyRole(NODE_REGISTRY_CONTRACT) visibility</code>. Setting the <code>NODE_REGISTRY_CONTRACT</code> role within the <code>initialize</code> function can facilitate this.</p>\n<p>Here’s a sample implementation within the initialize function:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/factory/VaultFactory.sol#L23-L32\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/factory/VaultFactory.sol#L23-L32</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"25\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">function initialize(address _admin, address _staderConfig) external initializer {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    _grantRole(NODE_REGISTRY_CONTRACT, _msgSender());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>The same shall apply to the <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ETHx.sol#L21-L22\">‘MINTER<em>ROLE’ and ‘BURNER</em>ROLE’</a> in the ETHx contract too.</p>\n<h2 id=\"comments-and-code-mismatch\" style=\"position:relative;\"><a href=\"#comments-and-code-mismatch\" aria-label=\"comments and code mismatch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comments and Code Mismatch</h2>\n<p>The withdraw function in the <code>SDCollateral</code> contract lacks the implementation of a withdrawal delay, as indicated in the function’s NatSpec documentation. This omission contradicts the intended behavior specified in the documentation, potentially leading to inconsistencies and unintended consequences in the withdrawal process.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L54-L73\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L54-L73</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"26\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @notice for operator to request withdraw of sd</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// @dev it does not transfer sd tokens immediately</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// operator should come back after withdrawal-delay time to claim</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">/// this requested sd is subject to slashes</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">withdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_requestedSD</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">opSDBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">operatorSDBalance</span><span class=\"mtk1\">[</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">opSDBalance</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk11\">getOperatorWithdrawThreshold</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">) + </span><span class=\"mtk12\">_requestedSD</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InsufficientSDToWithdraw</span><span class=\"mtk1\">(</span><span class=\"mtk12\">opSDBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">operatorSDBalance</span><span class=\"mtk1\">[</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">_requestedSD</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">// cannot use safeERC20 as this contract is an upgradeable contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getStaderToken</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">), </span><span class=\"mtk12\">_requestedSD</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SDTransferFailed</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SDWithdrawn</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_requestedSD</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>It is recommended to address this discrepancy by implementing the appropriate withdrawal delay mechanism in the withdraw function. By adhering to the intended withdrawal delay, operators can claim their requested SD tokens only after the specified time period, ensuring the proper functioning of the collateral slashing mechanism and maintaining the expected behavior of the contract.</p>\n<h2 id=\"identical-code-logic\" style=\"position:relative;\"><a href=\"#identical-code-logic\" aria-label=\"identical code logic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identical Code Logic</h2>\n<p>In <code>ValidatorWithdrawalVault.sol</code>, functions <code>distributeRewards</code> and <code>settleFunds</code> have the following identical code snippet:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L31-L33\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L31-L33</a><br>\n<a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L55-L57\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L55-L57</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"27\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">poolId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">VaultProxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))).</span><span class=\"mtk11\">poolId</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">validatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">VaultProxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))).</span><span class=\"mtk11\">id</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">IStaderConfig</span><span class=\"mtk1\"> </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">VaultProxy</span><span class=\"mtk1\">(</span><span class=\"mtk11\">payable</span><span class=\"mtk1\">(</span><span class=\"mtk11\">address</span><span class=\"mtk1\">(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">))).</span><span class=\"mtk11\">staderConfig</span><span class=\"mtk1\">();</span></span></span></code></pre>\n<p>It is recommended to refactor the duplicate code snippet by grouping it into a private function. This will improve code maintainability and reduce redundancy. By extracting the common code snippet into a separate function, you can avoid duplicating the same code and make future updates or modifications easier.</p>\n<h2 id=\"missing-length-check-in-claim-function\" style=\"position:relative;\"><a href=\"#missing-length-check-in-claim-function\" aria-label=\"missing length check in claim function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Missing Length Check in <code>claim</code> Function</h2>\n<p>The <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L107-L135\"><code>claim</code></a> function in the <code>SocializingPool</code> contract should include a length check for the input parameters <code>_index</code>, <code>_amountSD</code>, <code>_amountETH</code>, and <code>_merkleProof</code> before invoking the <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L137-L161\"><code>_claim</code></a> internal function. This check ensures that all arrays have the same length, preventing potential errors or inconsistencies during the reward claiming process.</p>\n<p>By verifying the lengths of these arrays, you can ensure that the corresponding values align properly and avoid any unexpected behavior or unintended consequences. Adding this length check will help maintain the integrity of the claim operation and enhance the overall robustness of the contract.</p>\n<p>Consider adding the following length check at the beginning of the claim function:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"28\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">require</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_index</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_amountSD</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_index</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_amountETH</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk12\">_index</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">_merkleProof</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk8\">&quot;Input lengths mismatch&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"unnecessary-payable-keyword-in-withdraw-function\" style=\"position:relative;\"><a href=\"#unnecessary-payable-keyword-in-withdraw-function\" aria-label=\"unnecessary payable keyword in withdraw function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unnecessary payable Keyword in <code>withdraw</code> Function</h2>\n<p>The <code>payable</code> keyword in the line <code>if (!IERC20(staderConfig.getStaderToken()).transfer(payable(operator), _requestedSD))</code> of the <code>withdraw</code> function in the <code>SDCollateral</code> contract is unnecessary and can be safely removed.</p>\n<p>Since you’re not dealing with the transfer of native tokens (ETH) in this specific line, using the <code>payable</code> keyword is not required. The <code>payable</code> keyword is typically used when transferring ETH or performing operations related to ETH transfers.</p>\n<p>You can simplify the line to:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#LL68C1-L68C96\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#LL68C1-L68C96</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"29\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (!IERC20(staderConfig.getStaderToken()).transfer(payable(operator), _requestedSD)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (!IERC20(staderConfig.getStaderToken()).transfer(operator, _requestedSD)) {</span></span></span></code></pre>\n<p>By removing the <code>payable</code> keyword, you ensure clarity and eliminate any confusion regarding the transfer of native tokens, making the code more concise and accurate.</p>\n<h2 id=\"removal-of-unused-receive-and-fallback-functions\" style=\"position:relative;\"><a href=\"#removal-of-unused-receive-and-fallback-functions\" aria-label=\"removal of unused receive and fallback functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Removal of Unused <code>receive</code> and <code>fallback</code> Functions</h2>\n<p>The <code>receive</code> and <code>fallback</code> functions in the contract <code>PermissionedPool</code> and <code>StaderStakePoolsManager.sol</code> can be safely removed, as they serve as protection against accidental submissions by calling non-existent functions. By removing these functions, direct transfers of Ether to the contract will be disallowed, achieving the same outcome as having the functions present with the reverting logic.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedPool.sol#L51-L59\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedPool.sol#L51-L59</a><br>\n<a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderStakePoolsManager.sol#L62-L70\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderStakePoolsManager.sol#L62-L70</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"30\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// protection against accidental submissions by calling non-existent function</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">receive</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UnsupportedOperation</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// protection against accidental submissions by calling non-existent function</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">fallback</span><span class=\"mtk1\">() </span><span class=\"mtk12\">external</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UnsupportedOperation</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"stale-values-attributable-to-unpredictably-delayed-updates\" style=\"position:relative;\"><a href=\"#stale-values-attributable-to-unpredictably-delayed-updates\" aria-label=\"stale values attributable to unpredictably delayed updates permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stale Values Attributable to Unpredictably Delayed Updates</h2>\n<p>The following concensus in <code>StaderOracle.sol</code> will have to be exactly met in order to have the update logics executed, highly leading to stale answers:</p>\n<ol>\n<li>Function <code>submitExchangeRateData</code></li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L147-L156\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L147-L156</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"31\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">submissionCount</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">trustedNodesCount</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_exchangeRate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">exchangeRate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">updateWithInLimitER</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_exchangeRate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalETHBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_exchangeRate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">totalETHXSupply</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_exchangeRate</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<ol start=\"2\">\n<li>Function <code>submitSocializingRewardsMerkleRoot</code></li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L255-L267\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L255-L267</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"32\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">submissionCount</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">trustedNodesCount</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">socializingPool</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IPoolUtils</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPoolUtils</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">getSocializingPoolAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">poolId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">ISocializingPool</span><span class=\"mtk1\">(</span><span class=\"mtk12\">socializingPool</span><span class=\"mtk1\">).</span><span class=\"mtk11\">handleRewards</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SocializingRewardsMerkleRootUpdated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">index</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">poolId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<ol start=\"3\">\n<li>Function <code>submitSDPrice</code></li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L290-L297\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L290-L297</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"33\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">submissionCount</span><span class=\"mtk1\"> == (</span><span class=\"mtk7\">2</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">trustedNodesCount</span><span class=\"mtk1\">) / </span><span class=\"mtk7\">3</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lastReportedSDPriceData</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_sdPriceData</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lastReportedSDPriceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sdPriceInETH</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getMedianValue</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sdPrices</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">delete</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sdPrices</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Emit SD Price updated event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">SDPriceUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_sdPriceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sdPriceInETH</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_sdPriceData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<ol start=\"4\">\n<li>Function <code>submitValidatorStats</code></li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L371-L388\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L371-L388</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"34\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">submissionCount</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">trustedNodesCount</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">validatorStats</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Emit stats updated event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ValidatorStatsUpdated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exitingValidatorsBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exitedValidatorsBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">slashedValidatorsBalance</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exitingValidatorsCount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">exitedValidatorsCount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_validatorStats</span><span class=\"mtk1\">.</span><span class=\"mtk12\">slashedValidatorsCount</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<ol start=\"5\">\n<li>Function <code>submitWithdrawnValidators</code></li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L431-L445\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L431-L445</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"35\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">submissionCount</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">trustedNodesCount</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\"> &amp;&amp;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">_withdrawnValidators</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">reportingBlockNumberForWithdrawnValidators</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">reportingBlockNumberForWithdrawnValidators</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_withdrawnValidators</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">INodeRegistry</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_withdrawnValidators</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nodeRegistry</span><span class=\"mtk1\">).</span><span class=\"mtk11\">withdrawnValidators</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_withdrawnValidators</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sortedPubkeys</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk3\">// Emit withdrawn validators updated event</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">WithdrawnValidatorsUpdated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_withdrawnValidators</span><span class=\"mtk1\">.</span><span class=\"mtk12\">reportingBlockNumber</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_withdrawnValidators</span><span class=\"mtk1\">.</span><span class=\"mtk12\">nodeRegistry</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">_withdrawnValidators</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sortedPubkeys</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">timestamp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<ol start=\"6\">\n<li>Function <code>submitMissedAttestationPenalties</code></li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L482-L493\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L482-L493</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"36\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> ((</span><span class=\"mtk12\">submissionCount</span><span class=\"mtk1\"> == </span><span class=\"mtk12\">trustedNodesCount</span><span class=\"mtk1\"> / </span><span class=\"mtk7\">2</span><span class=\"mtk1\"> + </span><span class=\"mtk7\">1</span><span class=\"mtk1\">)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">lastReportedMAPDIndex</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_mapd</span><span class=\"mtk1\">.</span><span class=\"mtk12\">index</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">keyCount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_mapd</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sortedPubkeys</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">keyCount</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">pubkeyRoot</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPubkeyRoot</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_mapd</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sortedPubkeys</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">missedAttestationPenalty</span><span class=\"mtk1\">[</span><span class=\"mtk12\">pubkeyRoot</span><span class=\"mtk1\">]++;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">unchecked</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    ++</span><span class=\"mtk12\">i</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">MissedAttestationPenaltyUpdated</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_mapd</span><span class=\"mtk1\">.</span><span class=\"mtk12\">index</span><span class=\"mtk1\">, </span><span class=\"mtk12\">block</span><span class=\"mtk1\">.</span><span class=\"mtk12\">number</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_mapd</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sortedPubkeys</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<h2 id=\"too-harsh-deactivation-rule-on-operators\" style=\"position:relative;\"><a href=\"#too-harsh-deactivation-rule-on-operators\" aria-label=\"too harsh deactivation rule on operators permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Too Harsh Deactivation Rule on Operators</h2>\n<p>It only requires one front run validator as a culprit to deactivate an operator, as is evidenced in the following code logics of:</p>\n<ol>\n<li><code>PermissionedNodeRegistry.sol</code> with functions <code>allocateValidatorsAndUpdateOperatorId</code> and <code>getTotalQueuedValidatorCount</code> getting denied:</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L670-L677\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L670-L677</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"37\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// handle front run validator by changing their status and deactivating operator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">handleFrontRun</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_validatorId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">validatorRegistry</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_validatorId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">status</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ValidatorStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FRONT_RUN</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">validatorRegistry</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_validatorId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">operatorStructById</span><span class=\"mtk1\">[</span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">active</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">_deactivateNodeOperator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ol start=\"2\">\n<li><code>PermissionlessNodeRegistry.sol</code> with functions <code>addValidatorKeys</code>, <code>changeSocializingPoolState</code> and <code>updateOperatorDetails</code> getting denied:</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L624-L629\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L624-L629</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"38\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// handle front run validator by changing their status, deactivating operator and imposing penalty</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">handleFrontRun</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_validatorId</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">validatorRegistry</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_validatorId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">status</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">ValidatorStatus</span><span class=\"mtk1\">.</span><span class=\"mtk12\">FRONT_RUN</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">validatorRegistry</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_validatorId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">operatorStructById</span><span class=\"mtk1\">[</span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\">].</span><span class=\"mtk12\">active</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">false</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Consider enforcing this rule only when exceeding a threshold percentage of validators front running. </p>\n<h2 id=\"typo-mistakes\" style=\"position:relative;\"><a href=\"#typo-mistakes\" aria-label=\"typo mistakes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typo mistakes</h2>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PoolSelector.sol#L46\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PoolSelector.sol#L46</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"39\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-     * @notice calculates the count of validator to deposit on beacon chain for a pool based on target weight and supply</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     * @notice calculates the count of validators to deposit on beacon chain for a pool based on target weight and supply</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L97\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/ValidatorWithdrawalVault.sol#L97</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"40\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 collateralETH = getCollateralETH(poolId, staderConfig); // 0, incase of permissioned NOs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 collateralETH = getCollateralETH(poolId, staderConfig); // 0, in case of permissioned NOs</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedPool.sol#L170\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedPool.sol#L170</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"41\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-     * @notice transfer the excess ETH sent by some EAO or non stader contract back to SSPM</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     * @notice transfer the excess ETH sent by some EOA or non stader contract back to SSPM</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L520\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L520</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"42\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-     * @param _endIndex  up to end index of validator queue to to count</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     * @param _endIndex  up to end index of validator queue to count</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L104\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"43\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-     * @return feeRecipientAddress fee recipient address for all validator clients of a operator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     * @return feeRecipientAddress fee recipient address for all validator clients of an operator</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/VaultProxy.sol#L38\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/VaultProxy.sol#L38</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"44\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    /**route all call to this proxy contract to the respective latest vault contract</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    /**route all calls to this proxy contract to the respective latest vault contract</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/VaultProxy.sol#L64\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/VaultProxy.sol#L64</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"45\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-     * @notice @update the owner of vault proxy contrat</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     * @notice @update the owner of vault proxy contract</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PoolSelector.sol#L32\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PoolSelector.sol#L32</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"46\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-     * @dev pool index start from 1 with permission less pool</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+     * @dev pool index starts from 1 with permissionless pool</span></span></span></code></pre>\n<h2 id=\"repeatedly-used-instances-may-be-cached\" style=\"position:relative;\"><a href=\"#repeatedly-used-instances-may-be-cached\" aria-label=\"repeatedly used instances may be cached permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repeatedly Used Instances May be Cached</h2>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L106-L131\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L106-L131</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"47\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function onboardNodeOperator(string calldata _operatorName, address payable _operatorRewardAddress)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        returns (address feeRecipientAddress)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        address poolUtils = staderConfig.getPoolUtils();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        IPoolUtils _poolUtils = IPoolUtils(poolUtils);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (IPoolUtils(poolUtils).poolAddressById(POOL_ID) != staderConfig.getPermissionedPool()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_poolUtils.poolAddressById(POOL_ID) != staderConfig.getPermissionedPool()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            revert DuplicatePoolIDOrPoolNotAdded();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        IPoolUtils(poolUtils).onlyValidName(_operatorName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _poolUtils.onlyValidName(_operatorName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        UtilLib.checkNonZeroAddress(_operatorRewardAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (nextOperatorId &gt; maxOperatorId) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            revert MaxOperatorLimitReached();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (!permissionList[msg.sender]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            revert NotAPermissionedNodeOperator();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        //checks if operator already onboarded in any pool of protocol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (IPoolUtils(poolUtils).isExistingOperator(msg.sender)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_poolUtils.isExistingOperator(msg.sender)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            revert OperatorAlreadyOnBoardedInProtocol();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        feeRecipientAddress = staderConfig.getPermissionedSocializingPool();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        onboardOperator(_operatorName, _operatorRewardAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        return feeRecipientAddress;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"essential-early-checks\" style=\"position:relative;\"><a href=\"#essential-early-checks\" aria-label=\"essential early checks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Essential Early Checks</h2>\n<p>Key checks should be placed at the beginning part of a function logic where possible:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L106-L131\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L106-L131</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"48\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    function onboardNodeOperator(string calldata _operatorName, address payable _operatorRewardAddress)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        external</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        override</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        whenNotPaused</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        returns (address feeRecipientAddress)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (!permissionList[msg.sender]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            revert NotAPermissionedNodeOperator();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        address poolUtils = staderConfig.getPoolUtils();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (IPoolUtils(poolUtils).poolAddressById(POOL_ID) != staderConfig.getPermissionedPool()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            revert DuplicatePoolIDOrPoolNotAdded();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        IPoolUtils(poolUtils).onlyValidName(_operatorName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        UtilLib.checkNonZeroAddress(_operatorRewardAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (nextOperatorId &gt; maxOperatorId) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            revert MaxOperatorLimitReached();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (!permissionList[msg.sender]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            revert NotAPermissionedNodeOperator();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        //checks if operator already onboarded in any pool of protocol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        if (IPoolUtils(poolUtils).isExistingOperator(msg.sender)) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            revert OperatorAlreadyOnBoardedInProtocol();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        feeRecipientAddress = staderConfig.getPermissionedSocializingPool();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        onboardOperator(_operatorName, _operatorRewardAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        return feeRecipientAddress;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<h2 id=\"activate-the-optimizer\" style=\"position:relative;\"><a href=\"#activate-the-optimizer\" aria-label=\"activate the optimizer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Activate the optimizer</h2>\n<p>Before deploying your contract, activate the optimizer when compiling using “<code>solc --optimize --bin sourceFile.sol</code>”. By default, the optimizer will optimize the contract assuming it is called 200 times across its lifetime. If you want the initial contract deployment to be cheaper and the later function executions to be more expensive, set it to “<code>--optimize-runs=1</code>”. Conversely, if you expect many transactions and do not care for higher deployment cost and output size, set “<code>--optimize-runs</code>” to a high number.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"49\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">module.exports = {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">solidity: {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">version: &quot;0.8.16&quot;,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">settings: {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  optimizer: {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    enabled: true,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    runs: 1000,</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  },</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">},</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">},</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">};</span></span></code></pre>\n<p>Please visit the following site for further information:</p>\n<p><a href=\"https://docs.soliditylang.org/en/v0.5.4/using-the-compiler.html#using-the-commandline-compiler\">https://docs.soliditylang.org/en/v0.5.4/using-the-compiler.html#using-the-commandline-compiler</a></p>\n<p>Here’s one example of instance on opcode comparison that delineates the gas saving mechanism:</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"\" data-index=\"50\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">for !=0 before optimization</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PUSH1 0x00</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">DUP2</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">EQ</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ISZERO</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PUSH1 [cont offset]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">JUMPI</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">after optimization</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">DUP1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">PUSH1 [revert offset]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">JUMPI</span></span></code></pre>\n<p><em>Disclaimer: There have been several bugs with security implications related to optimizations. For this reason, Solidity compiler optimizations are disabled by default, and it is unclear how many contracts in the wild actually use them. Therefore, it is unclear how well they are being tested and exercised. High-severity security issues due to optimization bugs have occurred in the past . A high-severity bug in the <code>emscripten -generated solc-js</code> compiler used by Truffle and Remix persisted until late 2018. The fix for this bug was not reported in the Solidity <code>CHANGELOG</code>. Another high-severity optimization bug resulting in incorrect bit shift results was patched in Solidity 0.5.6. Please measure the gas savings from optimizations, and carefully weigh them against the possibility of an optimization-related bug. Also, monitor the development and adoption of Solidity compiler optimizations to assess their maturity.</em></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/114#issuecomment-1600809968\">manoj9april (Stader) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/114#issuecomment-1625500691\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Note as well <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/236\">#236</a> and <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/106\">#106</a> by the warden. </p>\n</blockquote>\n<p> <em>Note: Issues 236 and 106 have been included below, at the judge’s request.</em> </p>\n<h2 id=\"sd-collateral-contracts-deposit-mechanism\" style=\"position:relative;\"><a href=\"#sd-collateral-contracts-deposit-mechanism\" aria-label=\"sd collateral contracts deposit mechanism permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/236\"><code>SD Collateral</code> Contract’s Deposit Mechanism</a></h2>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L151-L191\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L151-L191</a><br>\n<a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L210-L213\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L210-L213</a></p>\n<p>The <code>SD Collateral</code> contract contains a vulnerability related to the deposit mechanism <code>depositSDAsCollateral function</code> due to price fluctuations in the <code>SD token</code>. This arises from the calculation of the minimum SD token amount required for onboarding validators and the subsequent check for sufficient collateral in the <code>hasEnoughSDCollateral</code> function. </p>\n<p>Specifically, <code>PermissionedNodeRegistry.checkInputKeysCountAndCollateral()</code> and <code>PermissionlessNodeRegistry.checkInputKeysCountAndCollateral()</code> externally calling the <code>hasEnoughSDCollateral</code> function are possibly going to run into DoS:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L706-L716\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L706-L716</a>\n<a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L667-L676\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L667-L676</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"51\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//checks if operator has enough SD collateral for adding `keyCount` keys</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//SD threshold for permissioned NOs is 0 for phase1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            !</span><span class=\"mtk11\">ISDCollateral</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getSDCollateral</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">hasEnoughSDCollateral</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">POOL_ID</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk12\">totalNonTerminalKeys</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">keyCount</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">NotEnoughSDCollateral</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span></code></pre>\n<h3 id=\"proof-of-concept-15\" style=\"position:relative;\"><a href=\"#proof-of-concept-15\" aria-label=\"proof of concept 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>The vulnerability can be demonstrated through the following steps:</p>\n<ol>\n<li>Price Fluctuation: Assume that the price of the <code>SD token</code> experiences a significant drop after an operator calculates and <a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L43-L52\">deposits</a> the minimum <code>SD token</code> amount required for onboarding validators.</li>\n<li>Calculation Discrepancy: The <a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L166-L177\"><code>getMinimumSDToBond</code></a> function, which determines the required <code>SD token</code> amount based on the current price is eventually invoked. However, due to the price drop, the calculated minimum <code>SD token</code> amount becomes larger than initially expected.</li>\n<li>Inadequate Collateral: Because the calculated minimum amount has increased, the operator’s balance is now considered insufficient, resulting in a false negative indication stemming from the returned values of functions <code>getRemainingSDToBond</code>,</li>\n</ol>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L183-L191\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L183-L191</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"52\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">getRemainingSDToBond</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_numValidator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">sdBalance</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">operatorSDBalance</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minSDToBond</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">getMinimumSDToBond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_numValidator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">sdBalance</span><span class=\"mtk1\"> &gt;= </span><span class=\"mtk12\">minSDToBond</span><span class=\"mtk1\"> ? </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> : </span><span class=\"mtk12\">minSDToBond</span><span class=\"mtk1\"> - </span><span class=\"mtk12\">sdBalance</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>and <code>hasEnoughSDCollateral</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L155-L161\">https://github.com/code-423n4/2023-06-stader/blob/7566b5a35f32ebd55d3578b8bd05c038feb7d9cc/contracts/SDCollateral.sol#L155-L161</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"53\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">hasEnoughSDCollateral</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint8</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_numValidator</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">getRemainingSDToBond</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_poolId</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_numValidator</span><span class=\"mtk1\">) == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<ol start=\"4\">\n<li>Rejection: As a consequence, <code>PermissionedNodeRegistry.checkInputKeysCountAndCollateral()</code> or <code>PermissionlessNodeRegistry.checkInputKeysCountAndCollateral()</code> reverts, disrupting the onboarding process for validators and creating inconsistency in collateral management.</li>\n</ol>\n<h3 id=\"recommended-mitigation-steps-15\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-15\" aria-label=\"recommended mitigation steps 15 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To address this vulnerability and ensure a more reliable deposit mechanism, the following mitigation steps are recommended:</p>\n<ol>\n<li>Atomic Deposit: Modify the deposit process to ensure atomicity. Instead of depositing <code>SD tokens</code> upfront, operators should perform the necessary calculations and checks first before depsoiting the exact required amount of <code>SD tokens</code> and executing the onboarding operation. This approach minimizes exposure to price fluctuations.</li>\n<li>Regular Monitoring: Implement a system to monitor and track the price of the <code>SD token</code> regularly. By staying informed about price fluctuations, operators can make informed decisions and adjust their actions accordingly.</li>\n<li>Dynamic Threshold Adjustment: Consider implementing dynamic threshold mechanisms that account for price fluctuations. By adjusting the thresholds based on the current <code>SD token</code> price, operators can maintain a more stable and consistent collateral management process.</li>\n</ol>\n<h3 id=\"assessed-type-13\" style=\"position:relative;\"><a href=\"#assessed-type-13\" aria-label=\"assessed type 13 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Oracle</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/236#issuecomment-1598263811\">manoj9april (Stader) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>TWAP of 24 hours solves this issue and is implemented in Oracles.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/236#issuecomment-1618246169\">Picodes (judge) decreased severity to QA and commented</a>:</strong></p>\n<blockquote>\n<p>Indeed there is already a TWAP to avoid sudden price drops which partially mitigates this. Downgrading to Low/QA.</p>\n</blockquote>\n<h2 id=\"unrestricted-access-to-the-createlot-function-in-the-auction-contract\" style=\"position:relative;\"><a href=\"#unrestricted-access-to-the-createlot-function-in-the-auction-contract\" aria-label=\"unrestricted access to the createlot function in the auction contract permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/106\">Unrestricted Access to the <code>createLot</code> Function in the <code>Auction</code> Contract</a></h2>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L48-L60\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L48-L60</a></p>\n<p>In the current design of the Stader ecosystem’s smart contracts, the <code>createLot</code> function of the <code>Auction</code> contract can be called by anyone. This allows arbitrary users to create an auction lot, leading to unintentional donations of their Stader tokens. As these tokens are upon completion of the auction, they are then transferred to the <code>treasury</code> if there is no bidder:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L114\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L114</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"54\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">IERC20</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getStaderToken</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">transfer</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getStaderTreasury</span><span class=\"mtk1\">(), </span><span class=\"mtk12\">_sdAmount</span><span class=\"mtk1\">)) {</span></span></span></code></pre>\n<p>or the ETH proceeds to the <code>stake pool manager</code>:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L102\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L102</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"55\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IStaderStakePoolManager</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getStakePoolManager</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">receiveEthFromAuction</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">ethAmount</span><span class=\"mtk1\">}();</span></span></span></code></pre>\n<p> This can lead to a loss of Stader tokens for users without any benefit in return.</p>\n<h3 id=\"proof-of-concept-16\" style=\"position:relative;\"><a href=\"#proof-of-concept-16\" aria-label=\"proof of concept 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Proof of Concept</h3>\n<p>In the <code>Auction</code> contract, the <code>createLot</code> function is open to all users:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L48\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/Auction.sol#L48</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"56\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">createLot</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sdAmount</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>In the <code>SDCollateral</code> contract, <code>createLot</code> is called in the context of slashing:</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SDCollateral.sol#L97\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SDCollateral.sol#L97</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"57\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">slashSD</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_sdToSlash</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">IAuction</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getAuctionContract</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">createLot</span><span class=\"mtk1\">(</span><span class=\"mtk12\">sdSlashed</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<p>Unfortunately, there is no restriction in place in the <code>Auction</code> contract that would prevent arbitrary users from calling <code>createLot</code> outside of a slashing context.</p>\n<h3 id=\"recommended-mitigation-steps-16\" style=\"position:relative;\"><a href=\"#recommended-mitigation-steps-16\" aria-label=\"recommended mitigation steps 16 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recommended Mitigation Steps</h3>\n<p>To address this vulnerability, consider applying one or both of the following changes:</p>\n<ol>\n<li>Modify the <code>Auction</code> contract to restrict the <code>createLot</code> function only to the <code>SDCollateral</code> contract or a specific privileged role. This can be achieved through the OpenZeppelin’s <code>AccessControl</code> contract or similar mechanism and it would ensure that the function can’t be trapping arbitrary users.</li>\n<li>Implement checks within the <code>createLot</code> function to validate the context of the call. For instance, the function could verify that the transaction is part of a slashing event before proceeding.</li>\n</ol>\n<p>In addition, make sure to properly communicate to your users the consequences and conditions of interacting with the <code>createLot</code> function to avoid unintentional token losses. Thoroughly test all changes to the contract to ensure they behave as expected without introducing new vulnerabilities.</p>\n<h3 id=\"assessed-type-14\" style=\"position:relative;\"><a href=\"#assessed-type-14\" aria-label=\"assessed type 14 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assessed type</h3>\n<p>Access Control</p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/106#issuecomment-1596604208\">manoj9april (Stader) disputed and commented</a>:</strong></p>\n<blockquote>\n<p>No person should be able to interact with this contract without understanding what it does.</p>\n</blockquote>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/236#issuecomment-1618246169\">Picodes (judge) decreased severity to QA and commented</a>:</strong></p>\n<blockquote>\n<p>This would be a safety check to prevent users from doing mistakes, so is of Non-Critical severity.</p>\n</blockquote>\n<hr>\n<h1 id=\"gas-optimizations\" style=\"position:relative;\"><a href=\"#gas-optimizations\" aria-label=\"gas optimizations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations</h1>\n<p>For this audit, 28 reports were submitted by wardens detailing gas optimizations. The <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/352\">report highlighted below</a> by <strong>JCN</strong> received the top score from the judge.</p>\n<p><em>The following wardens also submitted reports: <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/422\">bigtone</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/415\">niser93</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/413\">0xSmartContract</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/394\">Tomio</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/388\">c3phas</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/387\">ernestognw</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/382\">SM3_SS</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/378\">0xhacksmithh</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/372\">naman1778</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/365\">petrichor</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/361\">SAQ</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/360\">etherhood</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/359\">Raihan</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/325\">Rageur</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/320\">LaScaloneta</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/296\">koxuan</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/294\">DavidGiladi</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/288\">K42</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/281\">mgf15</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/280\">SAAJ</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/275\">sebghatullah</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/233\">matrix_0wl</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/183\">shamsulhaq123</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/157\">0x70C9</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/78\">Sathish9098</a>,\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/38\">0xWaitress</a> and\n<a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/27\">piyushshukla</a>.</em></p>\n<h1 id=\"summary-1\" style=\"position:relative;\"><a href=\"#summary-1\" aria-label=\"summary 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h1>\n<p>Some optimizations were benchmarked via the protocol’s tests, i.e. using the following config: <code>solc version 0.8.16</code>, <code>optimizer on</code>, and <code>200 runs</code>. Optimizations that were not benchmarked are explained via EVM gas costs and opcodes. </p>\n<p><strong>Please note that a fair amount of functions that undergo optimizations are not benchmarked in the tests. Therefore, the total gas saved in the functions below may actually be greater when considering the gas saved from instances that don’t include benchmarks</strong>.</p>\n<p>Below are the overall average gas savings for the following tested functions (with all the optimizations applied):</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Before</th>\n<th>After</th>\n<th>Avg Gas Savings</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Auction.claimSD</td>\n<td>8693</td>\n<td>8641</td>\n<td>52</td>\n</tr>\n<tr>\n<td>Auction.createLot</td>\n<td>105780</td>\n<td>103958</td>\n<td>1822</td>\n</tr>\n<tr>\n<td>NodeELRewardVault.withdraw</td>\n<td>122581</td>\n<td>120166</td>\n<td>2415</td>\n</tr>\n<tr>\n<td>OperatorRewardsCollector.claim</td>\n<td>35757</td>\n<td>35690</td>\n<td>67</td>\n</tr>\n<tr>\n<td>Penalty.updateTotalPenaltyAmount</td>\n<td>53839</td>\n<td>51089</td>\n<td>2750</td>\n</tr>\n<tr>\n<td>PermissionedNodeRegistry.addValidatorKeys</td>\n<td>973836</td>\n<td>962403</td>\n<td>11433</td>\n</tr>\n<tr>\n<td>PermissionedNodeRegistry.withdrawnValidators</td>\n<td>30196</td>\n<td>14323</td>\n<td>15873</td>\n</tr>\n<tr>\n<td>PermissionlessNodeRegistry.addValidatorKeys</td>\n<td>839030</td>\n<td>829233</td>\n<td>9797</td>\n</tr>\n<tr>\n<td>PermissionlessNodeRegistry.markValidatorReadyToDeposit</td>\n<td>81811</td>\n<td>81623</td>\n<td>188</td>\n</tr>\n<tr>\n<td>PermissionlessNodeRegistry.withdrawnValidators</td>\n<td>35136</td>\n<td>18608</td>\n<td>16528</td>\n</tr>\n<tr>\n<td>PermissionlessNodeRegistry.updateDepositStatusAndBlock</td>\n<td>34034</td>\n<td>14278</td>\n<td>19756</td>\n</tr>\n<tr>\n<td>SDCollateral.withdraw</td>\n<td>21499</td>\n<td>21169</td>\n<td>330</td>\n</tr>\n<tr>\n<td>SDCollateral.slashValidatorSD</td>\n<td>98107</td>\n<td>93733</td>\n<td>4374</td>\n</tr>\n<tr>\n<td>ValidatorWithdrawalVault.distributeRewards</td>\n<td>85468</td>\n<td>81847</td>\n<td>3621</td>\n</tr>\n<tr>\n<td>ValidatorWithdrawalVault.settleFunds</td>\n<td>130849</td>\n<td>117750</td>\n<td>13099</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Total gas saved across all listed functions: 102105</strong></p>\n<p><em>Notes</em>:</p>\n<ul>\n<li>The <a href=\"#gasreport-output-with-all-optimizations-applied\">Gas report</a> output, after all optimizations have been applied, can be found at the end of the report.</li>\n<li>The final diff for the contract, with all the optimizations applied, can be found <a href=\"https://gist.github.com/0xJCN/40a25671cde00e756fcfc43b7a5ec4af\">here</a>.</li>\n<li>The <code>Avg</code> gas for <code>NodeELRewardVault.withdraw</code> changes between tests and so the <code>Max</code> column (which remains the same) is used when benchmarking this function.</li>\n</ul>\n<h2 id=\"gas-optimizations-summary\" style=\"position:relative;\"><a href=\"#gas-optimizations-summary\" aria-label=\"gas optimizations summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gas Optimizations Summary</h2>\n<table>\n<thead>\n<tr>\n<th>Number</th>\n<th align=\"left\">Issue</th>\n<th align=\"center\">Instances</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[G-01]</td>\n<td align=\"left\">State variables can be cached instead of re-reading them from storage</td>\n<td align=\"center\">11</td>\n</tr>\n<tr>\n<td>[G-02]</td>\n<td align=\"left\">State variables can be packed into fewer storage slots</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td>[G-03]</td>\n<td align=\"left\">Structs can be packed into fewer storage slots</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td>[G-04]</td>\n<td align=\"left\">Refactor <code>external</code>/<code>internal</code> function to avoid unnecessary External Calls</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>[G-05]</td>\n<td align=\"left\">Refactor <code>external</code>/<code>internal</code> function to avoid unnecessary SLOAD</td>\n<td align=\"center\">8</td>\n</tr>\n<tr>\n<td>[G-06]</td>\n<td align=\"left\">Cache state variables outside of loop to avoid reading/writing storage on every iteration</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>[G-07]</td>\n<td align=\"left\">Cache external calls outside of loop to avoid re-calling function on each iteration</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>[G-08]</td>\n<td align=\"left\">Refactor code to avoid unnecessary SLOAD</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-09]</td>\n<td align=\"left\">Utilize return value from internal function to avoid unnecessary SLOAD</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td>[G-10]</td>\n<td align=\"left\">Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-11]</td>\n<td align=\"left\">Using storage instead of memory for structs/arrays saves gas</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td>[G-12]</td>\n<td align=\"left\">Using bools for storage incurs overhead</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G-13]</td>\n<td align=\"left\">Multiple accesses of a mapping/array should use a local variable cache</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td>[G-14]</td>\n<td align=\"left\">Combine events to save two <code>Glogtopic (375 gas)</code></td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G-15]</td>\n<td align=\"left\">Call environment variables directly instead of caching them</td>\n<td align=\"center\">-</td>\n</tr>\n<tr>\n<td>[G-16]</td>\n<td align=\"left\">Use assembly to perform efficient back-to-back calls</td>\n<td align=\"center\">3</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"g-01-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" style=\"position:relative;\"><a href=\"#g-01-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\" aria-label=\"g 01 state variables can be cached instead of re reading them from storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-01] State variables can be cached instead of re-reading them from storage</h2>\n<p>Caching of a state variable replaces each <code>Gwarmaccess (100 gas)</code> with a much cheaper stack read.</p>\n<p><em>There are 11 instances of this issue. (For in-depth details on this and all further gas optimizations with multiple instances, please see the warden’s <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/352\">full report</a>.)</em></p>\n<h2 id=\"g-02-state-variables-can-be-packed-into-fewer-storage-slots\" style=\"position:relative;\"><a href=\"#g-02-state-variables-can-be-packed-into-fewer-storage-slots\" aria-label=\"g 02 state variables can be packed into fewer storage slots permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-02] State variables can be packed into fewer storage slots</h2>\n<p>The EVM works with 32 byte words. Variables less than 32 bytes can be declared next to each other in storage and this will pack the values together into a single 32 byte storage slot (if the values combined are &#x3C;= 32 bytes). If the variables packed together are retrieved together in functions, we will effectively save ~2000 gas with every subsequent SLOAD for that storage slot. This is due to us incurring a <code>Gwarmaccess (100 gas)</code> versus a <code>Gcoldsload (2100 gas)</code>.</p>\n<p><em>There are 6 instances of this issue.</em></p>\n<h2 id=\"g-03-structs-can-be-packed-into-fewer-storage-slots\" style=\"position:relative;\"><a href=\"#g-03-structs-can-be-packed-into-fewer-storage-slots\" aria-label=\"g 03 structs can be packed into fewer storage slots permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-03] Structs can be packed into fewer storage slots</h2>\n<p>The EVM works with 32 byte words. Variables less than 32 bytes can be declared next to each other in storage and this will pack the values together into a single 32 byte storage slot (if values combined are &#x3C;= 32 bytes). If the variables packed together are retrieved together in functions (more likely with structs), we will effectively save ~2000 gas with every subsequent SLOAD for that storage slot. This is due to us incurring a <code>Gwarmaccess (100 gas)</code> versus a <code>Gcoldsload (2100 gas)</code>.</p>\n<p><em>There are 3 instances of this issue.</em></p>\n<h2 id=\"g-04-refactor-externalinternal-function-to-avoid-unnecessary-external-calls\" style=\"position:relative;\"><a href=\"#g-04-refactor-externalinternal-function-to-avoid-unnecessary-external-calls\" aria-label=\"g 04 refactor externalinternal function to avoid unnecessary external calls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-04] Refactor <code>external</code>/<code>internal</code> function to avoid unnecessary External Calls</h2>\n<p>The functions below perform external calls that are previously performed in the functions that invoke them. We can refactor the <code>external</code>/<code>internal</code> functions to pass the cached external calls into them and avoid the extra external calls that would otherwise take place in the <code>internal</code> functions.</p>\n<p><em>There are 4 instances of this issue.</em></p>\n<h2 id=\"g-05-refactor-externalinternal-function-to-avoid-unnecessary-sload\" style=\"position:relative;\"><a href=\"#g-05-refactor-externalinternal-function-to-avoid-unnecessary-sload\" aria-label=\"g 05 refactor externalinternal function to avoid unnecessary sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-05] Refactor <code>external</code>/<code>internal</code> function to avoid unnecessary SLOAD</h2>\n<p>The functions below read storage slots that are previously read in the functions that invoke them. We can refactor the <code>external</code>/<code>internal</code> functions to pass cached storage variables as stack variables and avoid the extra storage reads that would otherwise take place in the <code>internal</code> functions.</p>\n<p><em>There are 8 instances of this issue.</em></p>\n<h2 id=\"g-06-cache-state-variables-outside-of-loop-to-avoid-readingwriting-storage-on-every-iteration\" style=\"position:relative;\"><a href=\"#g-06-cache-state-variables-outside-of-loop-to-avoid-readingwriting-storage-on-every-iteration\" aria-label=\"g 06 cache state variables outside of loop to avoid readingwriting storage on every iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-06] Cache state variables outside of loop to avoid reading/writing storage on every iteration</h2>\n<p>Reading from storage should always try to be avoided within loops. In the following instances, we are able to cache state variables outside of the loop to save a <code>Gwarmaccess (100 gas)</code> per loop iteration.</p>\n<p><em>There are 4 instances of this issue.</em></p>\n<h2 id=\"g-07-cache-external-calls-outside-of-loop-to-avoid-re-calling-function-on-each-iteration\" style=\"position:relative;\"><a href=\"#g-07-cache-external-calls-outside-of-loop-to-avoid-re-calling-function-on-each-iteration\" aria-label=\"g 07 cache external calls outside of loop to avoid re calling function on each iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-07] Cache external calls outside of loop to avoid re-calling function on each iteration</h2>\n<p>Performing <code>STATICCALL</code>s that do not depend on variables incremented in loops should always try to be avoided within the loop. In the following instances, we are able to cache the external calls outside of the loop to save a <code>STATICCALL (100 gas)</code> per loop iteration.</p>\n<p>Total Instances: <code>2</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/UserWithdrawalManager.sol#L132-L139\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/UserWithdrawalManager.sol#L132-L139</a></p>\n<h3 id=\"cache-staderconfiggetminblockdelaytofinalizewithdrawrequest-outside-of-loop-to-save-1-staticcall-per-loop-iteration\" style=\"position:relative;\"><a href=\"#cache-staderconfiggetminblockdelaytofinalizewithdrawrequest-outside-of-loop-to-save-1-staticcall-per-loop-iteration\" aria-label=\"cache staderconfiggetminblockdelaytofinalizewithdrawrequest outside of loop to save 1 staticcall per loop iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache <code>staderConfig.getMinBlockDelayToFinalizeWithdrawRequest()</code> outside of loop to save 1 <code>STATICCALL</code> per loop iteration</h3>\n<p><strong>Note: This will also save 1 SLOAD (<code>staderConfig</code>) per loop iteration. In addition, this function is not benchmarked in the protocol’s tests and therefore the exact gas savings are not included here</strong>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"58\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">UserWithdrawalManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">132</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">requestId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">nextRequestIdToFinalize</span><span class=\"mtk1\">; </span><span class=\"mtk12\">requestId</span><span class=\"mtk1\"> &lt;= </span><span class=\"mtk12\">maxRequestIdToFinalize</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">133</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">UserWithdrawInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userWithdrawInfo</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userWithdrawRequests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">requestId</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">134</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">requiredEth</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userWithdrawInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ethExpected</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">135</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lockedEthX</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userWithdrawInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">ethXAmount</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">136</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">minEThRequiredToFinalizeRequest</span><span class=\"mtk1\"> = </span><span class=\"mtk10\">Math</span><span class=\"mtk1\">.</span><span class=\"mtk11\">min</span><span class=\"mtk1\">(</span><span class=\"mtk12\">requiredEth</span><span class=\"mtk1\">, (</span><span class=\"mtk12\">lockedEthX</span><span class=\"mtk1\"> * </span><span class=\"mtk12\">exchangeRate</span><span class=\"mtk1\">) / </span><span class=\"mtk12\">DECIMALS</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">138</span><span class=\"mtk1\">:                (</span><span class=\"mtk12\">ethToSendToFinalizeRequest</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">minEThRequiredToFinalizeRequest</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">pooledETH</span><span class=\"mtk1\">) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">139</span><span class=\"mtk1\">:                (</span><span class=\"mtk12\">userWithdrawInfo</span><span class=\"mtk1\">.</span><span class=\"mtk12\">requestBlock</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getMinBlockDelayToFinalizeWithdrawRequest</span><span class=\"mtk1\">() &gt; </span><span class=\"mtk3\">// @audit: external call on every iteration</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"59\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/UserWithdrawalManager.sol b/contracts/UserWithdrawalManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f563434..204239f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/UserWithdrawalManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/UserWithdrawalManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -128,6 +128,7 @@ contract UserWithdrawalManager is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 lockedEthXToBurn;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 ethToSendToFinalizeRequest;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 requestId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 minBlockDelay = staderConfig.getMinBlockDelayToFinalizeWithdrawRequest();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 pooledETH = poolManager.balance;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (requestId = nextRequestIdToFinalize; requestId &lt;= maxRequestIdToFinalize; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             UserWithdrawInfo memory userWithdrawInfo = userWithdrawRequests[requestId];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -136,7 +137,7 @@ contract UserWithdrawalManager is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             uint256 minEThRequiredToFinalizeRequest = Math.min(requiredEth, (lockedEthX * exchangeRate) / DECIMALS);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 (ethToSendToFinalizeRequest + minEThRequiredToFinalizeRequest &gt; pooledETH) ||</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                (userWithdrawInfo.requestBlock + staderConfig.getMinBlockDelayToFinalizeWithdrawRequest() &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                (userWithdrawInfo.requestBlock + minBlockDelay &gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                     block.number)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 break;</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessPool.sol#L94-L109\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessPool.sol#L94-L109</a></p>\n<h3 id=\"cache-return-values-from-inoderegistrystaderconfiggetpermissionlessnoderegistrypool_id-and-staderconfiggetethdepositcontract-outisde-of-loop-to-save-3-staticcall-100-gas-per-iteration\" style=\"position:relative;\"><a href=\"#cache-return-values-from-inoderegistrystaderconfiggetpermissionlessnoderegistrypool_id-and-staderconfiggetethdepositcontract-outisde-of-loop-to-save-3-staticcall-100-gas-per-iteration\" aria-label=\"cache return values from inoderegistrystaderconfiggetpermissionlessnoderegistrypool_id and staderconfiggetethdepositcontract outisde of loop to save 3 staticcall 100 gas per iteration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache return values from <code>INodeRegistry((staderConfig).getPermissionlessNodeRegistry()).POOL_ID()</code> and <code>staderConfig.getETHDepositContract()</code> outisde of loop to save 3 <code>STATICCALL (100 GAS)</code> per iteration</h3>\n<p><strong>Note: Caching the <code>staderConfig.getPreDepositSize()</code> calls are not included since it was included in the automated report. In addition, this function is not benchmarked in the protocol’s tests and therefore the exact gas savings are not included here</strong>.</p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"60\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">94</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">pubkeyCount</span><span class=\"mtk1\">; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">95</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawVault</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IVaultFactory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vaultFactory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">computeWithdrawVaultAddress</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:                </span><span class=\"mtk11\">INodeRegistry</span><span class=\"mtk1\">((</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getPermissionlessNodeRegistry</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">POOL_ID</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">// @audit: 2 external calls on every iteration</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_operatorId</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_operatorTotalKeys</span><span class=\"mtk1\"> + </span><span class=\"mtk12\">i</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">100</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">withdrawCredential</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">IVaultFactory</span><span class=\"mtk1\">(</span><span class=\"mtk12\">vaultFactory</span><span class=\"mtk1\">).</span><span class=\"mtk11\">getValidatorWithdrawCredential</span><span class=\"mtk1\">(</span><span class=\"mtk12\">withdrawVault</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">101</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">depositDataRoot</span><span class=\"mtk1\"> = </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.</span><span class=\"mtk11\">computeDepositDataRoot</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_pubkey</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">_preDepositSignature</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">105</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">withdrawCredential</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPreDepositSize</span><span class=\"mtk1\">() </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">107</span><span class=\"mtk1\">:            );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">108</span><span class=\"mtk1\">:            </span><span class=\"mtk3\">//slither-disable-next-line arbitrary-send-eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">109</span><span class=\"mtk1\">:            </span><span class=\"mtk11\">IDepositContract</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getETHDepositContract</span><span class=\"mtk1\">()).</span><span class=\"mtk12\">deposit</span><span class=\"mtk1\">{value: </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPreDepositSize</span><span class=\"mtk1\">()}( </span><span class=\"mtk3\">// @audit: external call on every iteration</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"61\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/PermissionlessPool.sol b/contracts/PermissionlessPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 046761d..ef0e3bf 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/PermissionlessPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/PermissionlessPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -83,17 +83,19 @@ contract PermissionlessPool is IStaderPoolBase, Initializable, AccessControlUpgr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      * @param _operatorTotalKeys total keys of operator at the starting of adding new keys</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function preDepositOnBeaconChain(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        bytes[] calldata _pubkey,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        bytes[] calldata _preDepositSignature,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes[] memory _pubkey,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes[] memory _preDepositSignature,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _operatorId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _operatorTotalKeys</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) external payable nonReentrant {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         UtilLib.onlyStaderContract(msg.sender, staderConfig, staderConfig.PERMISSIONLESS_NODE_REGISTRY());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address vaultFactory = staderConfig.getVaultFactory();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 pubkeyCount = _pubkey.length;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint8 poolId = INodeRegistry((staderConfig).getPermissionlessNodeRegistry()).POOL_ID();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address ethDepositContract = staderConfig.getETHDepositContract();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         for (uint256 i; i &lt; pubkeyCount; ) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             address withdrawVault = IVaultFactory(vaultFactory).computeWithdrawVaultAddress(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                INodeRegistry((staderConfig).getPermissionlessNodeRegistry()).POOL_ID(),</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                poolId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _operatorId,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _operatorTotalKeys + i</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -106,7 +108,7 @@ contract PermissionlessPool is IStaderPoolBase, Initializable, AccessControlUpgr</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 staderConfig.getPreDepositSize()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             //slither-disable-next-line arbitrary-send-eth</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            IDepositContract(staderConfig.getETHDepositContract()).deposit{value: staderConfig.getPreDepositSize()}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            IDepositContract(ethDepositContract).deposit{value: staderConfig.getPreDepositSize()}(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _pubkey[i],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 withdrawCredential,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 _preDepositSignature[i],</span></span></span></code></pre>\n<h2 id=\"g-08-refactor-code-to-avoid-unnecessary-sload\" style=\"position:relative;\"><a href=\"#g-08-refactor-code-to-avoid-unnecessary-sload\" aria-label=\"g 08 refactor code to avoid unnecessary sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-08] Refactor code to avoid unnecessary SLOAD</h2>\n<p>Line 49 is essentially setting <code>balances[operator]</code> to 0. Instead of performing an extra SLOAD in the expression, we can simply set the mapping to 0.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/OperatorRewardsCollector.sol#L46-L49\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/OperatorRewardsCollector.sol#L46-L49</a></p>\n<p><em>Gas Savings for <code>OperatorRewardsCollector.claim</code>, obtained via protocol’s tests: Avg 67 gas</em></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Med</th>\n<th>Max</th>\n<th>Avg</th>\n<th># calls</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Before</td>\n<td>35757</td>\n<td>35757</td>\n<td>35757</td>\n<td>3</td>\n</tr>\n<tr>\n<td>After</td>\n<td>35690</td>\n<td>35690</td>\n<td>35690</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"62\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">OperatorRewardsCollector</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">46</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">() </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">47</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">48</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">amount</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">// @audit: 1st sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">49</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">balances</span><span class=\"mtk1\">[</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">] -= </span><span class=\"mtk12\">amount</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"63\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/OperatorRewardsCollector.sol b/contracts/OperatorRewardsCollector.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index e80db8a..d284367 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/OperatorRewardsCollector.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/OperatorRewardsCollector.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -46,7 +46,7 @@ contract OperatorRewardsCollector is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function claim() external whenNotPaused {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address operator = msg.sender;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 amount = balances[operator];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        balances[operator] -= amount;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        balances[operator] = 0;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         address operatorRewardsAddr = UtilLib.getOperatorRewardAddress(msg.sender, staderConfig);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         UtilLib.sendValue(operatorRewardsAddr, amount);</span></span></span></code></pre>\n<h2 id=\"g-09-utilize-return-value-from-internal-function-to-avoid-unnecessary-sload\" style=\"position:relative;\"><a href=\"#g-09-utilize-return-value-from-internal-function-to-avoid-unnecessary-sload\" aria-label=\"g 09 utilize return value from internal function to avoid unnecessary sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-09] Utilize return value from internal function to avoid unnecessary SLOAD</h2>\n<p>The return value from the <code>onlyActiveOperator</code> internal function is <code>operatorIDByAddress[_operAddr]</code>. In the instances below, the return value is ignored and <code>operatorIDByAddress[msg.sender]</code> is being redundantly read from storage. Utilize the return value to save 1 SLOAD.</p>\n<p>Total Instances: <code>2</code></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L401-L405\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L401-L405</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L720-L721\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionedNodeRegistry.sol#L720-L721</a></p>\n<h3 id=\"cache-return-value-from-onlyactiveoperator-inside-of-operatorid-to-save-1-sload\" style=\"position:relative;\"><a href=\"#cache-return-value-from-onlyactiveoperator-inside-of-operatorid-to-save-1-sload\" aria-label=\"cache return value from onlyactiveoperator inside of operatorid to save 1 sload permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache return value from <code>onlyActiveOperator</code> inside of <code>operatorId</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"64\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionedNodeRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">401</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateOperatorDetails</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operatorName</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rewardAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">402</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IPoolUtils</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPoolUtils</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">onlyValidName</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_operatorName</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">403</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">checkNonZeroAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">404</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">onlyActiveOperator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 1st sload for `operatorIDByAddress[msg.sender]`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">405</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">operatorIDByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">720</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyActiveOperator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operAddr</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operatorId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">721</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_operatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">operatorIDByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_operAddr</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"65\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/PermissionedNodeRegistry.sol b/contracts/PermissionedNodeRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index ca8aa81..80cfa7c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/PermissionedNodeRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/PermissionedNodeRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -401,8 +401,7 @@ contract PermissionedNodeRegistry is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function updateOperatorDetails(string calldata _operatorName, address payable _rewardAddress) external override {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         IPoolUtils(staderConfig.getPoolUtils()).onlyValidName(_operatorName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         UtilLib.checkNonZeroAddress(_rewardAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        onlyActiveOperator(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 operatorId = operatorIDByAddress[msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 operatorId = onlyActiveOperator(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         operatorStructById[operatorId].operatorName = _operatorName;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         operatorStructById[operatorId].operatorRewardAddress = _rewardAddress;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit UpdatedOperatorDetails(msg.sender, _operatorName, _rewardAddress);</span></span></span></code></pre>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L366-L370\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L366-L370</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L680-L681\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/PermissionlessNodeRegistry.sol#L680-L681</a></p>\n<h3 id=\"cache-return-value-from-onlyactiveoperator-inside-of-operatorid-to-save-1-sload-1\" style=\"position:relative;\"><a href=\"#cache-return-value-from-onlyactiveoperator-inside-of-operatorid-to-save-1-sload-1\" aria-label=\"cache return value from onlyactiveoperator inside of operatorid to save 1 sload 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cache return value from <code>onlyActiveOperator</code> inside of <code>operatorId</code> to save 1 SLOAD</h3>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"66\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">PermissionlessNodeRegistry</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">366</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">updateOperatorDetails</span><span class=\"mtk1\">(</span><span class=\"mtk12\">string</span><span class=\"mtk1\"> </span><span class=\"mtk12\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operatorName</span><span class=\"mtk1\">, </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">payable</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_rewardAddress</span><span class=\"mtk1\">) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">367</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">IPoolUtils</span><span class=\"mtk1\">(</span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getPoolUtils</span><span class=\"mtk1\">()).</span><span class=\"mtk11\">onlyValidName</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_operatorName</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">368</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">checkNonZeroAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardAddress</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">369</span><span class=\"mtk1\">:        </span><span class=\"mtk11\">onlyActiveOperator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">); </span><span class=\"mtk3\">// @audit: 1st sload for `operatorIDByAddress[msg.sender]`</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">370</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">operatorIDByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">// @audit: 2nd sload</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">680</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">onlyActiveOperator</span><span class=\"mtk1\">(</span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operAddr</span><span class=\"mtk1\">) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_operatorId</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">681</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">_operatorId</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">operatorIDByAddress</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_operAddr</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"67\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/PermissionlessNodeRegistry.sol b/contracts/PermissionlessNodeRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 9640556..5c06f22 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/PermissionlessNodeRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/PermissionlessNodeRegistry.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -366,8 +366,7 @@ contract PermissionlessNodeRegistry is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function updateOperatorDetails(string calldata _operatorName, address payable _rewardAddress) external override {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         IPoolUtils(staderConfig.getPoolUtils()).onlyValidName(_operatorName);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         UtilLib.checkNonZeroAddress(_rewardAddress);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        onlyActiveOperator(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        uint256 operatorId = operatorIDByAddress[msg.sender];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 operatorId = onlyActiveOperator(msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         operatorStructById[operatorId].operatorName = _operatorName;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         operatorStructById[operatorId].operatorRewardAddress = _rewardAddress;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         emit UpdatedOperatorDetails(msg.sender, _operatorName, _rewardAddress);</span></span></span></code></pre>\n<h2 id=\"g-10-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" style=\"position:relative;\"><a href=\"#g-10-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\" aria-label=\"g 10 multiple address mappings can be combined into a single mapping of an address to a struct where appropriate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-10] Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</h2>\n<p>We can combine multiple mappings below into structs. We can then pack the structs by modifying the <code>uint type</code> for the values. This will result in cheaper storage reads since multiple mappings are accessed in functions and those values are now occupying the same storage slot, meaning the slot will become warm after the first SLOAD. In addition, when writing to and reading from the struct values we will avoid a <code>Gsset (20000 gas)</code> and <code>Gcoldsload (2100 gas)</code>, since multiple struct values are now occupying the same slot.</p>\n<p><strong>Note: This instance was missed by the automated report</strong>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L30-L32\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L30-L32</a></p>\n<h3 id=\"save-at-least-two-gsset-20000-gas-when-the-handlerewards-function-is-called-handledrewards-poolid-and-reportingblocknumber-are-all-set-in-storage-but-since-they-are-contained-in-a-single-slot-only-one-gsset-20000-is-paid\" style=\"position:relative;\"><a href=\"#save-at-least-two-gsset-20000-gas-when-the-handlerewards-function-is-called-handledrewards-poolid-and-reportingblocknumber-are-all-set-in-storage-but-since-they-are-contained-in-a-single-slot-only-one-gsset-20000-is-paid\" aria-label=\"save at least two gsset 20000 gas when the handlerewards function is called handledrewards poolid and reportingblocknumber are all set in storage but since they are contained in a single slot only one gsset 20000 is paid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Save at least two <code>Gsset (20000 gas)</code> when the <code>handleRewards</code> function is called (<code>handledRewards</code>, <code>poolId</code>, and <code>reportingBlockNumber</code> are all set in storage, but since they are contained in a single slot only one <code>Gsset (20000)</code> is paid).</h3>\n<p><strong><em>In order for this optimization to result in impactful gas savings, we will need to pack the <code>poolId</code> and <code>reportingBlockNumber</code> in the <code>RewardsData</code> struct (we can safely reduce the <code>uint</code> type for <code>reportingBlockNumber</code> to <code>uint48</code>). We can then also pack the <code>handledRewards</code> variable with <code>poolId</code> and <code>reportingBlockNumber</code> by declaring it after the <code>RewardsData</code> struct in our newly created <code>RewardsInfo</code> struct.</em></strong></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"68\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SocializingPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">30</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">handledRewards</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">31</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">RewardsData</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">lastReportedRewardsData</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">32</span><span class=\"mtk1\">:    </span><span class=\"mtk11\">mapping</span><span class=\"mtk1\">(</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">RewardsData</span><span class=\"mtk1\">) </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">rewardsDataMap</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"69\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/SocializingPool.sol b/contracts/SocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 19d8cb2..90b68de 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/SocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/SocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -26,10 +26,15 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 public override totalOperatorSDRewardsRemaining;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 public override initialBlock;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    struct RewardsInfo {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        RewardsData rewardsDataMap;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bool handledRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    mapping(uint256 =&gt; RewardsInfo) rewardsInfo;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     mapping(address =&gt; mapping(uint256 =&gt; bool)) public override claimedRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    mapping(uint256 =&gt; bool) public handledRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     RewardsData public lastReportedRewardsData;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    mapping(uint256 =&gt; RewardsData) public rewardsDataMap;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @custom:oz-upgrades-unsafe-allow constructor</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     constructor() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -60,8 +65,9 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function handleRewards(RewardsData calldata _rewardsData) external override nonReentrant {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         UtilLib.onlyStaderContract(msg.sender, staderConfig, staderConfig.STADER_ORACLE());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (handledRewards[_rewardsData.index]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        RewardsInfo storage _rewardsInfo = rewardsInfo[_rewardsData.index];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (_rewardsInfo.handledRewards) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert RewardAlreadyHandled();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -77,12 +83,12 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert InsufficientSDRewards();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        handledRewards[_rewardsData.index] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _rewardsInfo.handledRewards = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         totalOperatorETHRewardsRemaining += _rewardsData.operatorETHRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         totalOperatorSDRewardsRemaining += _rewardsData.operatorSDRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         lastReportedRewardsData = _rewardsData;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        rewardsDataMap[_rewardsData.index] = _rewardsData;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _rewardsInfo.rewardsDataMap = _rewardsData;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         IStaderStakePoolManager(staderConfig.getStakePoolManager()).receiveExecutionLayerRewards{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             value: _rewardsData.userETHRewards</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -170,7 +176,7 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (_index == 0 || _index &gt; lastReportedRewardsData.index) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert InvalidCycleIndex();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        bytes32 merkleRoot = rewardsDataMap[_index].merkleRoot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes32 merkleRoot = rewardsInfo[_index].rewardsDataMap.merkleRoot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32 node = keccak256(abi.encodePacked(_operator, _amountSD, _amountETH));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return MerkleProofUpgradeable.verify(_merkleProof, merkleRoot, node);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -214,15 +220,16 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // for past cycles</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        _startBlock = rewardsDataMap[_index - 1].reportingBlockNumber + 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        _endBlock = rewardsDataMap[_index].reportingBlockNumber;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _startBlock = rewardsInfo[_index - 1].rewardsDataMap.reportingBlockNumber + 1;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        _endBlock = rewardsInfo[_index].rewardsDataMap.reportingBlockNumber;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // for current cycle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (rewardsDataMap[_index].reportingBlockNumber == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (rewardsDataMap[_index - 1].reportingBlockNumber == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (rewardsInfo[_index].rewardsDataMap.reportingBlockNumber == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (rewardsInfo[_index - 1].rewardsDataMap.reportingBlockNumber == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert FutureCycleIndex();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            _endBlock = rewardsDataMap[_index - 1].reportingBlockNumber + cycleDuration;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            _endBlock = rewardsInfo[_index - 1].rewardsDataMap.reportingBlockNumber + cycleDuration;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"70\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/interfaces/ISocializingPool.sol b/contracts/interfaces/ISocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index aceee8b..ab49093 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/interfaces/ISocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/interfaces/ISocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -7,14 +7,10 @@ import &#39;./IStaderConfig.sol&#39;;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> /// @title RewardsData</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> /// @notice This struct holds rewards merkleRoot and rewards split</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> struct RewardsData {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    /// @notice The block number when the rewards data was last updated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint256 reportingBlockNumber;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice The index of merkle tree or rewards cycle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 index;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice The merkle root hash</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     bytes32 merkleRoot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    /// @notice pool id of operators</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    uint8 poolId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice operator ETH rewards for index cycle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 operatorETHRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice user ETH rewards for index cycle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -23,6 +19,10 @@ struct RewardsData {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 protocolETHRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     /// @notice operator SD rewards for index cycle</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     uint256 operatorSDRewards;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    /// @notice pool id of operators</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint8 poolId;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    /// @notice The block number when the rewards data was last updated</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    uint48 reportingBlockNumber;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> interface ISocializingPool {</span></span></span></code></pre>\n<h2 id=\"g-11-using-storage-instead-of-memory-for-structsarrays-saves-gas\" style=\"position:relative;\"><a href=\"#g-11-using-storage-instead-of-memory-for-structsarrays-saves-gas\" aria-label=\"g 11 using storage instead of memory for structsarrays saves gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-11] Using storage instead of memory for structs/arrays saves gas</h2>\n<p>The function in the instance below only reads 3 out of 5 struct fields. It is performing two unnecessary <code>Gcoldsload (2100 gas)</code>. We can change <code>memory</code> to <code>storage</code> in order to save those two SLOADs. <em>Note: we will also need to cache the <code>owner</code> struct field since it is accessed multiple times.</em></p>\n<p><strong>Note: This is an instance missed by the automated report</strong>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/UserWithdrawalManager.sol#L169\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/UserWithdrawalManager.sol#L169</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"71\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">UserWithdrawalManager</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">169</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">UserWithdrawInfo</span><span class=\"mtk1\"> </span><span class=\"mtk12\">memory</span><span class=\"mtk1\"> </span><span class=\"mtk12\">userRequest</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">userWithdrawRequests</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_requestId</span><span class=\"mtk1\">];</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"72\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/UserWithdrawalManager.sol b/contracts/UserWithdrawalManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index f563434..a12919f 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/UserWithdrawalManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/UserWithdrawalManager.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -166,8 +166,9 @@ contract UserWithdrawalManager is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (_requestId &gt;= nextRequestIdToFinalize) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert requestIdNotFinalized(_requestId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        UserWithdrawInfo memory userRequest = userWithdrawRequests[_requestId];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        if (msg.sender != userRequest.owner) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        UserWithdrawInfo storage userRequest = userWithdrawRequests[_requestId];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address payable _owner = userRequest.owner;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        if (msg.sender != _owner) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert CallerNotAuthorizedToRedeem();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         // below is a default entry as no userRequest will be found for a redeemed request.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -175,9 +176,9 @@ contract UserWithdrawalManager is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert RequestAlreadyRedeemed(_requestId);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 etherToTransfer = userRequest.ethFinalized;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        deleteRequestId(_requestId, userRequest.owner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        sendValue(userRequest.owner, etherToTransfer);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        emit RequestRedeemed(msg.sender, userRequest.owner, etherToTransfer);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        deleteRequestId(_requestId, _owner);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        sendValue(_owner, etherToTransfer);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        emit RequestRedeemed(msg.sender, _owner, etherToTransfer);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span></code></pre>\n<h2 id=\"g-12-using-bools-for-storage-incurs-overhead\" style=\"position:relative;\"><a href=\"#g-12-using-bools-for-storage-incurs-overhead\" aria-label=\"g 12 using bools for storage incurs overhead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-12] Using bools for storage incurs overhead</h2>\n<p>Both state variables can potentially be set back and forth from <code>true</code> and <code>false</code>. This would result in a <code>Gsset (20000 gas)</code> everytime the values are set to <code>true</code> from <code>false</code>. We can instead use <code>uint(1)</code> in place of <code>true</code> and <code>uint(2)</code> in place of <code>false</code> and pay the <code>Gsset (20000 gas)</code> once during deployment (to set the slot to <code>uint(1)</code>. This would save two <code>Gsset (20000 gas)</code>. However, a more efficient mitigation would be to pack the variables into a slot with other variables that would inevitably be written to. Please see <a href=\"https://github.com/code-423n4/2022-06-stader-findings/blob/main/data/JCN-G.md#pack-erinspectionmode-isporfeedbasederdata-erinspectionmodestartblock-staderconfig-and-exchangerate-into-one-slot-to-save-4-slots-8000-gas\">this finding</a> for a more efficient solution.</p>\n<p><strong>Note: This is an instance missed by the automated report</strong>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L18-L19\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/StaderOracle.sol#L18-L19</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"73\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">StaderOracle</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">18</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">erInspectionMode</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">19</span><span class=\"mtk1\">:    </span><span class=\"mtk12\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk12\">public</span><span class=\"mtk1\"> </span><span class=\"mtk12\">override</span><span class=\"mtk1\"> </span><span class=\"mtk12\">isPORFeedBasedERData</span><span class=\"mtk1\">;</span></span></span></code></pre>\n<h2 id=\"g-13-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" style=\"position:relative;\"><a href=\"#g-13-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\" aria-label=\"g 13 multiple accesses of a mappingarray should use a local variable cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-13] Multiple accesses of a mapping/array should use a local variable cache</h2>\n<p>Caching a mapping’s value in a storage pointer when the value is accessed multiple times saves ~40 gas per access due to not having to perform the same offset calculation every time. Help the Optimizer by saving a storage variable’s reference instead of repeatedly fetching it.</p>\n<p>To achieve this, declare a storage pointer for the variable and use it instead of repeatedly fetching the reference in a map or an array. As an example, instead of repeatedly calling <code>stakes[tokenId_]</code>, save its reference via a storage pointer: <code>StakeInfo storage stakeInfo = stakes[tokenId_]</code> and use the pointer instead.</p>\n<p><em>There are 4 instances of this issue.</em></p>\n<h2 id=\"g-14-combine-events-to-save-2-glogtopic-375-gas\" style=\"position:relative;\"><a href=\"#g-14-combine-events-to-save-2-glogtopic-375-gas\" aria-label=\"g 14 combine events to save 2 glogtopic 375 gas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-14] Combine events to save 2 <code>Glogtopic (375 gas)</code></h2>\n<p>The events below are only emitted once in the <code>handleRewards</code> function. We can combine the events into one singular event to save two <code>Glogtopic (375 gas)</code> that would otherwise be paid for the additional two events.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L96-L104\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L96-L104</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"74\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SocializingPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">96</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">OperatorRewardsUpdated</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">97</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorETHRewards</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">98</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">totalOperatorETHRewardsRemaining</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">99</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">operatorSDRewards</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">100</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">totalOperatorSDRewardsRemaining</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">101</span><span class=\"mtk1\">:        );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">102</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">103</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">UserETHRewardsTransferred</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">userETHRewards</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">104</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">emit</span><span class=\"mtk1\"> </span><span class=\"mtk11\">ProtocolETHRewardsTransferred</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_rewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">protocolETHRewards</span><span class=\"mtk1\">);</span></span></span></code></pre>\n<h2 id=\"g-15-call-environment-variables-directly-instead-of-caching-them\" style=\"position:relative;\"><a href=\"#g-15-call-environment-variables-directly-instead-of-caching-them\" aria-label=\"g 15 call environment variables directly instead of caching them permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-15] Call environment variables directly instead of caching them</h2>\n<p>In the instance below, instead of caching <code>msg.sender</code> and incurring unnecessary stack manipulation, we can call <code>msg.sender</code> directly. <code>msg.sender</code> costs 2 Gas while the extra stack manipulation will cost 3 Gas per <code>DUP</code>. <em>Note: that the cached variable is used multiple times within a loop (see <a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L137-L161\"><code>_claim</code></a>).</em></p>\n<p><strong>Note: This function is not benchmarked in the protocol’s tests and therefore exact gas savings is not included for this instance</strong>.</p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L107-L116\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L107-L116</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L137-L161\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L137-L161</a></p>\n<p><a href=\"https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L163-L174\">https://github.com/code-423n4/2023-06-stader/blob/main/contracts/SocializingPool.sol#L163-L174</a></p>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"solidity\" data-index=\"75\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">File: </span><span class=\"mtk12\">contracts</span><span class=\"mtk1\">/</span><span class=\"mtk12\">SocializingPool</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">106</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">claim</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">107:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_index</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">108:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_amountSD</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">109:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_amountETH</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">110:        </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[][] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_merkleProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">111</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">external</span><span class=\"mtk1\"> </span><span class=\"mtk11\">override</span><span class=\"mtk1\"> </span><span class=\"mtk11\">nonReentrant</span><span class=\"mtk1\"> </span><span class=\"mtk11\">whenNotPaused</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">112</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operator</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">msg</span><span class=\"mtk1\">.</span><span class=\"mtk12\">sender</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">113</span><span class=\"mtk1\">:        (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalAmountSD</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">totalAmountETH</span><span class=\"mtk1\">) = </span><span class=\"mtk11\">_claim</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">, </span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amountSD</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amountETH</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_merkleProof</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">114</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">115</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">address</span><span class=\"mtk1\"> </span><span class=\"mtk12\">operatorRewardsAddr</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">UtilLib</span><span class=\"mtk1\">.</span><span class=\"mtk11\">getOperatorRewardAddress</span><span class=\"mtk1\">(</span><span class=\"mtk12\">operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">staderConfig</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">137</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">_claim</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">138:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_index</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">139:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// @audit: cached msg.sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">140:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_amountSD</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">141:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_amountETH</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">142:        </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[][] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_merkleProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">143</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">internal</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_totalAmountSD</span><span class=\"mtk1\">, </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">_totalAmountETH</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">144</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">indexLength</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">_index</span><span class=\"mtk1\">.</span><span class=\"mtk12\">length</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">145</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> = </span><span class=\"mtk7\">0</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\"> &lt; </span><span class=\"mtk12\">indexLength</span><span class=\"mtk1\">; </span><span class=\"mtk12\">i</span><span class=\"mtk1\">++) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">146</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_amountSD</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> &amp;&amp; </span><span class=\"mtk12\">_amountETH</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">] == </span><span class=\"mtk7\">0</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">147</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidAmount</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">148</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">149</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">claimedRewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">150</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">RewardAlreadyClaimed</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_index</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">151</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">152</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">153</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_totalAmountSD</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amountSD</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">154</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">_totalAmountETH</span><span class=\"mtk1\"> += </span><span class=\"mtk12\">_amountETH</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">155</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">claimedRewards</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">][</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">]] = </span><span class=\"mtk4\">true</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">156</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">157</span><span class=\"mtk1\">:            </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (!</span><span class=\"mtk11\">verifyProof</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amountSD</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_amountETH</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_merkleProof</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">158</span><span class=\"mtk1\">:                </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidProof</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">[</span><span class=\"mtk12\">i</span><span class=\"mtk1\">], </span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">159</span><span class=\"mtk1\">:            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">160</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">161</span><span class=\"mtk1\">:    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">163</span><span class=\"mtk1\">:    </span><span class=\"mtk4\">function</span><span class=\"mtk1\"> </span><span class=\"mtk11\">verifyProof</span><span class=\"mtk1\">(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">164:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_index</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">165:        </span><span class=\"mtk10\">address</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk3\">// @audit: cached msg.sender</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">166:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_amountSD</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">167:        </span><span class=\"mtk10\">uint256</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_amountETH</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">168:        </span><span class=\"mtk10\">bytes32</span><span class=\"mtk1\">[] </span><span class=\"mtk10\">calldata</span><span class=\"mtk1\"> </span><span class=\"mtk10\">_merkleProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">169</span><span class=\"mtk1\">:    ) </span><span class=\"mtk11\">public</span><span class=\"mtk1\"> </span><span class=\"mtk11\">view</span><span class=\"mtk1\"> </span><span class=\"mtk11\">returns</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">bool</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">170</span><span class=\"mtk1\">:        </span><span class=\"mtk15\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk12\">_index</span><span class=\"mtk1\"> == </span><span class=\"mtk7\">0</span><span class=\"mtk1\"> || </span><span class=\"mtk12\">_index</span><span class=\"mtk1\"> &gt; </span><span class=\"mtk12\">lastReportedRewardsData</span><span class=\"mtk1\">.</span><span class=\"mtk12\">index</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">171</span><span class=\"mtk1\">:            </span><span class=\"mtk12\">revert</span><span class=\"mtk1\"> </span><span class=\"mtk11\">InvalidCycleIndex</span><span class=\"mtk1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">172</span><span class=\"mtk1\">:        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">173</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\"> = </span><span class=\"mtk12\">rewardsDataMap</span><span class=\"mtk1\">[</span><span class=\"mtk12\">_index</span><span class=\"mtk1\">].</span><span class=\"mtk12\">merkleRoot</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">174</span><span class=\"mtk1\">:        </span><span class=\"mtk12\">bytes32</span><span class=\"mtk1\"> </span><span class=\"mtk12\">node</span><span class=\"mtk1\"> = </span><span class=\"mtk11\">keccak256</span><span class=\"mtk1\">(</span><span class=\"mtk12\">abi</span><span class=\"mtk1\">.</span><span class=\"mtk11\">encodePacked</span><span class=\"mtk1\">(</span><span class=\"mtk12\">_operator</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amountSD</span><span class=\"mtk1\">, </span><span class=\"mtk12\">_amountETH</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<pre class=\"grvsc-container dark-default-dark\" data-language=\"diff\" data-index=\"76\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">diff --git a/contracts/SocializingPool.sol b/contracts/SocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">index 19d8cb2..c504d2c 100644</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">--- a/contracts/SocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">+++ b/contracts/SocializingPool.sol</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -110,10 +110,9 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] calldata _amountETH,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32[][] calldata _merkleProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     ) external override nonReentrant whenNotPaused {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address operator = msg.sender;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        (uint256 totalAmountSD, uint256 totalAmountETH) = _claim(_index, operator, _amountSD, _amountETH, _merkleProof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        (uint256 totalAmountSD, uint256 totalAmountETH) = _claim(_index, _amountSD, _amountETH, _merkleProof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address operatorRewardsAddr = UtilLib.getOperatorRewardAddress(operator, staderConfig);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address operatorRewardsAddr = UtilLib.getOperatorRewardAddress(msg.sender, staderConfig);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bool success;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (totalAmountETH &gt; 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -136,7 +135,6 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function _claim(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] calldata _index,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address _operator,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] calldata _amountSD,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256[] calldata _amountETH,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32[][] calldata _merkleProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">@@ -146,35 +144,44 @@ contract SocializingPool is</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             if (_amountSD[i] == 0 &amp;&amp; _amountETH[i] == 0) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                 revert InvalidAmount();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (claimedRewards[_operator][_index[i]]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                revert RewardAlreadyClaimed(_operator, _index[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (claimedRewards[msg.sender][_index[i]]) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert RewardAlreadyClaimed(msg.sender, _index[i]);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _totalAmountSD += _amountSD[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             _totalAmountETH += _amountETH[i];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            claimedRewards[_operator][_index[i]] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            claimedRewards[msg.sender][_index[i]] = true;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-            if (!verifyProof(_index[i], _operator, _amountSD[i], _amountETH[i], _merkleProof[i])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-                revert InvalidProof(_index[i], _operator);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+            if (!_verifyProof(_index[i], _amountSD[i], _amountETH[i], _merkleProof[i])) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+                revert InvalidProof(_index[i], msg.sender);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    function verifyProof(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function _verifyProof(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _index,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        address _operator,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _amountSD,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         uint256 _amountETH,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32[] calldata _merkleProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-    ) public view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ) internal view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         if (_index == 0 || _index &gt; lastReportedRewardsData.index) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">             revert InvalidCycleIndex();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         bytes32 merkleRoot = rewardsDataMap[_index].merkleRoot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk8\">-        bytes32 node = keccak256(abi.encodePacked(_operator, _amountSD, _amountETH));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes32 node = keccak256(abi.encodePacked(msg.sender, _amountSD, _amountETH));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         return MerkleProofUpgradeable.verify(_merkleProof, merkleRoot, node);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    function verifyProof(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _index,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        address _operator,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _amountSD,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        uint256 _amountETH,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        bytes32[] calldata _merkleProof</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    ) public view returns (bool) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+        return _verifyProof(_index, _amountSD, _amountETH, _merkleProof);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">+</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     // SETTERS</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">     function updateStaderConfig(address _staderConfig) external override onlyRole(DEFAULT_ADMIN_ROLE) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">         UtilLib.checkNonZeroAddress(_staderConfig);</span></span></span></code></pre>\n<h2 id=\"g-16-use-assembly-to-perform-efficient-back-to-back-calls\" style=\"position:relative;\"><a href=\"#g-16-use-assembly-to-perform-efficient-back-to-back-calls\" aria-label=\"g 16 use assembly to perform efficient back to back calls permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[G-16] Use assembly to perform efficient back-to-back calls</h2>\n<p>If similar external calls are performed back-to-back, we can use assembly to reuse any function signatures and function parameters that stay the same. In addition, we can also reuse the same memory space for each function call (<code>scratch space</code> + <code>free memory pointer</code>), which can potentially allow us to avoid memory expansion costs. In this case, we are also able to efficiently store the function signatures together in memory as one word, saving multiple <code>MLOAD</code>s in the process.</p>\n<p><em>There are 3 instances of this issue.</em></p>\n<h2 id=\"gasreport-output-with-all-optimizations-applied\" style=\"position:relative;\"><a href=\"#gasreport-output-with-all-optimizations-applied\" aria-label=\"gasreport output with all optimizations applied permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>GasReport</code> output with all optimizations applied</h2>\n<p><em>Note: see <a href=\"https://github.com/code-423n4/2022-06-stader-findings/blob/main/data/JCN-G.md#gasreport-output-with-all-optimizations-applied\">GasReport</a> for more details.</em></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/352#issuecomment-1600812362\">manoj9april (Stader) acknowledged</a></strong></p>\n<p><strong><a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/352#issuecomment-1618335839\">Picodes (judge) commented</a>:</strong></p>\n<blockquote>\n<p>Giving Best label over <a href=\"https://github.com/code-423n4/2022-06-stader-findings/issues/388\">issue 388</a> for the readability and the gas diff.</p>\n</blockquote>\n<hr>\n<h1 id=\"disclosures\" style=\"position:relative;\"><a href=\"#disclosures\" aria-label=\"disclosures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disclosures</h1>\n<p>C4 is an open organization governed by participants in the community.</p>\n<p>C4 Audits incentivize the discovery of exploits, vulnerabilities, and bugs in smart contracts. Security researchers are rewarded at an increasing rate for finding higher-risk issues. Audit submissions are judged by a knowledgeable security researcher and solidity developer and disclosed to sponsoring developers. C4 does not conduct formal verification regarding the provided code but instead provides final verification.</p>\n<p>C4 does not provide any guarantee or warranty regarding the security of this project. All smart contract software should be used at the sole risk and responsibility of users.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .mtk3 { color: #6A9955; }\n  .dark-default-dark .mtk4 { color: #569CD6; }\n  .dark-default-dark .mtk1 { color: #D4D4D4; }\n  .dark-default-dark .mtk11 { color: #DCDCAA; }\n  .dark-default-dark .mtk12 { color: #9CDCFE; }\n  .dark-default-dark .mtk15 { color: #C586C0; }\n  .dark-default-dark .mtk7 { color: #B5CEA8; }\n  .dark-default-dark .mtk10 { color: #4EC9B0; }\n  .dark-default-dark .mtk8 { color: #CE9178; }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>",
  "toc": "<ul>\n<li>\n<p><a href=\"#overview\">Overview</a></p>\n<ul>\n<li><a href=\"#about-c4\">About C4</a></li>\n<li><a href=\"#wardens\">Wardens</a></li>\n</ul>\n</li>\n<li><a href=\"#summary\">Summary</a></li>\n<li><a href=\"#scope\">Scope</a></li>\n<li><a href=\"#severity-criteria\">Severity Criteria</a></li>\n<li>\n<p><a href=\"#high-risk-findings-1\">High Risk Findings (1)</a></p>\n<ul>\n<li><a href=\"#h-01-vaultproxy-implementation-can-be-initialized-by-anyone-and-self-destructed\">[H-01] <code>VaultProxy</code> implementation can be initialized by anyone and self-destructed</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#medium-risk-findings-14\">Medium Risk Findings (14)</a></p>\n<ul>\n<li><a href=\"#m-01-risk-of-losing-admin-access-if-updateadmin-set-with-same-current-admin-address\">[M-01] Risk of losing admin access if `updateAdmin<code></code> set with same current admin address</a></li>\n<li><a href=\"#m-02-pauseunpause-functionalities-not-implemented-in-many-pausable-contracts\">[M-02] <code>pause/unpause</code> functionalities not implemented in many pausable contracts</a></li>\n<li><a href=\"#m-03-stader-operator-is-a-single-point-of-failure\">[M-03] Stader OPERATOR is a single point of failure</a></li>\n<li><a href=\"#m-04-updatepooladdress-functions-always-revert-when-updating-existing-poolid\">[M-04] <code>updatePoolAddress</code> functions always revert when updating existing <code>poolId</code></a></li>\n<li><a href=\"#m-05-staderoracle---strict-equal-can-cause-no-consensus-if-trusted-nodes-are-removed-before-consensus\">[M-05] <code>StaderOracle</code> - Strict equal can cause no consensus if trusted nodes are removed before consensus</a></li>\n<li><a href=\"#m-06-protocol-will-not-benefit-from-slashing-mechanism-when-remaining-penalty-bigger-than-minthreshold\">[M-06] Protocol will not benefit from slashing mechanism when remaining penalty bigger than <code>minThreshold</code></a></li>\n<li><a href=\"#m-07-mev-bots-can-win-all-the-auctions-when-auction-is-paused-\">[M-07] MEV bots can win all the auctions when <code>Auction</code> is paused </a></li>\n<li><a href=\"#m-08-corruption-of-oracle-data\">[M-08] Corruption of oracle data</a></li>\n<li><a href=\"#assessed-type-6\">Assessed type</a></li>\n<li><a href=\"#m-09-depositethovertargetweight-malicious-modifications-poolidarrayindexforexcessdeposit\">[M-09] <code>depositETHOverTargetWeight()</code> malicious modifications <code>poolIdArrayIndexForExcessDeposit</code></a></li>\n<li><a href=\"#m-10-owner-in-vaultproxysol-is-address0\">[M-10] Owner in <code>VaultProxy.sol</code> is <code>address(0)</code></a></li>\n<li><a href=\"#m-11-validatorwithdrawalvaultdistributerewards-can-be-called-to-make-operator-slashable\">[M-11] <code>ValidatorWithdrawalVault.distributeRewards</code> can be called to make operator slashable</a></li>\n<li><a href=\"#m-12-validatorwithdrawalvaultsettlefunds-doesnt-check-amount-that-user-has-inside-nodeelrewardvault-to-pay-for-penalty\">[M-12] <code>ValidatorWithdrawalVault.settleFunds</code> doesn’t check amount that user has inside <code>NodeELRewardVault</code> to pay for penalty</a></li>\n<li><a href=\"#m-13-no-bidder-has-incentive-to-bid-in-the-auction-except-doing-last-minute-mev-due-to-fixed-endblock\">[M-13] No bidder has incentive to bid in the Auction except doing last-minute <code>MEV</code> due to fixed <code>endBlock</code></a></li>\n<li><a href=\"#m-14-chainlinks-latestrounddata-may-return-a-stale-or-incorrect-result\">[M-14] Chainlink’s <code>latestRoundData</code> may return a stale or incorrect result</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#low-risk-and-non-critical-issues\">Low Risk and Non-Critical Issues</a></p>\n<ul>\n<li><a href=\"#bid-withdrawal-mechanism-in-auction-contract\">Bid Withdrawal Mechanism in <code>Auction</code> Contract</a></li>\n<li><a href=\"#streamlining-the-addbid-function-in-auction-contract-removal-of-redundant-code\">Streamlining the <code>addBid</code> function in <code>Auction</code> Contract: Removal of Redundant Code</a></li>\n<li><a href=\"#initiating-role-management-in-vaultfactory-contract-initialization-and-subsequent-function-call-permissions\">Initiating Role Management in <code>VaultFactory</code> Contract Initialization and Subsequent Function Call Permissions</a></li>\n<li><a href=\"#comments-and-code-mismatch\">Comments and Code Mismatch</a></li>\n<li><a href=\"#identical-code-logic\">Identical Code Logic</a></li>\n<li><a href=\"#missing-length-check-in-claim-function\">Missing Length Check in <code>claim</code> Function</a></li>\n<li><a href=\"#unnecessary-payable-keyword-in-withdraw-function\">Unnecessary payable Keyword in <code>withdraw</code> Function</a></li>\n<li><a href=\"#removal-of-unused-receive-and-fallback-functions\">Removal of Unused <code>receive</code> and <code>fallback</code> Functions</a></li>\n<li><a href=\"#stale-values-attributable-to-unpredictably-delayed-updates\">Stale Values Attributable to Unpredictably Delayed Updates</a></li>\n<li><a href=\"#too-harsh-deactivation-rule-on-operators\">Too Harsh Deactivation Rule on Operators</a></li>\n<li><a href=\"#typo-mistakes\">Typo mistakes</a></li>\n<li><a href=\"#repeatedly-used-instances-may-be-cached\">Repeatedly Used Instances May be Cached</a></li>\n<li><a href=\"#essential-early-checks\">Essential Early Checks</a></li>\n<li><a href=\"#activate-the-optimizer\">Activate the optimizer</a></li>\n<li><a href=\"#sd-collateral-contracts-deposit-mechanism\"><code>SD Collateral</code> Contract’s Deposit Mechanism</a></li>\n<li><a href=\"#unrestricted-access-to-the-createlot-function-in-the-auction-contract\">Unrestricted Access to the <code>createLot</code> Function in the <code>Auction</code> Contract</a></li>\n</ul>\n</li>\n<li><a href=\"#gas-optimizations\">Gas Optimizations</a></li>\n<li>\n<p><a href=\"#summary-1\">Summary</a></p>\n<ul>\n<li><a href=\"#gas-optimizations-summary\">Gas Optimizations Summary</a></li>\n<li><a href=\"#g-01-state-variables-can-be-cached-instead-of-re-reading-them-from-storage\">G-01 State variables can be cached instead of re-reading them from storage</a></li>\n<li><a href=\"#g-02-state-variables-can-be-packed-into-fewer-storage-slots\">G-02 State variables can be packed into fewer storage slots</a></li>\n<li><a href=\"#g-03-structs-can-be-packed-into-fewer-storage-slots\">G-03 Structs can be packed into fewer storage slots</a></li>\n<li><a href=\"#g-04-refactor-externalinternal-function-to-avoid-unnecessary-external-calls\">G-04 Refactor <code>external</code>/<code>internal</code> function to avoid unnecessary External Calls</a></li>\n<li><a href=\"#g-05-refactor-externalinternal-function-to-avoid-unnecessary-sload\">G-05 Refactor <code>external</code>/<code>internal</code> function to avoid unnecessary SLOAD</a></li>\n<li><a href=\"#g-06-cache-state-variables-outside-of-loop-to-avoid-readingwriting-storage-on-every-iteration\">G-06 Cache state variables outside of loop to avoid reading/writing storage on every iteration</a></li>\n<li><a href=\"#g-07-cache-external-calls-outside-of-loop-to-avoid-re-calling-function-on-each-iteration\">G-07 Cache external calls outside of loop to avoid re-calling function on each iteration</a></li>\n<li><a href=\"#g-08-refactor-code-to-avoid-unnecessary-sload\">G-08 Refactor code to avoid unnecessary SLOAD</a></li>\n<li><a href=\"#g-09-utilize-return-value-from-internal-function-to-avoid-unnecessary-sload\">G-09 Utilize return value from internal function to avoid unnecessary SLOAD</a></li>\n<li><a href=\"#g-10-multiple-address-mappings-can-be-combined-into-a-single-mapping-of-an-address-to-a-struct-where-appropriate\">G-10 Multiple address mappings can be combined into a single mapping of an address to a struct, where appropriate</a></li>\n<li><a href=\"#g-11-using-storage-instead-of-memory-for-structsarrays-saves-gas\">G-11 Using storage instead of memory for structs/arrays saves gas</a></li>\n<li><a href=\"#g-12-using-bools-for-storage-incurs-overhead\">G-12 Using bools for storage incurs overhead</a></li>\n<li><a href=\"#g-13-multiple-accesses-of-a-mappingarray-should-use-a-local-variable-cache\">G-13 Multiple accesses of a mapping/array should use a local variable cache</a></li>\n<li><a href=\"#g-14-combine-events-to-save-2-glogtopic-375-gas\">G-14 Combine events to save 2 <code>Glogtopic (375 gas)</code></a></li>\n<li><a href=\"#g-15-call-environment-variables-directly-instead-of-caching-them\">G-15 Call environment variables directly instead of caching them</a></li>\n<li><a href=\"#g-16-use-assembly-to-perform-efficient-back-to-back-calls\">G-16 Use assembly to perform efficient back-to-back calls</a></li>\n<li><a href=\"#gasreport-output-with-all-optimizations-applied\"><code>GasReport</code> output with all optimizations applied</a></li>\n</ul>\n</li>\n<li><a href=\"#disclosures\">Disclosures</a></li>\n</ul>"
}